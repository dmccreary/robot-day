{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Robot Day!","text":"<p>Welcome to the Robot Day website.  This website contains resources to help your organization host a fun kid-friendly Robot Day for your community.  These events are hosted by science museums, schools, libraries, coding clubs, science clubs, scouting troops, robotics teams, and community centers.  The events promote fun learning about STEM concepts for kids ages 5 to 18.</p> <p>We have been testing these events for almost five years, and we think we have some thoughtfully designed and tested activities that are fun and cost-effective to promote inclusion by organizations with modest budgets of just a few hundred dollars.</p> <p>In 2023 we have also started integrating generative AI into our content.  We have provided tools to help you quickly customize our content and generate MicroSims that mirror our hands-on activities.</p> <p>Robot Day can start as a 1/2 day or full-day event.  However, we hope that they evolve into recurring coding clubs, STEM clubs and robotics clubs at your organization.</p> <p>Please let me know if you have any feedback!</p> <p>Dan McCreary on LinkedIn</p>"},{"location":"about/","title":"About The Robot Day Site","text":"<p>This Robot Day website was created by Dan McCreary after he choreographed a successful Robot Day in December of 2023 at the Bakken Science Museum in Minneapolis.  Although he had lots of material for helping organizations create their own Robot Days, the content was spread over many websites.  It was time for all the content used in creating a Robot Day to come together as one unified resource to support fast searching and for everyone to share.</p>"},{"location":"about/#what-is-robot-day","title":"What is Robot Day?","text":"<p>Robot day is where an organization takes over a large room for a single-day event. The room is configured to allow participants to enter through a door and then be greeted by a person that offers them a challenge such as \"Would you like to take our robot challenge?  If you succeed you will get this robot expert sticker\".</p> <p>The participants are then given a checklist of around six \"tables\" that they must visit to finish the challenge.</p> <p>The event is configured to show all the components of a collision avoidance robot.  The robot is constructed from around $19 of parts built around a low-cost microcontroller board such as the Cytron Maker Pi RP2040 board.</p>"},{"location":"about/#philosophy","title":"Philosophy","text":"<p>If you ask almost any kid these days the question \"Do you like robots?\" you will invariably get the answer \"Yes!\".  Kids have a fundamental curiosity about machines that move around.  Our goal is to leverage this innate curiosity about the world to teach STEM concepts - and allow the kids to have a lot of fun while they are learning.  So our core value statement is \"Help kids have fun while learning STEM!\".</p>"},{"location":"about/#finding-the-froebel-gifts-for-teaching-stem","title":"Finding The \"Froebel Gifts\" for Teaching STEM","text":"<p>In the 19th century, German educator Friedrich Froebel pioneered many of the ideas we know today as \"Kindergarten\". Froebel also designed a set of play materials to provide an idealized learning environment for young children.  These Froebel Gifts were designed as hands-on devices that help children learn about their world.</p> <p>Each \"gift\" was a set of play materials ranging from simple geometric shapes to more complex building blocks and activity sets, intended to stimulate learning through play and exploration in a nurturing environment. These gifts were instrumental in the early development of educational theory and practice, influencing many educationalists and even artists and architects with their emphasis on learning through structured play and creativity.</p> <p>For the Robot Day project, we seek the \"Froebel Gifts\" for teaching STEM and robotics.  We know that these items will be physical devices that the kids will hold in their hands and will help them discover how the world around them works.  We think we have found a few of these gifts already and we are refining others.</p> <p>Some of our \"activities\" and \"project boxes\" are simple:</p> <ol> <li>A battery and an LED in a circuit with a switch.</li> <li>A battery and a motor that you can reverse directions.</li> <li>A Box with knobs that mix red, green and blue light.</li> </ol> <p>Other activities are more advanced inside to illustrate ideas:</p> <ol> <li>An H-Bridge box that shows current flowing to reverse a motor.</li> <li>A sensor with a display that changes.</li> <li>A collision avoidance robot.</li> </ol> <p>We know there are other clever devices out there we have not yet discovered.  But with your help, we hope we can work together to develop, refine and test these activities to build awesome learning experiences for our students.</p>"},{"location":"about/#focus-on-diversity-equity-and-inclusion","title":"Focus on Diversity, Equity and Inclusion","text":"<p>Although there are many wonderful robot kits you can assemble to bring to Robot Day, many of them are out of the price range of many schools, libraries and community centers.  This means that only wealthy schools can afford to create great educational experiences for students.</p> <p>But what if we could lower the cost of robotics \"labs\" to just tens of dollars?  This would mean that even organizations with modest budgets could afford to put on a Robot Day.  Creating fun but low-cost robotics activities takes some clever engineering and testing.</p> <p>We hope this website inspires every school, library, community center, scout troupe, or summer camp program to host their own Robot Day!</p>"},{"location":"about/#focus-on-hands-on-activities","title":"Focus on Hands-On Activities","text":"<p>I once attended a robotics event that was sponsored by a local University.  They brought two large expensive robots.  But the robots were roped off from the participants. The kids we not allowed near the robots!  This is not our approach.  Our goal is to get kids to touch and feel every battery, every motor, every wire, every sensor, every display, and every robot.  We want the kids to climb into the robot corral and interact with robots close up and personal.  And yes, at every event we seem to have a few kids (and mentors) step on a few robots. But that is OK.  We have low-cost interchangeable parts and a lot of hot glue! We believe that learning happens best when all the senses - including touch - are involved.</p>"},{"location":"about/#age-appropriate-activities","title":"Age Appropriate Activities","text":"<p>A four-year-old girl walks into Robot Day clutching her dad's hand.  She is shy and a little overwhelmed by all the people, noise and activity.  A greeter walks up to her and asks \"Do you like colors?\".  She nods sheepishly.  The greeter holds up a box with three knobs.  Can you turn this red knob?  As the girl turns the knob a row of lights turns red.  \"Wow!  You made it turn red!  Great Job!\" says the greeter.  \"Now can you turn this green knob?\" - and as she does the lights turn green.  Next comes the blue.  \"WOW! You can program it to make it turn any color!  I bet you are going to be a robot programmer someday!\" A huge smile breaks out on the girl.</p> <p>This dialog snippet has been repeated hundreds of times at our events.  We always try to have a few of the little RGB Boxes handy for anyone who looks like they need a gentle introduction to robots.</p> <p>This story illustrates the need for an adaptive set of activities for anyone who enters our events.  Although the event might only be advertised to ages 5-12, you can bet that younger or older siblings will attend.</p> <p>The RGB Box is somewhat of a special case.  It fits magically into the need for a simple, colorful hands-on activity for our youngest audience.  It is a favorite of our staff. Knowing how to create these devices and when to use them will be part of our lessons.</p> <p>The underlying goal is to be as flexible as possible and not force activities that are not age-appropriate for your audience.  Having a rich set of dialogs ready for each age group used to be challenging.  With tools like ChatGPT, lesson plans for all ages can be generated and taped to the back of the presentation boards.</p>"},{"location":"about/#creative-commons-license","title":"Creative Commons License","text":"<p>All content is licensed under Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p> <p>Please read our Creative Commons License Agreement for details.</p>"},{"location":"concepts/","title":"High-Level Concepts in STEM Robotics","text":"<p>This page is a high-level list of some of the concepts that we teach during Robot Days.  We continually revisit this list to add new content and remove content that didn't meet our standards.</p> <p>We have not yet figured out how to get all these concepts into fun, but low-cost hands-on activities.  Some of the concepts, like battery drain, are best taught through a virtual simulation using a Battery Drain MicroSim. It takes too long for students to watch a real battery drain down to zero. This is a work in progress.</p>"},{"location":"concepts/#robot-parts","title":"Robot Parts","text":"<ol> <li>What are the key parts of a robot?</li> <li>Where do they get their power from?</li> <li>How do they move around?</li> <li>How do they sense the world around them?</li> <li>What do they use to gather signals and control their motion?</li> </ol>"},{"location":"concepts/#power-sources","title":"Power Sources","text":"<ol> <li>What do power plugs like wall outlets and USB ports do?</li> <li>What are batteries?</li> <li>What are solar cells?</li> <li>How do switches control the flow of power?</li> <li>What is an open switch?</li> <li>What is a closed switch?</li> </ol>"},{"location":"concepts/#batteries","title":"Batteries","text":"<ol> <li>What different types of batteries are there?</li> <li>Coin cell batteries for small devices like hearing aids</li> <li>Small lightweight LiPo rechargeable for drones</li> <li>AA and AA</li> <li>9-volt batteries for smoke detectors</li> <li>Larger LiPo rechargeable (18650)</li> <li>Batteries have polarity - positive and negative</li> <li>More batteries mean more power</li> <li>Batteries have capacity ratings (milli-amp hours)</li> <li>Batteries have voltage ratings (such as 1.5 volts, 9 volts, or 3.2 volts)</li> </ol> <p>Batteries Activity</p>"},{"location":"concepts/#motors","title":"Motors","text":"<ol> <li>What are the parts of a simple DC hobby motor?</li> <li>How many wires are there?</li> <li>How do you make a motor run with a battery?</li> </ol>"},{"location":"concepts/#motor-direction","title":"Motor Direction","text":"<ol> <li>For robots to move both forward and backward they need to be able to reverse the direction of a motor</li> <li>How can we change the direction of a motor?</li> </ol>"},{"location":"concepts/#h-bridge","title":"H-Bridge","text":"<ol> <li>What are H-Bridges are circuits?</li> <li>How can they reverse the direction of a motor by opening and closing switches?</li> <li>How do they change the direction of current flow?</li> <li>What if you turn on both switches on one side?</li> </ol>"},{"location":"concepts/#sensors","title":"Sensors","text":"<ol> <li>How many senses do people have?</li> <li>If you were a robot that had to avoid crashing into a wall, what types of sensors would you use?</li> </ol>"},{"location":"concepts/#potentiometers","title":"Potentiometers","text":"<ol> <li>What is a potentiometer?</li> <li>How does it work?</li> <li>How many wires does it have?</li> <li>What are the names of the parts?</li> <li>How is it used?</li> <li>Can I control a motor speed with it?</li> </ol>"},{"location":"concepts/#bump-sensors-microswitches","title":"Bump Sensors - MicroSwitches","text":"<ol> <li>What is a microswitch?</li> <li>How would a robot use it to avoid bumping into things?</li> <li>What action would the robot take if it bumped into an object?</li> <li>What would be the impact of using three switches in front of a robot?</li> </ol>"},{"location":"concepts/#infrared-ir-light-distance-sensors","title":"Infrared (IR) Light Distance Sensors","text":"<ol> <li>What is an IR distance sensor?</li> <li>How do they work?</li> <li>Can you see the light?  If not, then why?</li> <li>What are the different parts of an ultrasonic sensor?</li> <li>How much do they cost?</li> <li>How far away do they reach?</li> <li>How sensitive are they?</li> <li>Can they detect small objects in their field?</li> <li>How quickly do they work?</li> <li>Do they work in bright sunlight near a window?</li> </ol>"},{"location":"concepts/#ultrasonic-distance-sensors","title":"Ultrasonic Distance Sensors","text":"<ol> <li>What is an ultrasonic distance sensor?</li> <li>How do they work?</li> <li>Can you hear them?  If not, then why?</li> <li>What are the different parts of an ultrasonic sensor?</li> <li>How much do they cost?</li> <li>How far away do they reach?</li> <li>How sensitive are they?</li> <li>Can they detect small objects in their field?</li> <li>How quickly do they work?  How many times per second can they send a signal?</li> <li>Do they work in a noisy room?</li> <li>Do they work in the dark?</li> </ol>"},{"location":"concepts/#time-of-flight-distance-sensors","title":"Time of Flight Distance Sensors","text":"<ol> <li>What is a Time-of-Flight (ToF) distance sensor?</li> <li>How do they work?</li> <li>Can you see their light?  If not, then why?</li> <li>Are they dangerous to the eye?</li> <li>What are the different parts of a ToF sensor?</li> <li>How much do they cost?</li> <li>How far away do they reach?</li> <li>How sensitive are they?</li> <li>Can they detect small objects in their field?</li> <li>How quickly do they work?  How many times per second can they send a signal?</li> <li>Do they work in a brightly lit room?</li> <li>Do they work in the dark?</li> <li>Why do we love ToF sensors on our robots?</li> </ol>"},{"location":"concepts/#displays","title":"Displays","text":"<ol> <li>What are robot displays?</li> <li>Why are they needed?</li> <li>What is the internal state of a robot?</li> <li>Why would you want to observe the internal state of a robot?</li> </ol>"},{"location":"concepts/#leds","title":"LEDs","text":"<ol> <li>What are LEDs?</li> <li>How do they work?</li> <li>How many wires does it have?</li> <li>What are the parts of an LED?</li> <li>What is the Anode and Cathode?</li> <li>What colors do LEDs come in?</li> <li>How much current do they use?</li> <li>Can you burn out LEDs?</li> <li>How much do they cost?</li> <li>What is a current-limiting resistor?</li> </ol> <p>Tip: tell the story of the tall girl with red hair named Ann.  She has a small black cat at her feet.  The long pin is the positive Annode!</p>"},{"location":"concepts/#rgb-leds","title":"RGB LEDs","text":"<ol> <li>What is an RGP LED?</li> <li>How many wires does it have?</li> <li>What are the basic colors?</li> <li>Can you mix the colors?</li> </ol>"},{"location":"concepts/#neopixels","title":"NeoPixels","text":"<ol> <li>What is an NeoPixel?</li> <li>Why do kids love them?</li> <li>How many wires do they have?</li> <li>What is name of each wire?</li> <li>Can they be connected together?</li> <li>How much current does each NeoPixel draw?</li> <li>How do you program them?</li> <li>How much do they cost?</li> </ol>"},{"location":"concepts/#neopixel-strips-rings-and-matrix","title":"NeoPixel Strips, Rings and Matrix","text":"<ol> <li>What is a NeoPixel strip?</li> <li>What is a NeoPixel ring?</li> <li>How do you program them?</li> <li>How much do they cost?</li> <li>What are the spacing options?</li> <li>What are the waterproofing options?</li> </ol>"},{"location":"concepts/#oled-displays","title":"OLED Displays","text":"<ol> <li>What is an OLED display?</li> <li>Why are they so nice?</li> <li>What sizes do they come in?</li> <li>How much do they cost?</li> <li>How do you program them?</li> <li>How many wires do they have?</li> <li>What colors do they come in?</li> <li>Can we use them with our robots?</li> </ol>"},{"location":"concepts/#microcontrollers","title":"Microcontrollers","text":"<ol> <li>What are microcontrollers?</li> <li>Are they like the brain of a robot?</li> <li>What are the different types?</li> <li>How much do they cost?</li> <li>How much memory do they have?</li> <li>How fast do they run?</li> <li>How do you program them?</li> </ol>"},{"location":"concepts/#older-arduino-microcontrollers","title":"Older Arduino Microcontrollers","text":"<ol> <li>Why are they no longer popular?</li> <li>Why do kids like Python?</li> <li>Why does Python not run on an Arduino?</li> </ol>"},{"location":"concepts/#raspberry-pi-pico","title":"Raspberry Pi Pico","text":"<ol> <li>Low cost - $4</li> <li>Lots of memory</li> </ol>"},{"location":"concepts/#raspberry-pi-pico-w","title":"Raspberry Pi Pico W","text":"<ol> <li>Added wireless operation</li> </ol>"},{"location":"concepts/#cytron-maker-pi-rp2040","title":"Cytron Maker Pi RP2040","text":"<ol> <li>Integrated chips to control motors</li> </ol>"},{"location":"concepts/#collision-avoidance-robots","title":"Collision Avoidance Robots","text":"<ol> <li>What is a collision avoidance robot?</li> <li>What are the parts?</li> <li>How do they work?</li> <li>How do you program them?</li> <li>What are the parameters?</li> <li>How do you tune them?</li> </ol>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"course-description/","title":"Robot Day Course Description","text":""},{"location":"course-description/#what-is-robot-day","title":"What is Robot Day?","text":"<p>Robot day is where an organization takes over a large room for a single-day event to get kids interested in STEM, coding and Robotics.</p> <p>The target audience of Robot Day is students in the 4th to 9th grades that are curious about how robots work.</p> <p>The room is configured to allow participants to enter through a door and then be greeted by a host greeter. The greeter offers them a challenge such as \"Would you like to take our robot challenge?  If you succeed you will get this robot expert sticker\".</p> <p>The participants are then given a checklist of around six \"tables\" that they must visit to finish the challenge.  Each table has a set of items on display and a poster board that describes the items.  Behind each table is a facilitator that asks the participants to pick up an item and explore it.  Many of the items have on/off power button and a display that changes based on how the participant uses the device.</p> <p>The event is configured to show all the components of a collision avoidance robot.  The robot is constructed from around $19 of parts built around a low-cost microcontroller board such as the Cytron Maker Pi RP2040 board.</p> <p>Here is a breakdown of the tables and the final robot coral:</p>"},{"location":"course-description/#table-1-welcome-table","title":"Table 1: Welcome table","text":"<ul> <li>Participants are given a checklist</li> <li>Participants put their name on the top of the checklist</li> </ul>"},{"location":"course-description/#table-2-robot-batteries","title":"Table 2: Robot Batteries","text":"<ul> <li>Different types of batteries</li> <li>Battery polarity: positive and negative</li> <li>What are dead batteries?</li> <li>Testing batteries</li> <li>Rechargeable batteries</li> <li>Why do power cords get in the way of robots?</li> <li>Why do robots need batteries?</li> </ul>"},{"location":"course-description/#table-3-robot-motors","title":"Table 3: Robot Motors","text":"<ul> <li>Create a motor circuit with a battery and a DC hobby motor</li> <li>Note that both the battery and the motor have black and red wires (polarity)</li> <li>Completing the battery circuit with a conducting wire</li> <li>Can you get the motor to reverse direction by mixing the colors of the wires?</li> </ul>"},{"location":"course-description/#table-4-controlling-motors","title":"Table 4: Controlling Motors","text":"<ul> <li>Reversing a motor direction with a single switch</li> <li>The H-bridge circuit simulator</li> <li>Adjusting motor speed with more power</li> <li>Using a power knob</li> <li>Pulse with modulation</li> </ul>"},{"location":"course-description/#table-5-sensors","title":"Table 5: Sensors","text":"<ul> <li>Buttons on a breadboard with LEDs</li> <li>Knobs (rotary encoder knobs)</li> <li>Time-of-flight sensors</li> <li>Ultrasonic sensors</li> <li>Compass direction sensor</li> <li>Tilt and turn sensors (accelerometers)</li> </ul>"},{"location":"course-description/#table-6-displays","title":"Table 6: Displays","text":"<ul> <li>LEDs and RGB LEDs</li> <li>LED strips with adjustment knobs</li> <li>Character and graphic displays</li> <li>The OLED display</li> <li>Smartwatch displays</li> <li>Display tradeoffs - cost and quality</li> </ul>"},{"location":"course-description/#table-7-microcontrollers","title":"Table 7: Microcontrollers","text":"<ul> <li>What is a microcontroller?</li> <li>How does a program control the rules of a system?</li> <li>What is a collision-avoidance robot?</li> <li>How does a robot avoid crashing into a wall?</li> <li>Rules for turning when you get too close to the wall</li> <li>Example: When it is getting close to a wall, the robot should...</li> <li>Adjusting the settings in your robot</li> </ul>"},{"location":"course-description/#robot-corral","title":"Robot Corral","text":"<p>The robot corral is an area on the ground with a six-inch high border fence around a 10x10 foot area that the collision avoidance robots can roam around in.</p> <ul> <li>Student are encouraged to pick up a robot and place it in the robot corral.</li> <li>Students are shown where the power switch is and how to activate the rules.</li> <li>Students can step into the corral to make the robots move around and note that they try to avoid hitting the wall of the corral and they can use their hands to block the robot's path and get it to change direction.</li> </ul>"},{"location":"glossary/","title":"Glossary of Terms for Robot Day","text":""},{"location":"glossary/#checklist","title":"Checklist","text":"<p>A checklist of items that students need to complete to earn their robot expert badge.</p>"},{"location":"glossary/#microsim","title":"MicroSim","text":"<p>Online simulations of the physical world are created with generative AI tools such as ChatGPT.</p> <p>Most MicroSims are created using OpenAI's ChatGPT generating p5.js simulations.</p> <ul> <li>MicroSims Web Site</li> <li>MicroSims Robotics Examples</li> </ul>"},{"location":"glossary/#robot-corral","title":"Robot Corral","text":"<p>A region of the Robot Day floor space that is dedicated to allowing the collision avoidance robots to run free.  The corral is typically about six feet in diameter and the wall height is about six inches.  The corral fence is usually made of cardboard that can be quickly folded up.  Some corrals have \"NASCAR\" type signage that references the sponsors of your local Robot Day event.</p> <p></p>"},{"location":"glossary/#robot-expert-badge","title":"Robot Expert Badge","text":"<p>Small badges are given to students who complete their checklist of activities. We provide a variety of PowerPoint templates you can customize to add your school name or event name to the badge.  Badges can be printed on mailing address labels and cut up into squares.</p> <p></p> <p></p>"},{"location":"kits/","title":"Purchasing Parts and Kits for Robot Day","text":"<p>Let's be honest here.  Finding low-cost electronic parts and robotics kits that focus on teaching computational thinking is hard. Many online retailers focus on customers with high disposable incomes who are not price-sensitive.  Retailers like Amazon frequently take 30% margins and robot parts suppliers are forced to pay Amazon's reseller fees and use Amazon's warehouses.  Amazon uses every opportunity to use AI to keep its profit margins high.  That puts the burden on teachers and  event organizers to be clever and find the best value for your organization.  We hope these suggestions help you find value for your Robot Day funding.</p> <p>As one example, let's take the \"2WD Smart Robot Car Chassis\" problem.</p> <p>Here are some identical items:</p> <p></p> <p>The price for the chassis alone varies from $3.80 to $95!  You can find similar items by searching for \"2WD Smart Robot Car Chassis\".</p> <p>The first item is probably priced by an AI agent that is a little out of touch with reality.  The second from the retailer  BOTs and four DOTs is a lot more reasonable. But the Cytron listing clearly not only has a lower price, but the price goes down if you order multiple items.</p> <p>If you don't have worries about budgets, the vendor SparkFun sells high-quality parts and you can filter by which robots support MicroPython like Kitronik Autonomous Robotics Platform for Pico.  This kit is nice but does not support room for a breadboard on top like the standard Smart Car Chassis.</p>"},{"location":"kits/#avoid-older-arduino-microcontrollers","title":"Avoid Older Arduino Microcontrollers","text":"<p>With the incredible growth of the new Raspberry Pi Pico and RP2040 parts, there is still a flood of older Arduino robot kits on the market. These kits are severely limited by a lack of RAM (2K compared to the Pico's 264K) and are not breadboard-friendly.  I would strongly suggest avoiding these kits.  To use OLED displays we need lots of RAM.</p> <p>Arduino software also requires our users to compile their code and re-download the binaries each time the program code is changed.  This works well for small projects but starts to get slower as our programs get more complex.</p> <p>MicroPython is interpreted so that after any small change the program runs immediately.  Our coding labs depend on fast feedback, so MicroPython is a great fit.</p>"},{"location":"kits/#suggested-parts","title":"Suggested Parts","text":"<p>We are going to go into a sample Robot Day parts list in detail.  Here is a summary of some of the parts we suggest.</p> <ol> <li>Raspberry Pi Pico - Just $4 at MicroCenter</li> <li>Breadboard - the \"400-tie\" 1/2 size versions are fine for our projects</li> <li>2WD Smart Robot Car Chassis - includes motors and battery pack</li> <li>Motor Controller - or Cytron Maker Pi RP2040 - used to drive the motors</li> <li>Distance sensor - time of flight sensor preferred</li> <li>Wires - 20 gauge is the best hookup wire</li> <li>Batteries - Costco has great prices</li> </ol>"},{"location":"kits/#breadboards-wire-leds-and-sensors","title":"Breadboards, Wire, LEDs and Sensors","text":"<p>You can also purchase bulk breadboards, LEDs, wire, and sensor packages for your Robot Day events.</p>"},{"location":"kits/#breadboards","title":"Breadboards","text":"<p>We like to use the 400-tie breadboards.  We use hot glue to keep the pins from slipping out when kids are using them.  You can find them on eBay for $1.50 each.</p> <p></p>"},{"location":"kits/#hookup-wire","title":"Hookup Wire","text":"<p>We love multi-colored solid-core hookup wire:</p> <p></p>"},{"location":"kits/#leds","title":"LEDs","text":"<p>Here is an example of a kit of 200 LEDs for $6:</p> <p></p> <p>We use these with 330-ohm resistors for our 3.3V power from the Pico.</p>"},{"location":"kits/#push-buttons","title":"Push Buttons","text":"<p>Many of our breadboard projects use these low-cost push buttons. You can find them on eBay for about 10 cents each.</p> <p></p> <p>You can use the following keywords to find them on eBay:</p> <p>B3F 12x12x7.3mm tactile switch key buttons QTY 10PCS</p> <p>You can also purchase the 6mm versions but they are a little harder for kids to press.  You can also purchase the buttons and caps separably.</p> <p>10PCS New B3F Tactile Switch Key Button Switch 12x12x7.3mm Blue</p> <p></p>"},{"location":"kits/#sensor-kit","title":"Sensor Kit","text":"<p>Rather than purchase individual sensors, you can get a kit that contains 37 sensors.  These can be connected using Female-to-Female Dupont connectors with no soldering required.</p> <p>Raspberry Pi Pico 37 in 1 Sensor Kit</p> <p></p>"},{"location":"kits/#cytron-maker-pi-rp2040","title":"Cytron Maker Pi RP2040","text":"<p>This is our favorite robotics board by far.  It is well-designed with many features that make it easy for the students to test their motors and connections.</p> <p>MAKER-PI-RP2040 at Digikey - great value for $11</p> <p>The Cytron Maker Pi RP2040 Robotics Board</p>"},{"location":"kits/#elecrow-raspberry-pi-pico-advanced-kit","title":"Elecrow Raspberry Pi Pico Advanced Kit","text":"<p>At $31, the Elecrow Raspberry Pi Pico Advanced Kit is an excellent value.</p> <p></p> <p></p>"},{"location":"kits/#sparkfun","title":"Sparkfun","text":"<p>Kitronik Autonomous Robotics Platform for Pico</p>"},{"location":"kits/#sunfounder-raspberry-pi-pico-robot-kit","title":"SunFounder Raspberry Pi Pico Robot Kit","text":"<p>Although this kit uses 4 motors (not the usual 2), and it uses the older ultrasonic distance sensor, at $71 it still has some good value.  Note that the LiPo batteries are included.</p> <p>Raspberry Pi Pico Smart Car Kit </p>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"personas/","title":"Robot Day Personas","text":"<p>The Robot Day website is designed to support different roles within any learning organization.  The relationship between each role and this website is called the <code>persona</code> of the role.</p>"},{"location":"personas/#sample-prompt","title":"Sample Prompt","text":"<pre><code>I am creating an intelligent book and website called \"Robot Day\"\nwhich supports a single-day event at an educational organization that\npromotes fun STEM and AI activities and promotes a modern\ncurriculum of hands-on project-based learning activities.\n\nFirst define the term \"personas\" for different stakeholders\nthat might use this intelligent book and website.  Then give examples\nof six personas like teacher, student, school administrator,\nparent etc.\n\nFor each persona, give an example of how hyper-personalization\ntechnologies could be used to change the content for this\nintelligent online website using generative AI.\n\nWe use Raspberry Pi hardware and MicroPython in these activities.\nReturn each persona in a level 3 markdown section.\n</code></pre>"},{"location":"personas/#sample-response","title":"Sample Response","text":""},{"location":"personas/#definition-of-personas","title":"Definition of \"Personas\"","text":"<p>Personas are semi-fictional representations of the different categories of people who might engage with a product, system, or service. They are typically based on research and data-driven insights about users' motivations, needs, challenges, and behavior patterns. In the context of the \"Robot Day\" intelligent book and website, personas represent the various stakeholders---teachers, students, parents, administrators, and others---who will interact with the online resource. Each persona helps guide design and content decisions, ensuring that the platform is tailored to address the unique goals, interests, and skill levels of each user group.</p>"},{"location":"personas/#six-example-personas-and-how-hyper-personalization-could-be-applied","title":"Six Example Personas and How Hyper-Personalization Could Be Applied","text":"<p>Note</p> <p>These personas have been lightly edited and reformatted to be more appropriate for the context of Robot Day events.  You can see the original ChatGPT session here.</p>"},{"location":"personas/#persona-1-the-elementary-school-teacher","title":"Persona 1: The Elementary School Teacher","text":"<p>Profile: A grade 4 classroom teacher who wants simple, engaging projects that introduce basic robotics concepts.</p> <p>Hyper-Personalization Example: The website uses generative AI to analyze the teacher's subject area focus, age group, past successful lesson plans, and skill level. It then automatically curates a set of step-by-step project guides, aligned to curriculum standards and suitable for 9--10-year-olds. The content might include simplified language, recommended class-length videos, and printable worksheets, all adjusted based on the teacher's past usage and expressed preferences (e.g., shorter activities on busy weeks, or more challenging projects if previous ones went smoothly).</p>"},{"location":"personas/#persona-2-the-middle-school-student-enthusiast","title":"Persona 2: The Middle School Student Enthusiast","text":"<p>Profile: A 12-year-old who loves tinkering with robots and has built a few simple microcontroller projects with MicroPython.</p> <p>Hyper-Personalization Example: The system, noticing the student's browsing history and performance on interactive quizzes, offers more advanced tutorials featuring robotics coding challenges, gamified quizzes, and AI-driven feedback. The generative AI might create custom \"missions\" that incorporate the student's favorite themes (e.g., sports robots or robotic pets) and suggest next-level components to explore, adapting complexity as the student's understanding improves.</p>"},{"location":"personas/#persona-3-the-high-school-stem-club-leader-student","title":"Persona 3: The High School STEM Club Leader (Student)","text":"<p>Profile: A 16-year-old who leads a small robotics club at school, interested in competition-level projects.</p> <p>Hyper-Personalization Example: The platform detects that this user frequently views competitive robotics resources. It generates a customized feed featuring advanced tutorials, interviews with experts, timelines for building more sophisticated robots (e.g., drones, robotic arms), and AI-driven suggestions on how to prepare for local robotics competitions. The system might also connect this leader to advanced forums or Q&amp;A sessions with mentors, adapting the content to help them tackle more intricate engineering and coding challenges.</p>"},{"location":"personas/#persona-4-the-school-administrator-curriculum-coordinator","title":"Persona 4: The School Administrator / Curriculum Coordinator","text":"<p>Profile: A principal or curriculum coordinator looking to integrate modern STEM activities into the school's yearly plan.</p> <p>Hyper-Personalization Example: The website's generative AI filters through robotics curricula, case studies, and professional development workshops. It then delivers administrative-friendly dashboards that show teacher readiness metrics, recommended training modules, and summaries of cost-effective resource bundles for classroom use. The personalization might highlight grants, compliance checklists, and alignment with educational standards (like NGSS or state-specific frameworks) to help the administrator make informed decisions.</p>"},{"location":"personas/#persona-5-the-parent-guardian-of-a-curious-child","title":"Persona 5: The Parent / Guardian of a Curious Child","text":"<p>Profile: A parent who wants to support their child's interest in robotics but is not tech-savvy.</p> <p>Hyper-Personalization Example: The system recognizes that the user is a parent and provides a simplified, friendly interface with step-by-step guidance on how to set up safe, at-home robotics activities. Using generative AI, the platform may create customizable \"family activity kits,\" recommend inexpensive starter kits, and generate personalized newsletters with \"Robotics at Home\" tips. It could also adapt the complexity of explanations based on the child's age and the parent's feedback (e.g., simpler language, fewer technical terms, and more visual explanations).</p>"},{"location":"personas/#persona-6-the-after-school-program-coordinator","title":"Persona 6: The After-School Program Coordinator","text":"<p>Profile: A community center staff member who organizes STEM clubs and maker-spaces for kids aged 8--14.</p> <p>Hyper-Personalization Example: The system identifies the coordinator's role and generates multi-level lesson plans suitable for a range of ages and skill levels. It provides timelines, materials lists, and session outlines that adjust as the coordinator logs attendance or provides feedback. Generative AI could suggest thematically varied projects (e.g., eco-friendly robotics, robotics applied to art), adapt instructions to local resource availability, and even produce promotional flyers or sign-up sheets tailored to the center's branding and demographic.</p>"},{"location":"personas/#summary","title":"Summary","text":"<p>By creating personas and employing hyper-personalization through generative AI, the \"Robot Day\" platform can ensure that each stakeholder engages with content that feels tailored, accessible, and relevant---ultimately fostering a more effective and enjoyable learning experience.</p>"},{"location":"process/","title":"Robot Day Process","text":""},{"location":"process/#sample-greeting-dialog","title":"Sample Greeting Dialog","text":"<p>The greeter is our most important role.  Their job is to make everyone feel welcome and get excited about learning about robots. Greeters need to have a strong awareness of a student's mood and anxiety levels.</p> <p>Greeter: Do you like robots? Yes? Would you like to take our robot challenge and earn this cool robot badge? Yes? Cool!</p> <p>Note</p> <p>If the student looks apprehensive you can just suggest they look around and let the greeter know if they want to take the challenge later.</p> <p>Next Step: Greeter brings the student over to the registration table]</p>"},{"location":"process/#checking-in","title":"Checking In","text":"<p>Welcome Table Volunteer: Write your name at the top of this form.  If you visit all six tables you will get this cool badge!  You can start at the Batteries table here!</p>"},{"location":"process/#table-activities","title":"Table Activities","text":"<p>A typical list of tables for a large 24'x36' foot room will have the following tables:</p> <ol> <li>Welcome and Checkin Table</li> <li>Batteries Table</li> <li>Motors Table</li> <li>Sensors Table</li> <li>Displays Table</li> <li>MicroControllers Table</li> </ol> <p>Which leads to the Robot Corral</p>"},{"location":"process/#get-badge","title":"Get Badge","text":"<p>Can I see your slip?</p> <p>Wow!  I see you completed all the tasks!  Congratulations!!</p> <p>Here is a collection of badges.  </p> <p></p> <p>You can pick any color you like.</p> <p>TODO: Add pink as a color.</p>"},{"location":"process/#assessment","title":"Assessment","text":"<p>As people are leaving we just ask a few questions.</p> <p>Kids:</p> <p>Did you have a good time?</p> <p>What was your favorite part?</p> <p>Parents:</p> <p>Do you have any questions on how kids can learn more about robots and STEM?</p> <p>If parents are interested in learning more we provide them with a QR code for Code Savvy:</p> <p>http://codesavvy.org</p>"},{"location":"promoting/","title":"Promoting Your Robot Day","text":""},{"location":"promoting/#prompt","title":"Prompt","text":"<pre><code>Please help us brainstorm on ideas to help promote a\nRobot Day at a school. Our goal is to find cost-effective\nways to get our stakeholders excited about promoting\nSTEM and AI in our school.\n\nReturn each suggested idea in a level three markdown header.\n</code></pre>"},{"location":"promoting/#response","title":"Response","text":"<ol> <li> <p>Host a Robotics Show-and-Tell Featuring Student Projects</p> </li> <li> <p>Invite Local Robotics Clubs or University Teams for a Demonstration</p> </li> <li> <p>Organize a Low-Cost \"Build-a-Bot\" Challenge with Recycled Materials</p> </li> <li> <p>Offer Short STEM Workshops Led by Tech-Savvy Parents or Alumni</p> </li> <li> <p>Create a Virtual Tour of Local Tech Companies' Robotics Labs</p> </li> <li> <p>Run a Mini Coding Bootcamp Using Free Online Tutorials and Tools</p> </li> <li> <p>Launch a \"Robot Mascot\" Design Competition with Simple Art Supplies</p> </li> <li> <p>Share Success Stories and Testimonials via Social Media and Email</p> </li> <li> <p>Provide a Simple Hands-On Robot Kit for a Class Raffle</p> </li> <li> <p>Develop a \"STEM Careers\" Wall of Fame Featuring Successful Alumni</p> </li> </ol>"},{"location":"promoting/#detailed-plan-prompt","title":"Detailed Plan Prompt","text":"<pre><code>Now for each idea, return a detailed plan of\nhow to implement these ideas.\n</code></pre> <p>Note</p> <p>The following text was lightly edited to include links directly to resources we manage.  The original transcript is here</p>"},{"location":"promoting/#host-a-robotics-show-and-tell-featuring-student-projects","title":"Host a Robotics Show-and-Tell Featuring Student Projects","text":"<p>Plan:</p> <ol> <li>Identify Participants: Ask teachers who have worked on robotics or STEM projects to select a few standout student projects. Invite these students to present.</li> <li>Schedule and Venue: Reserve a classroom or gymnasium after school. Set a specific date and time convenient for families and other students to attend.</li> <li>Promotion: Send out flyers, emails, and social media posts announcing the event. Include photos of previous projects to spark interest.</li> <li>Format of Presentations: Have each student or group of students do a short (5--10 min) demo of their robot and explain how it works, what they learned, and the challenges they faced.</li> <li>Engagement Activities: Provide a simple Q&amp;A session after each presentation and a \"vote for your favorite project\" activity to encourage audience participation.</li> <li>Follow-Up: Post photos and short videos of the show-and-tell on the school website and social media channels, highlighting student achievements.</li> </ol>"},{"location":"promoting/#invite-local-robotics-clubs-or-university-teams-for-a-demonstration","title":"Invite Local Robotics Clubs or University Teams for a Demonstration","text":"<p>Plan:</p> <ol> <li>Research Contacts: Reach out to local robotics clubs, high school teams, or nearby university robotics departments.</li> <li>Set a Date: Coordinate a day that aligns with Robots Day activities and works for the visiting team.</li> <li>Demonstration Setup: Provide a classroom, auditorium, or open area where the visiting team can set up their robot(s). Ensure access to power and Wi-Fi if necessary.</li> <li>Student Interaction: Arrange for a Q&amp;A session. Encourage students to ask about the engineering design process, coding challenges, and how to get involved in robotics clubs.</li> <li>Promotion: Notify parents, send invitations to community members, and put up posters in hallways.</li> <li>Media Coverage: Record the demonstration, take photos, and share these on the school website or social media, creating lasting excitement around STEM.</li> </ol>"},{"location":"promoting/#organize-a-low-cost-build-a-bot-challenge-with-recycled-materials","title":"Organize a Low-Cost \"Build-a-Bot\" Challenge with Recycled Materials","text":"<p>Plan:</p> <ol> <li>Materials Collection: Ask students and parents to donate common recyclables like cardboard boxes, plastic bottles, straws, and old toy parts.</li> <li>Rules and Guidelines: Set simple rules---teams of 2--4 students must build a \"robot\" that can perform a simple task (e.g., move on wheels, spin a propeller). No expensive electronics required.</li> <li>Workshop Day: Host a session where teams brainstorm and sketch out their robot designs before building. Provide a small set of craft tools (glue guns, tape, scissors).</li> <li>Judging Criteria: Evaluate projects on creativity, functionality, and presentation. Have a panel of teachers or older students serve as judges.</li> <li>Awards: Offer inexpensive rewards like printed certificates or a photo feature in the school newsletter.</li> <li>Showcase: Display the completed robots in a hallway or library to inspire others.</li> </ol> <p>You can find examples of STEM Robots under $20 at the STEM Robots website.</p>"},{"location":"promoting/#offer-short-stem-workshops-led-by-tech-savvy-teachers-parents-or-alumni","title":"Offer Short STEM Workshops Led by Tech-Savvy Teachers, Parents or Alumni","text":"<p>Plan:</p> <ol> <li>Identify Volunteers: Send out a call through parent groups, alumni networks, and newsletters asking for individuals with STEM expertise to volunteer as workshop leaders.</li> <li>Workshop Topics: Offer short, focused sessions (30--60 minutes) on basic coding, simple robotics assembly, or AI concepts tailored to student age groups.</li> <li>Scheduling: Host these workshops throughout Robots Day at different times so students can attend multiple sessions.</li> <li>Classroom Setup: Provide a classroom with basic tech (computers or tablets, if possible). For hands-on sessions, prepare simple kits or online simulators.</li> <li>Student Registration: Have students sign up for the workshops in advance to manage class size.</li> <li>Follow-Up Materials: Provide participants with a one-page cheat sheet or link to online resources so they can continue exploring after the event.</li> </ol> <p>You can find a detailed plan in our Two Hour STEM Robot Workshop for Teachers.</p>"},{"location":"promoting/#create-a-virtual-tour-of-local-tech-companies-robotics-labs","title":"Create a Virtual Tour of Local Tech Companies' Robotics Labs","text":"<p>Plan:</p> <ol> <li>Contact Companies: Reach out to local robotics startups or established tech firms, asking if they can host a short virtual tour (live video conference or pre-recorded video).</li> <li>Preview Content: Confirm that the video content is appropriate and geared toward a school audience.</li> <li>Tech Setup: Use a classroom projector or the school auditorium's AV system to show the virtual tour to students during Robots Day. Ensure stable internet connection.</li> <li>Discussion Guide: Before viewing, give students key points to look out for (e.g., types of robots, roles of engineers, interesting applications of AI).</li> <li>Q&amp;A Session: If live, arrange a short Q&amp;A with a company representative. If recorded, teachers can lead a discussion post-viewing.</li> <li>Reflection Activity: Have students write a short response or draw what inspired them from the tour.</li> </ol>"},{"location":"promoting/#run-a-mini-coding-bootcamp-using-free-online-tutorials-and-tools","title":"Run a Mini Coding Bootcamp Using Free Online Tutorials and Tools","text":"<p>Plan:</p> <ol> <li>Curriculum Selection: Choose a free online coding platform (e.g., Scratch, Code.org) suitable for the school's student age range.</li> <li>Short Sessions: Schedule brief, 30-minute sessions throughout Robots Day where students learn basic programming concepts.</li> <li>Volunteer Instructors: Recruit tech-savvy high school students, teachers, or parent volunteers to assist as mentors.</li> <li>Progressive Challenges: Start with a super-simple tutorial, then provide slightly harder challenges as students advance.</li> <li>Showcase Success: Encourage students to show their finished projects on a shared screen. Print out \"I'm a Coder!\" badges or stickers.</li> <li>Take-Home Links: Provide links to continue learning at home, encouraging sustained interest beyond Robots Day.</li> </ol>"},{"location":"promoting/#launch-a-robot-mascot-design-competition-with-simple-art-supplies","title":"Launch a \"Robot Mascot\" Design Competition with Simple Art Supplies","text":"<p>Plan:</p> <ol> <li>Announce the Contest: Describe that students should design a robot mascot that symbolizes the school's commitment to STEM and AI.</li> <li>Guidelines: Limit materials to paper, markers, pencils, or low-cost craft supplies. Students can draw or create small 3D models.</li> <li>Submission Drop Box: Set up a submission box in the library or hallway. Give students one week prior to Robots Day to submit.</li> <li>Judging Panel: Assemble a small group of teachers, older students, and possibly a local artist to judge the entries on creativity and relevance.</li> <li>Display Entries: On Robots Day, exhibit all entries in a prominent area. Highlight the winner and runners-up.</li> <li>Use the Mascot: Incorporate the winning design into future robotics newsletters or t-shirts to keep excitement alive year-round.</li> </ol>"},{"location":"promoting/#share-success-stories-and-testimonials-via-social-media-and-email","title":"Share Success Stories and Testimonials via Social Media and Email","text":"<p>Plan:</p> <ol> <li>Collect Stories: Interview students who have enjoyed STEM clubs, teachers who have successfully integrated robotics into their curriculum, and parents who have noticed positive changes.</li> <li>Short Videos and Quotes: Create brief video interviews or pull quotes. Include photos of students working on robots or coding projects.</li> <li>Regular Posts: Leading up to Robots Day, share one story per week on the school's social media channels and in email newsletters.</li> <li>Highlight Achievements: Emphasize how these stories connect to bigger goals---improved problem-solving skills, creativity, and readiness for future careers.</li> <li>Encourage Engagement: Ask followers to comment, like, or share posts to spread the excitement.</li> <li>After the Event: Post a Robots Day recap featuring highlights, turnout numbers, and student reflections.</li> </ol>"},{"location":"promoting/#provide-a-simple-hands-on-robot-kit-for-a-class-raffle","title":"Provide a Simple Hands-On Robot Kit for a Class Raffle","text":"<p>Plan:</p> <ol> <li>Inexpensive Kit Sourcing: Purchase or request a donation of a basic robotics kit (e.g., a simple programmable car kit) that's affordable yet educational.</li> <li>Raffle Tickets: Give out free raffle tickets to students who attend certain Robots Day activities (like workshops or the show-and-tell).</li> <li>Drawing the Winner: Conduct the raffle draw at the end of Robots Day in a public setting, like the auditorium.</li> <li>Announce Winner Publicly: Celebrate the winner, encourage them to share their building experience, and ask them to bring the finished robot to school later to show classmates.</li> <li>Promotional Angle: Promote the raffle beforehand on flyers and social media to build excitement.</li> <li>Follow-Up: Feature the winner's completed robot in a newsletter or social media post to inspire others.</li> </ol>"},{"location":"promoting/#develop-a-stem-careers-wall-of-fame-featuring-successful-alumni","title":"Develop a \"STEM Careers\" Wall of Fame Featuring Successful Alumni","text":"<p>Plan:</p> <ol> <li>Alumni Outreach: Contact former students who have pursued STEM degrees or careers. Ask them to submit a short bio, a photo, and a sentence or two about their work.</li> <li>Create Posters: Design simple, attractive posters with the alumni's name, graduation year, college attended (if applicable), and current role.</li> <li>Display Location: Choose a central hallway or library wall. Arrange the posters in a clean, visually appealing layout.</li> <li>Rotating Content: Each year, update the display with new alumni stories to keep it fresh.</li> <li>Integrate QR Codes: Include QR codes linking to short video interviews or LinkedIn profiles where students can learn more.</li> <li>Classroom Integration: Teachers can assign reflective prompts or discussions about the variety of STEM paths represented, reinforcing that robotics and AI open doors to many future opportunities.</li> </ol>"},{"location":"scaling/","title":"Scaling Down and Up","text":"<p>You can scale your robot day to be a single table and cost under $100 to large events that cost over $10,000 and last for multiple days.  Here are some suggestions.</p>"},{"location":"scaling/#single-table-event-set-up","title":"Single Table Event Set Up","text":"<p>If you have a science fair you can start with a single table.  This might include:</p> <ol> <li>Batteries - packs of 2-3 AA batteries</li> <li>LEDs</li> <li>Small DC Hobby Motors</li> <li>Breadboards</li> <li>Distance sensor (IR)</li> <li>Microcontroller</li> <li>Collision Avoidance Robot in a corral on the floor</li> </ol>"},{"location":"scaling/#two-table-set-up","title":"Two Table Set Up","text":"<p>Same as the single table but add a second table for sensors and displays</p> <ol> <li>Table 1:<ol> <li>Batteries - packs of 2-3 AA batteries</li> <li>LEDs</li> <li>Small DC Hobby Motors</li> <li>Breadboards</li> </ol> </li> <li>Table 2:<ol> <li>Sensors</li> <li>Displays</li> </ol> </li> </ol> <p>Collision Avoidance Robot in a corral on the floor.</p>"},{"location":"scaling/#three-table-set-up","title":"Three Table Set Up","text":"<p>Add a third table and include more motor labs, PWM labs, more sensors and more displays</p> <ol> <li>Table 1:<ol> <li>Batteries - packs of 2-3 AA batteries</li> <li>LEDs</li> <li>Small DC Hobby Motors</li> <li>Breadboards</li> </ol> </li> <li>Table 2:<ol> <li>Sensors</li> </ol> </li> <li>Table 3<ol> <li>Displays</li> </ol> </li> </ol>"},{"location":"scaling/#four-table-setup","title":"Four Table Setup","text":"<ol> <li>Registration, Batteries and Motors</li> <li>Sensors</li> <li>Displays</li> <li>Microcontrollers</li> </ol> <p>Collision Avoidance Robot in a corral on the floor.</p>"},{"location":"scaling/#five-table-set-up","title":"Five Table Set Up","text":"<ol> <li>Batteries and Motors</li> <li>Sensors</li> <li>Displays</li> <li>Microcontrollers</li> <li>Coding</li> </ol> <p>Collision Avoidance Robot in a corral on the floor.</p>"},{"location":"scaling/#six-table-set-up","title":"Six Table Set Up","text":"<ol> <li>Registration and Batteries</li> <li>Motors</li> <li>Sensors</li> <li>Displays</li> <li>Microcontrollers</li> <li>Coding</li> </ol>"},{"location":"scaling/#ten-table-large-event","title":"Ten Table Large Event","text":"<p>This event has about $5,000 in materials and requires 10-mentors each with 40-hours of training.</p> <ol> <li>Welcome and Registration</li> <li>Batteries</li> <li>Motors</li> <li>Sensors and Cameras</li> <li>Displays</li> <li>Microcontrollers and Raspberry Pi</li> <li>Coding, UNIX Shell</li> <li>AI Racing League, Machine Learning</li> <li>Calibration</li> <li>GPU and Machine Learning</li> </ol> <p>Collision Avoidance Robot in a corral on the floor. AI Racing League Track</p>"},{"location":"tables/","title":"Robot Day Tables","text":"<p>Tables are really just logical groupings of activities that start with simple concepts and build up to the full collision avoidance robot.  At most events, a table is a six-foot by 2.5-foot table with one or more hands-on activities on it.  How many activities you have per table will depend on your audience and the list of activities you have prepared for the Robot Day.</p> <p>The focus is to get kids to use their hands and fingers to make a change and see how their actions change the world.  This can be seeing a motor spinning, an LED brightness change, a sensor showing a value, or a display changing a pattern.</p> <p>The key is to design activities in that kids must use their bodies to interact and trigger a change in what they see or hear.  They must be given time to wiggle their hands to see how sensors can see the world around them.</p>"},{"location":"tables/#welcome-table","title":"Welcome Table","text":"<p>This is the table that has both the student checklists and the badges.</p> <p></p>"},{"location":"tables/#challenge-scripts-for-the-welcome-table","title":"Challenge Scripts for the Welcome Table","text":"<p>\"Do you like robots?\"</p> <p>\"Would you like to take a robot challenge?\"</p> <p>If you complete all six challenges you will earn a \"Robot Expert\" sticker.</p> <p>If they say yes, guide them to the welcome table and strongly encourage them to put their name at the top of a checklist of six tables.</p>"},{"location":"tables/#batteries-table","title":"Batteries Table","text":"<p>The batteries table is usually right after the welcome table.  Some events have the battery activities on the same table as the welcome table.</p> <p>Here is a sample board for the batteries table:</p> <p></p> <p>There are three other activities:</p> <ol> <li>Batteries</li> <li>Battery Testing</li> <li>Battery Recharging</li> </ol>"},{"location":"tables/#motors-table","title":"Motors Table","text":"<p>We have many activities that accompany our motor table. The motors activities page will give you some ideas of projects to try.</p> <p>Here are some short video demos of the project boxes:</p> <ul> <li>H-Bridge</li> <li>Pulse Width Modulation</li> </ul>"},{"location":"tables/#sensors","title":"Sensors","text":"<ul> <li>Sensors</li> <li>Microswitch</li> <li>Potentiometers</li> <li>Time of Flight</li> <li>Moving Rainbow</li> </ul>"},{"location":"tables/#display-table","title":"Display Table","text":"<p>Our display table has about a dozen different types of robot displays.  We start out talking about how a single LED can tell you the status of a robot such as \"I have power\".  LEDs are very inexpensive (about a penny each) and easy to hook up.</p> <p>From there we slowly build up to more complicated graphical displays.  Our favorite display is the 128x64 OLED display.  Our robot faces use these displays.</p> <p>Displays</p>"},{"location":"tables/#microcontroller-table","title":"MicroController Table","text":"<p>Microcontrollers</p>"},{"location":"topic-list/","title":"Robotics Day Topics List","text":""},{"location":"topic-list/#hands-on-lab-topics-for-collision-avoidance-robotics-class","title":"Hands-On Lab Topics for Collision Avoidance Robotics Class","text":"<p>Using the Cytron Maker Pi RP2040 board, here's a list of hands-on lab activities that focus on practical experiments and projects:</p> <ol> <li>Robot Chassis Assembly: Hands-on experience in assembling a basic robot chassis.  Parts include motors, batteries, controller boards and sensors.</li> <li>Robot Chassis Design Tradeoffs: What are the pros and cons of placing the battery pack on the bottom of the robot?  What if you want to add a breadboard or display to the top of the robot in the future?</li> <li>Grove Connectors: Learn about how Grove connectors allow you to connect sensors to the Cytron board without the need for soldering.</li> <li>Motor Connection Testing: Use the buttons on the Cytron board to test the motor connections.  Does each wheel go both forward and reverse?</li> <li>Thonny Desktop Setup: Learn how to download and install Thonny on different platforms such as Windows, Mac and Linux.</li> <li>Run Python in Thonny: Run Python locally on your desktop.  Show how you write code, run the code and save the code into your workspace.</li> <li>Checkout Code from GitHub: Learn to install GitHub and run the git clone program from a terminal or command line shell window.</li> <li>Run MicroPython on the RP2040: Learn how to run MicroPython code on the Cytron microcontroller.</li> <li>Blink Onboard LED: Blink one of the on-board blue LEDs.  Create a list of the LED pins and light them all up.</li> <li>Turn NeoPixels Colors: Write a program to turn the first NeoPixel red, green and blue.  Change the relative brightness of the three colors.</li> <li>DC Motor Control: Turn motors on or off. Change motor direction.</li> <li>Change Motor Speed:  Learn to use the PWM library to control the motor speed.  Discover the minimum power needed to turn a motor.</li> <li>MicroPython External Libraries: Learn how to create the /lib folder on the RP2040 and load a library such as the library for the time-of-flight sensor.</li> <li>I2C Bus Scanner: How can you tell if your sensor is talking to the microcontroller?  The I2C scanner program can help.</li> <li>Sensor Data Collection: Gathering and analyzing data from the time-of-flight distance sensor.</li> <li>Time of Flight Sensor Calibration:  The raw data from the time-of-flight sensor is uncalibrated.  How do we calculate the distance in centimeters or inches?</li> <li>Time of Flight Range:  How far away can the time-of-flight sensor detect objects?  What about objects that are near to robot?</li> <li>Time of Flight Alignment: What happens if the sensor is pointed too far down?  What is the ideal angle for detecting objects in a robot corral?</li> <li>NeoPixel Programming Workshop: Creating custom light patterns with NeoPixels.</li> <li>Sound Generation with MicroPython: Write programs to display different sounds through the onboard speaker.</li> <li>Designing a Collision Avoidance System: Building and programming a basic collision avoidance system.  Learn about backing up and turning.</li> <li>Distance Threshold: Adjust the distance the robot backs up and turns around.  Try different values of this parameter.</li> <li>Tuning Collision Avoidance Parameters: Experimenting with different settings to optimize performance.  Adjust the speed, distance and turning time.</li> <li>Randomizing Turn Direction: Add code that allows the robot to randomly turn right or left.</li> <li>Logging Turn Events: Add code that writes a log file of turning events.  Upload this data to the host computer and analyze the data.</li> <li>Battery Management and Monitoring: Learning about power supply and battery management in robotics.  Study the current draw on the motors at different speeds.</li> <li>Battery Life Estimation: Given a new set of batteries, how long would the robot work under different conditions?  How does the speed impact the time a robot will last?</li> <li>Obstacle Detection and Navigation: Programming the robot to navigate through a course with obstacles.  How can our robot turn and decide if a right or left turn is better?</li> <li>Simple Mapping Techniques: Introduction to basic mapping using sensor data.  What are the limitations of the robot's ability to sense its direction?</li> <li>Using Buttons:  The Cytron board includes two user-programmable momentary push buttons.  Add code to read the buttons and change the speed of the robot.</li> <li>Playing Sound Files: Play prerecorded sound files using the speaker.</li> <li>Robot Debugging: Troubleshooting and fixing issues in the collision avoidance robot.</li> </ol>"},{"location":"topic-list/#adding-an-led-stick","title":"Adding an LED Stick","text":"<p>One cost-effective way to allow students to see the state of the robot is to add a low-cost 8-pixel LED stick.  Although this part does require some soldering, it is a great way to get students interested in creating patterns on colorful bright displays.</p>"},{"location":"topic-list/#display-robot","title":"Display Robot","text":"<p>These activities assume that the base robot kit has a 128x64 OLED display added to it.  The display has a 7-wire ribbon cable that uses one grove port and has three connections to the servo pins.</p> <ol> <li>Adding a Display: Adding an OLED display to the robot.  Understand the way that power, ground and the five data signals are used.</li> <li>Creating a Display Cable Using a 7-wire Dupont cable to create a display connector to the Cytron board using </li> <li>Displaying the Robot State: Display the basic state of the robot on the screen including distance sensor data and power.</li> <li>Building a User Interface: Creating a basic UI for robot control.</li> </ol>"},{"location":"topic-list/#adding-additional","title":"Adding Additional","text":""},{"location":"activities/","title":"Sample Robot Day Activities","text":"<p>This section of our website features the hands-on activities that we have developed for Robot Day.  The activities usually begin with simple discussions about batteries and motors.  They then proceed through sensors, displays and microcontrollers.</p> <p>Our activities wrap up at the Robot Corral when the students get to interact directly with the collision avoidance robots.</p> <p>Each activity can be tuned to the grade level and interests of the students.  These activities are designed to appeal to a wide range of students through dialogs that have been customized for grades 1 to 12.</p> <p>Depending on your experience with these events, you can do a single activity on each table or combine multiple activities on tables.  For example, the motor table can combine four different hands-on activities.</p>"},{"location":"activities/batteries/","title":"Batteries Labs","text":"<p>The first lab consists of showing students a board with a bunch of different types of batteries on it.  Typical questions include:</p> <ol> <li>Have you seen any of these batteries around your home?</li> <li>Which ones can you recharge?</li> <li>What happens when the energy in an AA battery runs out?  What do you do with it?</li> <li>How do you know when a battery does not have any power left?</li> <li>What are the two ends of the AA battery called?  Why is positive and negative important?</li> </ol> <p>For older participants, you can go into more detailed concepts such as current, voltage, battery ratings, battery weights and the risks of starting a fire with some types of batteries such as LiPo batteries.</p> <p>We have sample discussions and lesson plans here:</p> <ol> <li>5th Grade Discussion</li> <li>9th Grade Lesson Plan (1-hour)</li> <li>11th Grade Discussion</li> </ol>"},{"location":"activities/batteries/#generating-new-lesson-plans-for-different-grade-levels","title":"Generating New Lesson Plans for Different Grade Levels","text":"<p>You can generate your own dialogs and lesson for different grade levels by just uploading the image of the board to ChatGPT and give the following prompts.</p>"},{"location":"activities/batteries/#three-minute-discussion","title":"Three Minute Discussion","text":"<p>When students come up to the table we want the discussion to last about 2-3 minutes followed by some questions.  This means that we want the discussion to be about 1-page long.  We can then tape these dialogs to the back of the boards for the volunteers to use.</p> <p>Create a one-page dialog explaining the batteries in this photo.</p>"},{"location":"activities/batteries/#one-hour-lesson-plan-prompt","title":"One Hour Lesson Plan Prompt","text":"<p>Please create a detailed _one-hour-long lesson plan_ for a 9th-grade robotics class about batteries based on the photo above.  You can assume all the students will have access to these batteries as well as wire, motors, battery meters and volt-ohm meters.  Please return your response as a single raw markdown file.</p>"},{"location":"activities/battery-recharging/","title":"Battery Recharging","text":"<p>One of the key topics we discuss in our sessions on batteries is the cost of using disposable batteries. They not only take up room in our landfills but they use carbon to manufacture and transport the batteries.</p> <p>Sustainability is an important topic in many schools and the battery recharging activities can be a key session to reinforce lessons on creating sustainability in schools.</p> <p>Our goal is to try to use more rechargeable batteries in our Robot Day Events and still keep our kids safe.</p> <p>Warning</p> <p>Never leave recharging batteries unattended.  Batteries in robots can become damaged if kids step on them. Poor battery management can start a fire. Pay special attention to the polarity of any LiPo batteries you purchase. The connector polarities are not standardized and the batteries you purchase online might have a reverse polarity of the boards we use.</p>"},{"location":"activities/battery-recharging/#hands-on-activity","title":"Hands-On Activity","text":""},{"location":"activities/battery-recharging/#materials","title":"Materials","text":"<ol> <li>Several partially charged and fully charged 18360 batteries connected to recharging boards</li> <li>USB current and voltage monitors.  We can get these on eBay for a few dollars.</li> </ol>"},{"location":"activities/battery-recharging/#steps","title":"Steps","text":"<ol> <li>Show the parts of the setup including batteries, holder and charge protection board</li> <li>Demonstrate when you plug in the USB port, the recharge board red LED goes on red that the battery is charging.  The USB current meter shows how much current is being drawn to charge the battery.</li> <li>Use a metaphor of \"drinking too fast\" makes the batteries sick</li> <li>Show that a fully charged the battery will have a blue or green light to show it is fully charged</li> <li>Show that the voltage of a fully charged battery is about 3.9 volts</li> </ol> <p>Note</p> <p>Current and voltage are abstract topics and might be better for older students</p>"},{"location":"activities/battery-recharging/#advanced-recharging-topics-for-project-builders","title":"Advanced Recharging Topics for Project Builders","text":"<p>We have many projects that are used at regular events.  We have two places where we use rechargeable batteries.</p> <ol> <li>On our robots that use the Cytron Maker Pi RP2040</li> <li>On our projects that just need a single 3.7 volt 18360 battery</li> </ol> <p>Note that we never leave these batteries unattended with our students.</p> <p>Our big challenge when using rechargeable batteries is to protect the life of these batteries.  We do this by using special circuits that prevent overcharging or over-discharge.</p>"},{"location":"activities/battery-recharging/#cytron-battery-recharging","title":"Cytron Battery Recharging","text":"<p>The batteries in our robots use 3.7 volt LiPo batters we can purchase for about $12. They can be attached directly under the Smart Car Chassis using a cable tie.</p> <p></p> <p>The Cytron board has connectors for these batteries and the batteries are automatically recharged when we plug in the USB connector.  The batteries are rated at 1,500 mAh are they often run at a slow speed in a robot corral for 2-3 hours.</p> <p>Here you can see a battery being recharged and drawing about .554 amps.</p> <p></p> <p>Battery recharging circuits must limit the amount of current that is being used to recharge a battery.  You never want to hook a LiPo batter directly up to a power source!</p>"},{"location":"activities/battery-recharging/#using-the-tp4056a-lithium-battery-charging-board-to-protect-your-batteries","title":"Using the TP4056A Lithium Battery Charging Board to Protect Your Batteries","text":"<p>Luckily, we can purchase a small low-cost board for protecting our batteries.  This is called the TP4056A board.  It has a USB connector, two connectors for the LiPo battery and two wires that go into our project.  A red LED is turned on when the battery is charging and a blue or green light is turned on once the battery is fully charged.</p>"},{"location":"activities/battery-recharging/#integrating-recharging-into-robot-days","title":"Integrating Recharging into Robot Days","text":"<p>Although LiPo batteries can be hazardous, we think by proper management we can mitigate the risks.  Ask your community to volunteer for other projects such as families collecting old batteries and testing batteries.</p>"},{"location":"activities/battery-recharging/#generating-custom-talking-points","title":"Generating Custom Talking Points","text":""},{"location":"activities/battery-recharging/#sample-tp4056a-prompt","title":"Sample TP4056A Prompt","text":"<pre><code>Create a list of talking points for how to use the TP4056A LiPo battery \nrecharging board for a 9th-grade robotics class.\nUse the image above as a reference.\nMention the USE input, the battery connections and the output terminals.\nMention the red LED to show that the battery is being charged.\nMention the other LED to show the battery is fully charged.\nTalk about when these boards are used, the pros and cons and any fire \ndanger that could result if the batteries are not handled correctly.\n</code></pre>"},{"location":"activities/battery-recharging/#sample-response","title":"Sample Response","text":""},{"location":"activities/battery-recharging/#part-1-components-identification","title":"Part 1: Components Identification","text":"<ul> <li>Introduce the TP4056A charging board with the uploaded image.</li> <li>Identify and discuss the USB connector used for power input.</li> <li>Explain the battery connectors (B+ and B-), where the LiPo battery is connected.</li> <li>Describe the output connectors (OUT+ and OUT-) for connecting the charged battery to the load.</li> <li>Highlight the status LEDs indicating the charging status and full charge.</li> </ul>"},{"location":"activities/battery-recharging/#part-2-theory-of-operation","title":"Part 2: Theory of Operation","text":"<ul> <li>Discuss how the charging board operates when a power source is connected to the USB connector.</li> <li>Explain how the board regulates charging and prevents overcharging with its built-in circuitry.</li> <li>Cover the function of each component to ensure a safe charging cycle.</li> </ul>"},{"location":"activities/battery-recharging/#part-3-safety-first","title":"Part 3: Safety First","text":"<ul> <li>Emphasize the importance of handling LiPo batteries with care.</li> <li>Discuss common hazards such as short circuits, overcharging, and their potential to cause fires.</li> <li>Demonstrate the correct way to connect and disconnect batteries from the TP4056A.</li> </ul>"},{"location":"activities/battery-test/","title":"Battery Testing","text":"<p>Here are two images of battery testers.</p> <p></p> <p></p> <p>We can load the images both into ChatGPT and then ask questions about them.</p>"},{"location":"activities/battery-test/#chatgpt-prompt","title":"ChatGPT Prompt","text":"<p>Given these two images of analog and digital battery tests, design a five-minute discussion you might have with a 5th-grade student who is interested in robots.  The collision avoidance robots need the energy in the batteries to drive around.</p>"},{"location":"activities/battery-test/#chatgpt-response","title":"ChatGPT Response","text":"<p>Below is a sample dialog we can use with a 5th-grade student. We reviewed the dialog and made a few minor changes.</p> <p>You: Hey there! I heard you're interested in robots. That's really cool! Do you know what makes them move around?</p> <p>Student: Yeah! They need power to drive their motors, right?</p> <p>You: Exactly! And that power comes from batteries. Let's look at these two battery testers. Can you tell the difference between the two?</p> <p>Student: One has numbers and the other has a color gauge.</p> <p>You: That's right! The one with numbers is called a digital battery tester. It gives us a precise voltage reading, like 1.22 volts for this battery. The other one, with the colors, is an analog battery tester. It shows us if the battery is good, low, or needs to be replaced.</p> <p>Student: So, which one is better for our robot?</p> <p>You: Good question! For robots, especially the ones that avoid running into things, we need to make sure they have enough power. A digital tester can tell us exactly how much power is left, so we know when to change the battery.</p> <p>Student: What happens if the battery is low?</p> <p>You: If a robot's battery is low, it might not move as fast or react quickly enough to avoid obstacles. That's why we always check the batteries before we start a robot.</p> <p>Student: Can I try testing a battery?</p> <p>You: Of course! Here, use this digital tester and press the battery against the contacts. What's the voltage?</p> <p>Student: It says 1.22 volts!</p> <p>You: Right. And since a brand new AA battery has about 1.5 volts, 1.22 volts means it's been used a bit but should still work. Now let's try the analog tester. What does it show?</p> <p>Student: It's in the green area! So it's good?</p> <p>You: Yes! Green means the battery still has enough power for our robot. Now, if you were building a robot, how do you think you would decide when to change its batteries?</p> <p>Student: Hmm, maybe I'd use the digital one to check if it's below 1.2 volts because then it might not work as well.</p> <p>You: That's a smart idea! With robots, we need consistent power for the best performance. So monitoring the battery life is important. You're thinking like a real robotics engineer now!</p> <p>Student: Awesome! Can we try putting the battery in a robot and see it move?</p> <p>You: Let's do that. Remember, if our robot starts slowing down, what do you think we should do?</p> <p>Student: Check the battery with the tester!</p> <p>You: Perfect! You're ready to keep your robot moving and avoid all those obstacles.</p>"},{"location":"activities/breadboard/","title":"Robot Day Breadboard Activity","text":"<p>Solderless breadboards are a core tool we use in our Robot Day activities.  In many Robot Day events, most students just see the boards being used in projects.  They often don't get a chance to use them due to time limitations.  However, if students have enough time we can get them to use them and try different components.</p>"},{"location":"activities/breadboard/#getting-around-the-small-wires-problem","title":"Getting around the Small Wires Problem","text":"<p>One of our biggest challenges with using individual components like LEDs and resistors is that the wires can be very small and thin.  They bend easily making it difficult for students to push them into the connection points.</p> <p>One solution is to purchase an ECell: Breadboard-Plugin Components Pack for about $20.  Although the parts will cost much more, they can be a good way to demonstrate how breadboards work.</p>"},{"location":"activities/breadboard/#purchasing-an-electronics-starter-kit","title":"Purchasing an Electronics Starter Kit","text":"<p>For under $15, you can purchase an Electronic Component Starter Kit.  These kits include many standard items that we can use to learn about electronics.  For a typical Robot Day activity we can just focus on learning how to use a breadboard to light up LEDs using buttons.</p> <p>You can get more ideas by visiting our Electronics Starter Kit page.  These pages also have tips on using AI to generate lesson plans.</p>"},{"location":"activities/breadboard/#breadboard-connection-poster","title":"Breadboard Connection Poster","text":""},{"location":"activities/breadboard/#leds-on-breadboard","title":"LEDs on Breadboard","text":"<p>We will be using a combination of breadboards, batteries, LEDs, resistors and buttons to demonstrate circuits.</p> <p>Here is an example of three LEDs connected to buttons:</p> <p></p> <p>Students are each asked to press one of the buttons and observe the results.  Then they are asked to press multiple buttons together and observe the results.</p> <p>As a challenge, you can ask them if they could think of a project that would allow a single button to turn on two LEDs or an LED that would require two buttons to be pressed together to get an LED to to turn on.</p>"},{"location":"activities/breadboard/#pico-on-breadboard","title":"Pico On Breadboard","text":"<p>Note that each row that ends in \"3\" or \"8\" is marked with a black magic marker so the students can find the right pins.</p>"},{"location":"activities/breadboard/#breadboard-display-cable","title":"Breadboard Display Cable","text":"<p>Note the color of the wires match the colors on the breadboard.</p> <p></p> <p>Note</p> <p>Using breadboards requires some fine motor skills.  This activity might not be appropriate for students that are easily frustrated by small wires that bend easily.</p>"},{"location":"activities/breadboard/#discussion-with-a-5th-grade-student","title":"Discussion with a 5th grade student","text":""},{"location":"activities/breadboard/#5th-grade-prompt","title":"5th Grade Prompt","text":"<pre><code>Consider the image attached.  Create a five minute description of the board on for a 5th grade student at a school's Robot Day event.  Talk about how solderless breadboards are\nused to build prototypes of robot projects.  Make sure to talk about power rails and other parts of the breadboard.\n\nReturn the response in a single raw markdown file.\n</code></pre>"},{"location":"activities/breadboard/#5th-grade-response","title":"5th Grade Response","text":"<p>Hello, young inventors! Today, I'm going to show you a special tool that helps us build robots. It's called a solderless breadboard, and it's very important for making our robot ideas come to life without using any solder\u2014that\u2019s the metal glue that permanently sticks electronic parts together.</p> <p>Imagine you're creating a Lego castle, and you want to make sure everything fits perfectly before you glue it all together. A solderless breadboard is like the table you build your Lego castle on, but for electronics. You can put pieces on it, take them off, and move them around until everything works just right. That's what engineers do when they're testing their robot designs.</p>"},{"location":"activities/breadboard/#what-is-a-solderless-breadboard","title":"What is a Solderless Breadboard?","text":"<p>A solderless breadboard is a rectangular board with lots of tiny holes in it. Each hole is connected to certain other holes in a special pattern. You can push electronic components like wires, resistors, and chips into these holes to connect them together and make an electrical circuit.</p>"},{"location":"activities/breadboard/#power-rails","title":"Power Rails","text":"<p>On the sides of the breadboard, there are long rows of holes that are called power rails. These are like the main roads that deliver power to all the parts of your robot's circuit. One rail is for the positive power, and one is for the negative or ground connection. It's important to make sure you connect your battery or power supply to these rails correctly, or your circuit won't work!</p>"},{"location":"activities/breadboard/#building-a-circuit","title":"Building a Circuit","text":"<p>When you're building a circuit on a breadboard, you follow a diagram that tells you where to put each part. It's a bit like following a treasure map to find the treasure. Instead of X marking the spot for treasure, the diagram shows you where to place each component to make your robot do amazing things.</p>"},{"location":"activities/breadboard/#why-use-a-breadboard","title":"Why Use a Breadboard?","text":"<p>Using a breadboard is great for testing because you can easily change parts of your circuit. If something doesn\u2019t work, you can just pull out the parts and try something else. This is perfect when you're just starting to learn how to make robots because it lets you experiment and learn without any mistakes being permanent.</p> <p>Now that you know about the breadboard, you're on your way to becoming a robot-building expert. Have fun creating your very own robot circuits and bringing your incredible ideas to life!</p>"},{"location":"activities/computer-vision/","title":"Robot Day Computer Vision","text":"<p>For this lab, we use a Raspberry Pi Model 4 with a Camera.</p> <p>The Raspberry Pi will run an object recognition software. We hold things in front of the camera and the item will be recognized and a yellow square will surround the object.</p>"},{"location":"activities/displays/","title":"Robot Labs Displays","text":""},{"location":"activities/displays/#how-much-ram-does-a-128x64-monochrome-frame-buffer-take","title":"How much RAM does a 128x64 monochrome frame buffer take?","text":"<pre><code># Dimensions of the display\nwidth = 128\nheight = 64\n\n# Total number of pixels\ntotal_pixels = width * height\n\n# Total number of bits (since 1 pixel = 1 bit)\ntotal_bits = total_pixels\n\n# Convert bits to bytes (1 byte = 8 bits)\ntotal_bytes = total_bits / 8\n\n# Convert bytes to kilobytes (1 kilobyte = 1024 bytes)\ntotal_kilobytes = total_bytes / 1024\nprint(total_kilobytes)\n</code></pre> <p>Result</p> <p>1</p>"},{"location":"activities/donkey-car/","title":"Robot Day Donkey Car Activity","text":"<p>The AI Racing League is a project designed to introduce Python, AI and machine learning to high-school and college students. As a result, all our Robot Day activities have one or more Donkey Cars available for use at these events.</p>"},{"location":"activities/donkey-car/#chatgpt-prompt","title":"ChatGPT Prompt","text":"<pre><code>Create a five minute description of a Donkey Car\nfor a student at a Robotics Day event.\nAssume the student is a fifth-grade student.\n\nInclude the following facts:\n\n- The Donkey Car is a autonomous car built on a RC car chassis.\n- It has a Raspberry Pi model 4 and a camera.\n- It uses a chassis that is created on a 3D printer\n- The parts together cost about $310\n- The car is used to teach AI and machine learning.\n- It is programmed with Python.\n- To control it, students drive around a track and\ngather images. These images are use to train\na neural network.  The neural network then is\nused to predict the speed and steering to\ndrive the car around a track without a human.\n\nReturn the result in a single pure raw markdown file.\n</code></pre>"},{"location":"activities/donkey-car/#chatgpt-response-for-a-5th-grade-student","title":"ChatGPT Response for a 5th-grade Student","text":"<p>Title: Discovering the World of Robotics: The Donkey Car</p> <p>Grade Level: 5th Grade Event: Robotics Day</p>"},{"location":"activities/donkey-car/#introduction","title":"Introduction","text":"<p>Hello young explorers! Today, we're going to learn about a really cool invention in the world of robotics called the Donkey Car. It's not just any car; it's a smart car that can drive itself!</p>"},{"location":"activities/donkey-car/#what-is-a-donkey-car","title":"What is a Donkey Car?","text":""},{"location":"activities/donkey-car/#overview","title":"Overview","text":"<ul> <li>The Donkey Car is an autonomous car built on a remote-controlled (RC) car chassis.</li> <li>It's equipped with a Raspberry Pi Model 4 and a camera, acting as its brain and eyes.</li> <li>The chassis of the car is created using a 3D printer.</li> <li>The total cost of the parts is about $310.</li> <li>This car is an amazing tool for teaching AI (Artificial Intelligence) and machine learning.</li> </ul>"},{"location":"activities/donkey-car/#programming-and-control","title":"Programming and Control","text":"<ul> <li>The Donkey Car is programmed using the Python language.</li> <li>To train it, students drive it around a track to gather images.</li> <li>These images are used to train a neural network.</li> <li>The neural network helps the car predict the right speed and steering to drive autonomously, without human intervention.</li> </ul>"},{"location":"activities/donkey-car/#learning-with-the-donkey-car","title":"Learning with the Donkey Car","text":""},{"location":"activities/donkey-car/#why-its-cool","title":"Why It's Cool","text":"<ul> <li>It's like a mini-robot that you can teach to drive itself.</li> <li>You get to learn about how machines can learn and make decisions.</li> <li>It's a hands-on experience in programming and robotics.</li> </ul>"},{"location":"activities/donkey-car/#the-future-of-robotics","title":"The Future of Robotics","text":"<ul> <li>By understanding and working with the Donkey Car, you're taking a step into the future of technology and robotics.</li> <li>Maybe one day, you'll create your own smart machines!</li> </ul>"},{"location":"activities/donkey-car/#conclusion","title":"Conclusion","text":"<p>Isn't it amazing how a simple RC car can be turned into a self-driving vehicle? That's the power of technology and creativity! Keep exploring, and learning, and maybe you'll be the one to invent the next big thing in robotics.</p> <p>Thank you for joining me on this exciting journey into the world of the Donkey Car. Enjoy the rest of your day at the Robotics Day event!</p>"},{"location":"activities/donkey-car/#11th-grade-response","title":"11th Grade Response","text":"<p>Prompt:</p> <p>Can you now generate another response, but for an 11th-grade robotics student who is learning Python?  Again, please make sure you return the result in a single pure raw Markdown file that is easy to download.  Use a level 3 header for each section.</p>"},{"location":"activities/donkey-car/#chatgpt-response","title":"ChatGPT Response","text":""},{"location":"activities/donkey-car/#deep-dive-into-the-donkey-car-an-autonomous-vehicle-project","title":"Deep Dive into the Donkey Car: An Autonomous Vehicle Project","text":"<p>Grade Level: 11th Grade Focus: Python Programming in Robotics Event: Advanced Robotics Workshop</p>"},{"location":"activities/donkey-car/#introduction_1","title":"Introduction","text":"<p>Welcome to the advanced session of our Robotics Workshop! Today, we'll be exploring the fascinating world of the Donkey Car, an autonomous vehicle that offers a practical and engaging way to apply your Python programming skills.</p> <p>Title: Understanding the Donkey Car</p>"},{"location":"activities/donkey-car/#the-concept","title":"The Concept","text":"<ul> <li>The Donkey Car is an autonomous car built on an RC (remote-controlled) car chassis.</li> <li>It employs a Raspberry Pi Model 4 and a camera for processing and vision capabilities.</li> <li>Unique to this project, the chassis is designed and created using a 3D printer.</li> <li>The overall cost of the parts is approximately $310.</li> </ul>"},{"location":"activities/donkey-car/#educational-perspective","title":"Educational Perspective","text":"<ul> <li>The primary goal is to teach concepts of AI (Artificial Intelligence) and machine learning in a hands-on environment.</li> <li>Programming the Donkey Car in Python offers a real-world application of your coding skills.</li> </ul>"},{"location":"activities/donkey-car/#technical-aspects","title":"Technical Aspects","text":""},{"location":"activities/donkey-car/#programming-with-python","title":"Programming with Python","text":"<ul> <li>Python serves as the backbone for programming the Donkey Car. It's versatile and powerful, ideal for interfacing with hardware and implementing machine learning algorithms.</li> <li>You'll learn to write Python scripts that control the car's movements and process input from its sensors.</li> </ul>"},{"location":"activities/donkey-car/#machine-learning-and-neural-networks","title":"Machine Learning and Neural Networks","text":"<ul> <li>The core of the Donkey Car's intelligence lies in its ability to learn and make decisions.</li> <li>By gathering images while manually driving the car around a track, you'll create a dataset.</li> <li>This dataset is then used to train a neural network which enables the car to autonomously predict speed and steering angles.</li> </ul>"},{"location":"activities/donkey-car/#project-implementation","title":"Project Implementation","text":""},{"location":"activities/donkey-car/#hands-on-learning","title":"Hands-On Learning","text":"<ul> <li>You'll engage in assembling the car, programming the Raspberry Pi, and calibrating the camera.</li> <li>The project is iterative \u2013 you'll test, observe, and tweak the code and hardware settings to optimize performance.</li> </ul>"},{"location":"activities/donkey-car/#real-world-applications","title":"Real-World Applications","text":"<ul> <li>This project isn't just about building a self-driving toy car; it's about understanding the principles that drive real-world autonomous vehicles.</li> <li>You'll gain insights into sensor integration, data processing, and autonomous decision-making processes.</li> </ul>"},{"location":"activities/donkey-car/#conclusion_1","title":"Conclusion","text":"<p>The Donkey Car project is an excellent bridge between theoretical knowledge and practical application in robotics and AI. It's a challenge that will test and enhance your Python programming skills, understanding of machine learning principles, and give you a glimpse into the future of autonomous technologies.</p> <p>Thank you for participating in this advanced session. I hope this experience ignites your passion for robotics and programming, and I'm excited to see what you'll create and learn in the process!</p>"},{"location":"activities/electronics-starter-kit/","title":"Electronics Starter Kit","text":"<p>For under $15, you can purchase an Electronic Component Starter Kit.</p>"},{"location":"activities/electronics-starter-kit/#kit-components","title":"Kit Components","text":"<p>These kits include items such as</p> <ol> <li>Full-sized breadboard - 830 tie-points</li> <li>65 wire connections (aka jumpers)</li> <li>USB power connector (switchable from 3.3 volts or 5 volts)</li> <li>50 LEDs (10 each of red, blue, green, yellow and white)</li> <li>100 resistors (ranging from 10 to 1M ohm)</li> <li>10 momentary press buttons</li> <li>Buzzer for generating sound</li> <li>20 X female-to-male ribbon connector (Dupont connector)</li> <li>2 X pin header (40pin)</li> <li>Potentiometer</li> <li>2 photoresistors</li> <li>Thermistor for measuring temperature</li> <li>5 X diode rectifier (1N4007)</li> <li>5 X NPN transistor (PN2222)</li> <li>4N35 optocoupler</li> <li>74HC595 shift register</li> <li>30 capacitors</li> </ol>"},{"location":"activities/electronics-starter-kit/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Our 9th grade robotics class just purchased these electronics starter kits.  The components are listed in the attached photo and the list above.\n\nWe have done lesson plans on LED circuits and used buttons to turn\nthe LEDs on and off.\n\nWhat additional lesson plans would you recommend?\n</code></pre>"},{"location":"activities/electronics-starter-kit/#sample-response","title":"Sample Response","text":"<p>Title: 9th Grade Robotics Class - Electronics Kit Lesson Plans</p>"},{"location":"activities/electronics-starter-kit/#1-sound-and-light-show-with-buzzers-and-leds","title":"1. Sound and Light Show with Buzzers and LEDs","text":"<p>Objective: Understand how to generate different tones with a buzzer and create a light show with LEDs.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan","title":"Lesson Plan:","text":"<ul> <li>Teach about frequency and the pitch of sound using the buzzer.</li> <li>Program the microcontroller to control the buzzer and create different tones.</li> <li>Create a circuit to blink LEDs in patterns synchronized with the buzzer tones.</li> </ul>"},{"location":"activities/electronics-starter-kit/#2-temperature-sensing-with-thermistor","title":"2. Temperature Sensing with Thermistor","text":"<p>Objective: Learn about temperature sensors and data logging.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan_1","title":"Lesson Plan:","text":"<ul> <li>Discuss resistance change with temperature.</li> <li>Set up the thermistor in a voltage divider connected to an analog input.</li> <li>Record and visualize temperature changes over time.</li> </ul>"},{"location":"activities/electronics-starter-kit/#3-automatic-night-light-using-photoresistors","title":"3. Automatic Night Light Using Photoresistors","text":"<p>Objective: Build a circuit that responds to light levels.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan_2","title":"Lesson Plan:","text":"<ul> <li>Teach about photoresistance and light level detection.</li> <li>Create a circuit with a photoresistor that turns on an LED in the dark.</li> <li>Experiment with resistor values to change light sensitivity.</li> </ul>"},{"location":"activities/electronics-starter-kit/#4-introduction-to-digital-electronics-with-shift-registers","title":"4. Introduction to Digital Electronics with Shift Registers","text":"<p>Objective: Learn about serial communication and pin expansion with a shift register.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan_3","title":"Lesson Plan:","text":"<ul> <li>Explain shift registers and their role in increasing microcontroller outputs.</li> <li>Use the 74HC595 to control multiple LEDs.</li> <li>Design a simple binary counting challenge or light sequence memory game.</li> </ul>"},{"location":"activities/electronics-starter-kit/#5-simple-alarm-system","title":"5. Simple Alarm System","text":"<p>Objective: Create a security system using buttons and buzzers.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan_4","title":"Lesson Plan:","text":"<ul> <li>Discuss buttons as switches in a circuit.</li> <li>Wire buttons as 'sensors' for a simulated door/window.</li> <li>Program the buzzer to sound when a button is pressed.</li> </ul>"},{"location":"activities/electronics-starter-kit/#6-electronic-dice-using-random-number-generation","title":"6. Electronic Dice Using Random Number Generation","text":"<p>Objective: Understand random number generation and display using LEDs.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan_5","title":"Lesson Plan:","text":"<ul> <li>Discuss random number generation.</li> <li>Set up LEDs in a die pattern and light up a random number when a button is pressed.</li> </ul>"},{"location":"activities/electronics-starter-kit/#7-capacitor-charge-and-discharge-experiment","title":"7. Capacitor Charge and Discharge Experiment","text":"<p>Objective: Learn about capacitor behavior in a circuit.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan_6","title":"Lesson Plan:","text":"<ul> <li>Set up a circuit with a capacitor and an LED.</li> <li>Measure and record capacitor charge and discharge times with different values.</li> </ul>"},{"location":"activities/electronics-starter-kit/#8-optocoupler-as-a-switch","title":"8. Optocoupler as a Switch","text":"<p>Objective: Explore the use of an optocoupler as an electronic switch.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan_7","title":"Lesson Plan:","text":"<ul> <li>Teach about electrical isolation and optocouplers.</li> <li>Create a circuit where the 4N35 controls another circuit part without direct connection.</li> </ul>"},{"location":"activities/electronics-starter-kit/#9-potentiometer-as-a-control-device","title":"9. Potentiometer as a Control Device","text":"<p>Objective: Use a potentiometer to adjust an LED's brightness or a buzzer's tone.</p>"},{"location":"activities/electronics-starter-kit/#lesson-plan_8","title":"Lesson Plan:","text":"<ul> <li>Explain the potentiometer as a variable resistor.</li> <li>Connect it to an LED to change brightness.</li> <li>Advanced: Control the buzzer frequency, creating a simple instrument</li> </ul> <p>These lesson plans are designed to be engaging and to build on the knowledge your students have already gained from working with LEDs, resistors, and buttons. They can be scaled in complexity depending on the students' proficiency and interest levels.</p>"},{"location":"activities/electronics-starter-kit/#deep-dive-into-rc-circuit","title":"Deep Dive into RC Circuit","text":""},{"location":"activities/electronics-starter-kit/#rc-circuit-prompt","title":"RC Circuit Prompt","text":"<pre><code>Please create a detailed lesson plan for item 7: Capacitor Charge and Discharge Experiment.  Describe the circuit, its components and how it would work.\n\nPlease create a Mermaid diagram that describes the circuit.\n</code></pre>"},{"location":"activities/electronics-starter-kit/#circuit-diagram","title":"Circuit Diagram","text":""},{"location":"activities/electronics-starter-kit/#mermaid-format","title":"Mermaid Format","text":"<pre><code>graph LR\n    A[Power Supply] -- Positive --&gt; B((Capacitor))\n    B -- Anode --&gt; C[LED]\n    C -- Cathode --&gt; D[Resistor]\n    D -- Negative --&gt; A\n    style A fill:#f9f,stroke:#333,stroke-width:4px\n    style B fill:#ccf,stroke:#333,stroke-width:2px\n    style C fill:#fd0,stroke:#333,stroke-width:2px\n    style D fill:#9f9,stroke:#333,stroke-width:2px\n</code></pre>"},{"location":"activities/electronics-starter-kit/#rc-circuit-diagram-response","title":"RC Circuit Diagram Response","text":"<p>Title: Lesson Plan Detail: Capacitor Charge and Discharge Experiment</p>"},{"location":"activities/electronics-starter-kit/#objective","title":"Objective:","text":"<p>Students will learn about the electrical properties of capacitors, specifically their ability to store and release energy. They will observe and measure the time it takes for capacitors to charge up and discharge through an LED.</p>"},{"location":"activities/electronics-starter-kit/#materials-needed","title":"Materials Needed:","text":"<ul> <li>Capacitors of various capacitances (e.g., 10\u00b5F, 100\u00b5F, 1000\u00b5F)</li> <li>LEDs</li> <li>Resistors (to limit current through the LEDs, e.g., 220\u03a9)</li> <li>Multimeter with capacitance and time measurement capabilities</li> <li>Breadboard</li> <li>Jumper wires</li> <li>Power supply or batteries</li> <li>Stopwatches or timing software</li> </ul>"},{"location":"activities/electronics-starter-kit/#circuit-description","title":"Circuit Description:","text":"<p>The circuit for this experiment is straightforward. The capacitor will be charged from a power supply and then discharged through an LED. A resistor will be placed in series with the LED to ensure that the current does not exceed the LED's maximum rating when the capacitor discharges.</p>"},{"location":"activities/electronics-starter-kit/#step-by-step-guide","title":"Step-by-Step Guide:","text":"<ol> <li> <p>Introduction to Capacitance:    Begin the lesson by explaining the concept of capacitance and how capacitors store energy. Discuss the formula ( Q = CV ), where ( Q ) is the charge, ( C ) is the capacitance, and ( V ) is the voltage.</p> </li> <li> <p>Circuit Building:    Guide the students to construct the circuit on a breadboard. Start by connecting the positive terminal of the power supply to one lead of the capacitor. Connect the other lead of the capacitor to the anode (longer lead) of the LED. Then connect the cathode (shorter lead) of the LED to one end of the resistor, and connect the other end of the resistor to the negative terminal of the power supply.</p> </li> <li> <p>Charging the Capacitor:    With the power supply turned off, explain the process of charging the capacitor. Then, turn on the power supply to charge the capacitor to a known voltage. The LED will light up briefly as the capacitor charges.</p> </li> <li> <p>Observing Discharge:    Once the capacitor is fully charged, disconnect the power supply. The LED will emit light as the capacitor discharges through it. The brightness of the LED will decrease as the capacitor's stored energy decreases.</p> </li> <li> <p>Timing the Discharge:    Have students use a stopwatch or timing software to measure the time it takes from when the LED turns on until it turns off. They should record this time along with the capacitance value.</p> </li> <li> <p>Repeat with Different Capacitances:    Repeat the charging and discharging process using capacitors of different capacitances. Have students observe how the time for the LED to turn off changes with capacitance.</p> </li> <li> <p>Data Analysis:    After collecting data for different capacitors, guide students to plot the discharge time against capacitance. They should notice that the time increases with capacitance.</p> </li> <li> <p>Discussion:    Conclude with a discussion about how the experiment demonstrates the capacitor's ability to store and release energy. Discuss practical applications where capacitors are used for their ability to quickly release energy, such as in flash photography, power conditioning, and as part of timing circuits.</p> </li> <li> <p>Safety Tips:</p> </li> <li>Make sure the voltage applied does not exceed the capacitor's voltage rating.</li> <li> <p>Ensure the LED current does not exceed its maximum current rating by using a suitable series resistor.</p> </li> <li> <p>Extension Activities:     For advanced students, introduce the concept of the RC time constant (( \\tau = RC )) and how it defines the charging and discharging rates of a capacitor in an RC circuit.</p> </li> </ol>"},{"location":"activities/h-bridge/","title":"H-Bridge Lab","text":"<p>The H-bridge circuit allows us to make a motor turn in opposite directions if we close opposite switches.  To make the motor move one direction we close the upper left (Switch 1) and the lower right (Switch 4) switches.  To make the motor move in the opposite direction we close the lower left (Switch 2) and upper right (Switch 3) switches.</p> <p>It is called an \"H\" bridge because the circuit forms the shape of the letter \"H\".</p> <p></p> <p>In the figure above:</p> <ol> <li>To move forward, close switches 1 and 4</li> <li>To move in reverse, close switches 2 and 3</li> </ol> <p>This circuit can also be demonstrated by using a single double-pole, double throw switch.</p> <p></p>"},{"location":"activities/led-rgb/","title":"RGB LEDs","text":"<p>Make the following combinations</p> <ol> <li>Red only</li> <li>Green only</li> <li>Blue only</li> <li>Red and Green together (yellow)</li> <li>Red and Blue together (purple)</li> <li>Green and Blue together (cyan)</li> <li>All three on (white)</li> </ol>"},{"location":"activities/led-rgb/#prompt","title":"Prompt","text":"<pre><code>The image above is an RGB LED mounted on a breadboard with a battery\nconnected.\nCreate a five-minute discussion about this board between a volunteer\nin a Robot Day RGB LED challenge and a 5th-grade student.  \nMention that by pressing individual buttons you can make red, green,\nor blue.\nBy pressing multiple buttons other colors can be made.\nHave the student try pressing some buttons.\nWhat concepts can we teach?\n\nReturn your response as a markdown download file.\n</code></pre>"},{"location":"activities/led-rgb/#response","title":"Response","text":"<p>Volunteer: Hi there! Welcome to our Robot Day RGB LED challenge. Have you ever seen one of these before?</p> <p>5th-Grade Student: No, what is it?</p> <p>Volunteer: This is a breadboard, and that little device with the wires is an RGB LED. RGB stands for red, green, and blue. By pressing these buttons, we can make those colors light up. Do you want to try it?</p> <p>Student: Sure! Presses the red button</p> <p>Volunteer: See, you've made the LED glow red! This happens because you've completed the circuit for the red part of the LED. What do you think will happen if you press the green button at the same time?</p> <p>Student: Presses the green button It's yellow now!</p> <p>Volunteer: That's right! When you mix red and green light, you get yellow. This is a concept called color mixing, and it's how we can create lots of colors on screens and in lights. By pressing different combinations of buttons, you can make different colors. </p> <p>Student: What happens if I press all three?</p> <p>Volunteer: Give it a try and let's see!</p> <p>Student: Presses all three buttons It's white!</p> <p>Volunteer: Exactly! When you mix red, green, and blue together, you get white light. This is a little bit like mixing paints, but with light, it\u2019s called additive color mixing. It's how devices like your TV or tablet screen work to make all the colors you see. What do you think you're learning by doing this?</p> <p>Student: I'm learning how colors mix together and how lights can make different colors!</p> <p>Volunteer: That's perfect! And this is just one of the many cool things you can learn and do with a simple breadboard and some electronics. You're also learning about circuits and electricity, and how by combining different parts you can make something new. What color do you like best?</p> <p>Student: I like blue!</p> <p>Volunteer: Then press just the blue button, and there you have it. You can even try to get different shades by pressing the buttons with different timing. Would you like to try that too?</p> <p>Student: Yes, that sounds fun!</p> <p>Volunteer: Go ahead! This is all about experimenting and learning. And remember, the more you play with it, the more you'll understand how it works. Enjoy the rest of the STEM day, and keep exploring!</p>"},{"location":"activities/led-rgb/#parts","title":"Parts","text":"<p>These RGB LEDs are about 12 cents each in qty 100 on eBay. You can search for \"4pin 5mm RGB Tri-Color Common Cathode LED light Red Green Blue\"</p> <p></p>"},{"location":"activities/led/","title":"Robot Day LED Breadboard Activity","text":"<p>LEDs are wonderful low-cost and safe ways for students to get familiar with concepts such as batteries, breadboards, circuits,  switches, polarity, current, and voltage.  Once you have the basic breadboard and components there are dozens of concepts we can teach.  The goal is to figure out what is appropriate for a Robot Day event where students might spend a few minutes at each activity station.</p>"},{"location":"activities/led/#prompt","title":"Prompt","text":"<p>We have the following materials:</p> <ol> <li>a half-size solderless breadboard</li> <li>a 3-volt battery pack</li> <li>different colors of 3mm LEDs</li> <li>220-ohm resistors</li> <li>momentary switch buttons</li> </ol> <p>Design an activity for a 5th-grade student interested in robots.  The activity should last about 5-10 minutes.  The activity will be led by an adult volunteer.  Provide a clear description of this activity including some hands-on things that the student will do to earn a checkbox towards a robot expert badge.</p> <p>Return the response as a single raw markdown file that is easy to download.</p>"},{"location":"activities/led/#response","title":"Response","text":""},{"location":"activities/led/#objective","title":"Objective","text":"<p>To introduce 5th-grade students to basic electronics and circuit design through a hands-on activity, fostering their interest in robotics. This activity will help students earn a checkbox toward a robot expert badge.</p>"},{"location":"activities/led/#materials","title":"Materials","text":"<ol> <li>Half-size solderless breadboard</li> <li>3-volt battery pack</li> <li>Different colors of 3mm LEDs</li> <li>220-ohm resistors</li> <li>Momentary switch buttons</li> </ol>"},{"location":"activities/led/#duration","title":"Duration","text":"<p>5-10 minutes</p>"},{"location":"activities/led/#activity-description","title":"Activity Description","text":""},{"location":"activities/led/#step-1-introduction-1-minute","title":"Step 1: Introduction (1 minute)","text":"<ul> <li>The adult volunteer explains the basic concept of a circuit and its relevance in robotics.</li> <li>Briefly introduce the materials: breadboard, LEDs, resistors, battery pack, and switch buttons.</li> </ul>"},{"location":"activities/led/#step-2-building-a-simple-circuit-3-minutes","title":"Step 2: Building a Simple Circuit (3 minutes)","text":"<ul> <li>Guide the student to place an LED on the breadboard.</li> <li>Show them how to connect the LED to the battery pack using wires.</li> <li>Explain the importance of resistors and help them add a 220-ohm resistor to the circuit.</li> </ul>"},{"location":"activities/led/#step-3-adding-a-switch-2-minutes","title":"Step 3: Adding a Switch (2 minutes)","text":"<ul> <li>Introduce the momentary switch button.</li> <li>Assist the student in incorporating the switch into their circuit, explaining how it controls the flow of electricity.</li> </ul>"},{"location":"activities/led/#step-4-testing-and-exploration-3-minutes","title":"Step 4: Testing and Exploration (3 minutes)","text":"<ul> <li>Let the student test their circuit by pressing the switch to light up the LED.</li> <li>Encourage them to experiment with different colored LEDs and observe the differences.</li> </ul>"},{"location":"activities/led/#step-5-conclusion-1-minute","title":"Step 5: Conclusion (1 minute)","text":"<ul> <li>Discuss with the students what they learned and how it applies to robotics.</li> <li>Award the checkbox towards the robot expert badge.</li> </ul>"},{"location":"activities/led/#safety-note","title":"Safety Note","text":"<p>Ensure adult supervision at all times, especially when handling the battery pack and electronic components.</p>"},{"location":"activities/microcontrollers/","title":"Robot Day Microcontroller Labs","text":"<p>In this activity, we are going to compare the last generation of microcontrollers with the current generation.  We are going to find we can now build powerful robots that are inexpensive.</p> <p>The last generation was called the Arduino.  Its price was about $30.  The new generation is called the Raspberry Pi Pico.  It's price is only $4!.Let's compare the features of these two microcontrollers graphically.</p>"},{"location":"activities/microcontrollers/#memory-comparison","title":"Memory Comparison","text":"<p>Memory is really important in computers.  The name of the memory we use is called Random Access Memory or RAM. The more RAM you have, the better!  It means you can work on really fun problems without slowing down.</p> <p></p>"},{"location":"activities/microcontrollers/#memory-usage","title":"Memory Usage","text":"<p>Now let's look at how we use this memory when we program graphic displays using MicroPython.</p> <p></p> <p>We can see that Python can't run on the old 2K Arduino Uno since it needs about 16K of RAM to run.</p> <p>Using a framebuffer for a monochrome display is easy.  But powering a color smartwatch takes a LOT more memory.</p>"},{"location":"activities/microcontrollers/#clock-speed","title":"Clock Speed","text":"<p>Imagine you are running a race.  In a given amount of time, like one minute, a turtle will only go 16 feet.  But a rabbit could travel 133 feet.  This is how we compare how quickly the old turtle Arduino compares with the ultra-fast rabbit of the Raspberry Pi Pico.</p> <p></p>"},{"location":"activities/microcontrollers/#microcontrollers-on-breadboards","title":"Microcontrollers on Breadboards","text":"<p>Most of our projects place a Raspberry Pi Pico directly on a breadboard. The exception is when we use the Cytron Maker Pi RP2040 to drive our robots.</p> <p></p>"},{"location":"activities/microswitch/","title":"Microswitchs","text":"<p>s Microswitchs are a good entry point into a sensor for a collision avoidance robot.  Although technically we are touching the wall, kids will get the idea of feedback.  We can purchase microswitches like this one on eBay for under a dollar.  I found a surplus store near my house that was selling them for 50 cents.</p> <p></p>"},{"location":"activities/microswitch/#sample-prompt","title":"Sample Prompt","text":"<p>For the photo above, create a five-minute discussion about the microswitch LED battery circuit with a 5th-grade student interested in building a collision avoidance robot.  We call this a \"bump switch\" because when a robot bumps into a wall it knows to reverse direction.</p>"},{"location":"activities/microswitch/#response","title":"Response","text":"<p>Alright, let's talk about this interesting circuit that you're looking at, which is part of what we call a \"bump switch.\" Imagine you're building a robot that you don't want to crash into walls. How can you make it smart enough to know when to stop or go back? That's where our bump switch comes in handy.</p> <p>First, take a look at the breadboard. It's like a canvas for electronics, allowing us to connect different components without having to solder them. Do you see those holes? They're connected in rows, and that's how the electricity travels from one part to another.</p> <p>Now, see the red LED on the breadboard? LED stands for Light Emitting Diode. It's like a tiny lightbulb that turns on when electricity passes through it. Next to the LED is a resistor\u2014the little guy with colored stripes. It's there to protect the LED because too much electricity can burn it out. Think of the resistor as a traffic light that tells the electricity, \"Hey, slow down a bit before you go to the LED.\"</p> <p>The green and yellow wires are like roads. The electricity travels along them. The green wire goes from the battery pack\u2014see that black box with wires?\u2014to the breadboard, and the yellow wire makes a path from the breadboard back to the battery.</p> <p>The key player here is the microswitch, the part with the metal lever. When you press it, you close the circuit, and electricity can flow. When it's not pressed, the circuit is open, and the electricity stops. For our robot, this switch is placed so that when it bumps into something, it presses down, just like you'd press it with your finger.</p> <p>So, imagine the robot is moving and it hits a wall\u2014the switch gets pressed, and that's like a signal that says, \"Oops, we hit something!\" Then, the robot knows it's time to go in reverse and try a different path.</p> <p>Building this on your own would be a cool project, and you'd learn a lot about how circuits work. Plus, you get to see it in action with your robot, which is the best part. What do you think? Would you like to try putting one together?</p>"},{"location":"activities/motors/","title":"Robot Day Motors Table","text":""},{"location":"activities/motors/#motor-circuit","title":"Motor Circuit","text":""},{"location":"activities/motors/#sample-prompt","title":"Sample Prompt","text":"<p>For the attached image, design a five-minute challenge for a 5th-grade student.  Discuss how to reverse the direction of the motor to allow a robot to move forward and backward.</p>"},{"location":"activities/motors/#chatgpt-response","title":"ChatGPT Response","text":"<p>5th Grade Science Challenge: Reversing Motor Direction</p>"},{"location":"activities/motors/#objective","title":"Objective:","text":"<p>Understand and demonstrate how reversing the polarity of the motor leads can change the direction the motor spins.</p>"},{"location":"activities/motors/#materials","title":"Materials:","text":"<ul> <li>The setup in the image (battery pack, wires, and motor)</li> <li>Additional wires with alligator clips (for easy connection changes)</li> <li>A small robot or a simple structure that can move using the motor</li> </ul>"},{"location":"activities/motors/#challenge-instructions","title":"Challenge Instructions:","text":"<ol> <li>Observe the current setup and predict what will happen when the circuit is completed.</li> <li>Complete the circuit by connecting the wires to the motor, and observe the direction in which the motor shaft spins. Note this as the \"forward\" direction.</li> <li>Now, disconnect the wires from the motor and reverse the connections (what was on the positive terminal goes to the negative and vice versa).</li> <li>Reconnect the wires to the motor and predict whether the direction of spin will change.</li> <li>Complete the circuit again and observe the direction of the motor's spin.</li> <li>Confirm if the direction is now opposite to what was observed in step 2. This is the \"backward\" direction.</li> </ol>"},{"location":"activities/motors/#discussion-questions","title":"Discussion Questions:","text":"<ul> <li>What happened when the connections on the motor were reversed?</li> <li>Why do you think reversing the wires changes the direction the motor spins?</li> <li>How could this be used in a robot to make it move forward and backward?</li> </ul>"},{"location":"activities/motors/#explanation","title":"Explanation:","text":"<p>A motor has a positive and a negative terminal. When connected to a battery, the current flows in a particular direction, causing the motor to spin in one direction. By reversing the connections, you change the flow of current, which makes the motor spin in the opposite direction. This principle is used in robotics to control movement; by reversing the polarity of the motors, a robot can be made to go forward or backward.</p>"},{"location":"activities/motors/#safety-note","title":"Safety Note:","text":"<p>Always ensure that the student handles the batteries and motor under adult supervision to avoid short circuits or any potential injuries.</p>"},{"location":"activities/moving-rainbow/","title":"Moving Rainbow","text":"<p>The Moving Rainbow is the name of our labs that use a bright and colorful LED strip to teach programming concepts.</p> <p>The photo above is a 12-pixel version that is on a breadboard with a voltage monitor and a rechargeable LoPo battery.  This project can be used in multiple locations and can be used to:</p> <ol> <li>See what happens when a battery is not plugged in</li> <li>See what happens when a GND or 5V wire is removed</li> <li>Teach the basics of a breadboard</li> <li>Show what the voltage is coming out of the Pico 3.3V pin</li> </ol> <p>You can create your own Moving Rainbow kits for about $10 a kit. Each kit includes:</p> <ol> <li>A Raspberry Pi Microcontroller ($4)</li> <li>A 1/2 size 400-tie solderless breadboard ($1.50)</li> <li>A 3-terminal screw-header which is about (20 cents each)</li> <li>An LED strip with NeoPixels ($3)</li> </ol> <p>We frequently purchase these parts in bulk to get discounts.</p>"},{"location":"activities/pot-lab/","title":"Potentiometer Lab","text":"<p>In this lab, students will hold a box that has a potentiometer on the side. As the students change the potentiometer, the display will change.</p> <p>There are two types of displays:</p> <ol> <li>A low-cost 10-pixel LED strip.  This keeps the cost of the box under $10.</li> <li>A medium cost that uses an OLED display.  This allows the students to see the history of their turning the knob.</li> </ol> <p>OLED Sample Code on MicroPython for Kids</p>"},{"location":"activities/pwm/","title":"Pulse Width Modulation Lab","text":""},{"location":"activities/rgb-box/","title":"RGB Box","text":"<p>This little box is one of the favorite kits of our staff. It has a power switch and three potentiometers (pots) hooked up to a Raspberry Pi Pico.  The pots control the brightness of the red, green and blue pixels on a low-cost LED strip of about 10 pixels.  The total parts cost is around $11.  Kids as young a five years old love this project!</p>"},{"location":"activities/rgb-box/#sample-dialog-for-a-five-year-old","title":"Sample Dialog for a Five-Year-Old","text":"<p>Do you like colors?  Can you turn the red knob? Wow!  You made it turn red?  How about the green knob? Wow! You made it turn green! How about the blue knob?  You are awesome!  Do you know how to make the color purple?  Yes, you turn on both the red and blue but keep the green off.  Cool! I bet you might become a robot programmer someday!</p>"},{"location":"activities/rgb-box/#parts-list","title":"Parts List","text":"<ol> <li>Raspberry Pi Pico - $4</li> <li>10-element NeoPixel Strip (WS2811B) - $3</li> <li>Breadboard - $1.50</li> <li>3 potentiometers - 50 cents each</li> <li>3 AA battery pack - $1</li> </ol>"},{"location":"activities/rgb-box/#video-demo-with-lcd-display","title":"Video Demo with LCD Display","text":"<p>This is a demo using an extra old LCD display that also shows the red, green and blue values from 0 to 255. Students can write down these three numbers and use them in their programs.</p> <p>One of the challenges we give our students is the \"Orange Problem\".  Many colors like red, green, blue, yellow, purple and cyan are easy to create.  The values of all potentiometers are set at a minimum or maximum.  But orange is a little more challenging since it requires fine-tuning of the values or the red and green potentiometers.</p>"},{"location":"activities/rgb-box/#wiring-diagram","title":"Wiring Diagram","text":"<p>Here is the wiring diagram for a single pot:</p> <p></p> <p>The difference we have is that we have three pots, one for red, one for green and one for blue.  The center taps will go to the other analog input pins but the rails of the pots will go to the ADC_VREF and the AGND.  Make sure you ONLY use the AGND on pin 33 and not the other general GND pins.  The AGND and the ADC_VREF are surrounded by special circuits to dampen the noise so that the voltage readings don't fluctuate with the noise on the power lines.</p>"},{"location":"activities/rgb-box/#sample-code","title":"Sample Code","text":"<pre><code># This kit assumes we have three POTs hooked to pins 26, 27 and 28 of the Pico.\nfrom machine import ADC, Pin\nfrom utime import sleep\nfrom neopixel import NeoPixel\n\nNEOPIXEL_PIN = 0\nNUMBER_PIXELS = 10\nstrip = NeoPixel(Pin(NEOPIXEL_PIN), NUMBER_PIXELS)\n\n# this is the built-in LED on the Pico which we toggle on and off to show sampling\nled = Pin(25, Pin.OUT)\n\n# ADC0 is GPIO 26.  Connect to row 10 the right side\npot1 = ADC(28) # red\npot2 = ADC(27) # green\npot3 = ADC(26) # blue\n\nMAX_DELAY = .5 # seconds\n\n# global variables\ndelay = .05\n\n# repeat forever\nwhile True:\n    # if we have the POTs wired backwards we subtract to get the value\n    # read the value from the pot and shift 6 bits\n    # The brightness of each LED ranges from 0 to 255 - 8 bits\n    pot_value1 = pot1.read_u16() &gt;&gt; 8 \n    pot_value2 = pot2.read_u16() &gt;&gt; 8\n    pot_value3 = pot3.read_u16() &gt;&gt; 8\n    print(\"rgb\", pot_value1, pot_value2, pot_value3)\n\n    # update the strip with our new values\n    for i in range(NUMBER_PIXELS):\n        strip[i] = (pot_value3, pot_value2, pot_value1)\n    strip.write()\n\n    sleep(delay)\n    led.toggle()\n</code></pre>"},{"location":"activities/robot/","title":"Robot Day Robots","text":""},{"location":"activities/robot/#collision-avoidance","title":"Collision Avoidance","text":""},{"location":"activities/robot/#sample-prompt","title":"Sample Prompt","text":"<pre><code>The attached image is a collision avoidance robot.\nIt has a time-of-flight distance sensor on the front, \ntwo DC hobby motors, 4 AA batteries and is powered by\na Cytron Maker Pi RP2040 board.  The board has a\nspeaker, 14 blue LEDs, four buttons for testing the\nmotor connections, two NeoPixels and a port for recharging\na LiPo battery.  Assembling the robot requires no\nsoldering since the sensor can be hooked up using the 4-wire Grove connectors.  The distance sensor is communicating via n I2C bus.\n\nPlease write a five-minute long decription of the robot that is appropriate for a 5th-grade student.  Return the result in a single markdown file.\n</code></pre>"},{"location":"activities/robot/#5th-grade-description-of-collision-avoidance-robot","title":"5th Grade Description of Collision Avoidance Robot","text":"<p>Hello, young inventors! Today, let's explore a cool gadget called a \"Collision Avoidance Robot.\" This robot is like a smart car that can sense when something is in front of it and tries not to bump into it. Let's see what makes it so smart!</p>"},{"location":"activities/robot/#whats-on-the-robot","title":"What's On the Robot?","text":"<ul> <li>Time-of-Flight Distance Sensor: This is the robot's eye. It sends out invisible signals and measures how long they take to bounce back. Just like bats use sound to \"see,\" this sensor helps the robot know how far things are.</li> <li>DC Hobby Motors: These are the robot's muscles. They make the wheels turn and allow the robot to move around.</li> <li>Batteries: The robot needs energy to work, and it gets it from four AA batteries, just like the ones you might use in your toys or remote control.</li> <li>Cytron Maker Pi RP2040 Board: Think of this as the robot's brain. It's a special kind of computer that tells everything else what to do. It has cool features:</li> <li>A speaker for making sounds.</li> <li>14 blue LEDs that can light up to show messages or patterns.</li> <li>Four buttons to test if the wheels are working right.</li> <li>Two colorful lights called NeoPixels can change colors.</li> <li>A port to recharge a battery, so you don't always need new ones.</li> </ul>"},{"location":"activities/robot/#building-the-robot","title":"Building the Robot","text":"<p>What's awesome about this robot is you don't need a soldering iron to put it together. Soldering is like gluing metal parts with heat, which can be tricky and hot! Instead, this robot uses something called \"Grove connectors.\" They are like LEGO for electronics; you just plug the parts together.</p>"},{"location":"activities/robot/#how-does-it-work","title":"How Does It Work?","text":"<p>The distance sensor talks to the robot's brain using a secret language for machines called I2C (say \"I squared C\"). It's how the sensor tells the brain how far away things are. Then the brain decides if the robot should move forward, turn, or stop to avoid crashing.</p>"},{"location":"activities/robot/#what-can-you-do-with-it","title":"What Can You Do With It?","text":"<p>Once you build the robot, you can program its brain to do all sorts of tasks. Maybe you want it to follow a line, play a tune when it turns, or flash its lights in a pattern. It's all up to your imagination. By playing with this robot, you're learning to be a creator and an engineer!</p> <p>Isn't it exciting to think about making a robot that can move all by itself without bumping into things? Who knows, maybe one day you'll make robots that can do even more amazing stuff. Keep inventing and have fun with your robot!</p>"},{"location":"activities/robot/#discussion-for-a-11-grade-student","title":"Discussion for a 11-grade Student","text":""},{"location":"activities/robot/#prompt","title":"Prompt","text":"<pre><code>Please repeat this for an 11th grade student.  Add the fact that it is progammed  with MicroPython.  Also return the result in a single raw mardkdown file.\n</code></pre>"},{"location":"activities/robot/#collision-avoidance-robot-exploration","title":"Collision Avoidance Robot Exploration","text":"<p>Hey there, future engineers and programmers! Let's dive into the mechanics and electronics of a Collision Avoidance Robot. This isn't just any toy; it's a sophisticated piece of technology that combines hardware and software to navigate its environment without crashing. Let's break down its components and understand how it operates.</p>"},{"location":"activities/robot/#key-components","title":"Key Components","text":"<ul> <li>Time-of-Flight (ToF) Distance Sensor: This sensor operates on the time-of-flight principle, emitting light pulses and calculating the time they take to return after reflecting off an object. It's an advanced way to measure distance accurately and is crucial for the robot's ability to avoid obstacles.</li> <li>DC Hobby Motors: These motors are the driving force behind the robot's movement, allowing it to maneuver through its surroundings.</li> <li>Power Source: The robot runs on 4 AA batteries, providing a portable and replaceable power solution.</li> <li>Cytron Maker Pi RP2040 Board: This is the heart of the robot. It's a microcontroller board powered by the RP2040 chip, designed to control the robot's actions and responses. Here's what it includes:</li> <li>A speaker for auditory feedback or alerts.</li> <li>14 blue LEDs that can be programmed for indicators or to display information.</li> <li>Four buttons specifically for testing motor functions and connections.</li> <li>Two NeoPixels, which are RGB LEDs, for a customizable visual display.</li> <li>A charging port for a LiPo battery, offering a rechargeable power option.</li> </ul>"},{"location":"activities/robot/#assembly-and-programming","title":"Assembly and Programming","text":"<p>One of the coolest features of this robot is its user-friendly assembly process. Thanks to the Grove connectors, you can put together the robot without soldering, making it accessible and safe for hobbyists.</p> <p>When it comes to bringing this robot to life, MicroPython is the key. It's a lean and efficient implementation of Python 3, optimized to run on microcontrollers like the RP2040. With MicroPython, programming the robot becomes intuitive and flexible, allowing you to implement complex algorithms for navigation and obstacle avoidance.</p>"},{"location":"activities/robot/#how-it-functions","title":"How It Functions","text":"<p>The ToF sensor communicates with the RP2040 board via the I2C bus, a robust communication protocol used in embedded systems. This allows the robot to make real-time decisions based on the distance data received from the sensor.</p> <p>As an 11th grader with a grasp of programming and electronics, you can exploit the full potential of this robot. Programming it with MicroPython, you could develop algorithms for pathfinding, object tracking, and even coordinate multiple robots to work together. The possibilities are only limited by your creativity and problem-solving skills.</p> <p>This project isn't just about building a robot; it's about understanding the interplay between hardware and software in robotics. It's a fantastic practical application of STEM principles that could inspire your future career path.</p> <p>So, are you ready to take on the challenge and perhaps contribute to the future of autonomous robotics? Start with this robot and who knows where your skills will take you next!</p>"},{"location":"activities/sensors/","title":"Sensors","text":"<p>Robot Day Sensor Labs</p> <p></p>"},{"location":"activities/sensors/#prompt","title":"Prompt","text":"<pre><code>Create a five-minute description about the attached image\nas through you were talking to a fifth grade student.\nMention that these sensors will be used in a collision\navoidance robot.\n</code></pre>"},{"location":"activities/sensors/#chatgpt-response","title":"ChatGPT Response","text":""},{"location":"activities/sensors/#robot-distance-sensors-for-a-5th-grader","title":"Robot Distance Sensors for a 5th Grader","text":"<p>Hello there! Today, we're going to talk about some really cool tools that help robots avoid bumping into things. These are called sensors, and they're like the robot's special senses that help it know where things are without having to touch them.</p>"},{"location":"activities/sensors/#micro-switch-bump-sensor","title":"Micro-Switch (Bump Sensor)","text":"<p>Think of this as a tiny button on the robot. When the robot touches something, this button gets pressed. It's a sign for the robot to say, \"Whoa! I better stop or go another way.\" It's like when you're walking and you touch a wall, you know you can't walk through it, so you turn around.</p>"},{"location":"activities/sensors/#infrared-sensors","title":"Infrared Sensors","text":"<p>These sensors are like the robot's hidden eyes. They can send out a type of light that we can't see with our own eyes. When this light hits something, it bounces back to the sensor. This tells the robot how far away things are. But, they don't work as well when it's very bright around because the sun also has a lot of this invisible light.</p>"},{"location":"activities/sensors/#ultrasonic-sensor-hc-sr04","title":"Ultrasonic Sensor HC-SR04","text":"<p>This sensor works a bit like a bat. It sends out sounds that are so high-pitched we can't hear them. These sounds travel through the air, hit objects, and then echo back to the sensor. By listening for the echoes, the sensor can figure out how far away things are.</p>"},{"location":"activities/sensors/#time-of-flight-laser-sensor-vl53l0x","title":"Time-of-Flight Laser Sensor VL53L0X","text":"<p>This sensor is super cool because it uses lasers to measure distance. It shoots out a laser beam, and when that beam hits something, it reflects back. The sensor measures the time it takes for the laser to go there and come back, and this time tells the robot how far away the object is.</p>"},{"location":"activities/sensors/#lidar","title":"LIDAR","text":"<p>LIDAR is like the superhero of sensors. It spins around and shoots out laser beams in all directions. It can tell how far away things are all around it. This helps the robot to get a full picture of everything around it, so it doesn't run into anything.</p> <p>All these sensors help the robot to know where things are around it. By using them, the robot can move around without crashing into walls or furniture. It's like playing a game where you try to walk through a room with your eyes closed, but these sensors are the robot's way of \"seeing\" without using its eyes. Isn't that awesome?</p> <p>So, next time you're playing with a toy robot or see one in a movie, think about all the neat sensors it might be using to move around without any bumps or crashes.</p>"},{"location":"activities/time-of-flight/","title":"Robot Day Time of Flight Labs","text":"<p>Goal: allows students to see how time-of-flight distance sensors work.</p>"},{"location":"activities/time-of-flight/#sample-project-kit","title":"Sample Project Kit","text":""},{"location":"activities/time-of-flight/#adjustable-threshold-using-a-potentiometer","title":"Adjustable Threshold using a Potentiometer","text":"<p>In this demo, we reverse the direction of a motor if the distance is within a specific threshold.  The students can adjust the threshold distance with the potentiometer.</p>"},{"location":"lessons/","title":"Sample Dialogs and Lesson Plans","text":"<p>We use generative AI tools such as ChatGPT and GPT-4 to generate the first draft of many of these lesson plans.  We then compare them with the manually created lesson plans created by humans. We then go back and refine the prompts to create the outputs that work best.  This process is called Prompt Engineering, and it is one of the key skills we hope to bring to future events.</p> <p>One of the nice features of ChatGPT is its ability to recognize images.  Once we create an Activity Board, we can upload a photo of the board to generate lesson plans for different grade levels.  We are using Python and LangChain to generate a matrix of these lesson plans for all of the activities for grades 1 to 12.</p>"},{"location":"lessons/#sample-code","title":"Sample Code","text":"<p>Here is some sample code for generating gustom lesson plans for multiple grades and multiple topics.</p>"},{"location":"lessons/01-generate-lesson-plans/","title":"Generating Lesson Plans with Python","text":"<p>We used Python to create a set of prompts and we created a function that iterates through the grade levels.</p>"},{"location":"lessons/01-generate-lesson-plans/#seed-prompt","title":"Seed Prompt","text":"<p>Our \"Seed Prompt\" is a prompt that generates Python code that iterates through the prompts for each activity.</p> <pre><code>Create a Python function called generate_discussion that will call the OpenAI API using the GPT-4 model.\nIterate through three grade levels (5th, 9th and 11th grades) for two topic prompts\n(\"Batteries\" and \"Motors\").\n\ntopics = [\"Batteries\", \"Motors\", \"Sensors\"]\ngrade_levels = [5, 7, 9]\n\nfor topic in topics:\n    for grade_level in grade_levels:\n       generate_discussion(topic, grade_level)\n\nThe entire prompt should look like this:\n\n\"Generate a single paragraph description of a discussion between a teacher and a students about robotics.  The topic is {$topic} and the grade level is {$grade_level}.  \n\nThe generate_discussion function can assume that the OPENAI_API_KEY\nis in an global variable called OPENAI_API_KEY.\n</code></pre> <p>ChatGPT Seed Generator</p> <pre><code>import openai\n\ndef generate_discussion(topic, grade_level):\n    prompt = f\"Generate a single paragraph description of a discussion between a teacher and students about robotics. The topic is {topic} and the grade level is {grade_level}.\"\n\n    try:\n        response = openai.Completion.create(\n            model=\"gpt-4\",\n            prompt=prompt,\n            max_tokens=150,\n            api_key=OPENAI_API_KEY\n        )\n        return response.choices[0].text.strip()\n    except Exception as e:\n        return f\"An error occurred: {e}\"\n\n# Example usage\nOPENAI_API_KEY = \"your-api-key-here\"\n\ntopics = [\"Batteries\", \"Motors\", \"Sensors\"]\ngrade_levels = [5, 7, 9]\n\nfor topic in topics:\n    for grade_level in grade_levels:\n        print(generate_discussion(topic, grade_level))\n</code></pre>"},{"location":"lessons/batteries-11th-grade/","title":"Batteries Discussion for 11th Grade Robotics Course","text":"<p>Page Title: Understanding Battery Technology for Robotics</p> <p>[Image Caption]: Comparative Analysis of Battery Types in Robotic Applications</p> <p>Greetings, Future Engineers!</p> <p>In the realm of robotics, power sources are critical. Our exploration today delves into the types of batteries showcased here, each with unique characteristics and applications within robotic systems.</p> <p>First in our lineup is the Coin Cell Battery (CR2052). This compact power source offers a voltage of 3V and a capacity of 225 milliamp hours (mAh). Its small form factor is ideal for low-power applications such as CMOS batteries in computers or in micro-controllers for tiny robotic mechanisms.</p> <p>Moving on, we have the LiPo Battery. This 3.7V rechargeable battery is a powerhouse in energy density, offering 230 mAh. Its flexible form factor and high discharge rates make it indispensable for mobile robotics, where weight and space are at a premium.</p> <p>We also encounter the ubiquitous AAA and AA Batteries. With a standard voltage of 1.5V and capacities ranging up to 2,500 mAh, these alkaline cells are the go-to for prototyping and powering smaller robotic components that require a reliable, albeit lower, current draw.</p> <p>The 9-volt Battery is next, known for its distinct rectangular shape and snap connectors. Offering 9V and 550 mAh, this battery is commonly used in backup power supplies for safety mechanisms within robotics, like emergency stop systems.</p> <p>Lastly, we have the 18650 Battery, a lithium-ion cell with a substantial capacity of 2,500 mAh at 3.7V. This rechargeable battery is a workhorse in robotics for its balance of high energy density and longevity, suitable for larger robots or those requiring extended operational periods.</p> <p>Key Points for Roboticists: - Voltage (V) is akin to the potential energy driving the electric current, necessary for powering motors and sensors. - Capacity (mAh) indicates the total charge a battery can hold, determining the duration your robotic system can operate before requiring a recharge. - Rechargeability offers sustainability and cost-effectiveness for long-term projects.</p> <p>As we navigate the intricacies of robotic design, selecting the appropriate battery type is paramount. It's not just about the power\u2014a battery's size, weight, voltage, capacity, and discharge rate must align with the specific needs of our robotic application.</p> <p>In Conclusion: - The Coin Cell is for minimal power requirements in compact spaces. - LiPo provides high energy density for weight-sensitive applications. - AAA and AA are standard for prototyping and low-power components. - 9-volt offers a higher voltage for critical backup systems. - 18650 is the choice for high-capacity, rechargeable solutions in larger robots.</p> <p>In the evolution of robotics, mastering the use of various batteries will enhance both the efficiency and functionality of your creations. Remember to consider environmental implications and recycle used batteries responsibly.</p> <p>Continue Innovating, Continue Advancing!</p>"},{"location":"lessons/batteries-5th-grade/","title":"The Wonderful World of Batteries","text":"<p>A lesson plan for 5th-grade students.</p> <p></p> <p>Different Batteries for Different Tasks</p> <p>Hey Super Students!</p> <p>Today, we're going on a battery adventure! Batteries are like tiny treasure chests that store energy instead of gold. Let's discover the types of batteries we have here and what makes each one special.</p> <p>Have you seen any of these batteries around your home?  Which ones do you recognize?  Which ones are new to you?  Let's take a look at each one.</p> <p>First up is the Coin Cell Battery. See the small, shiny one? It's named because it looks like a coin. This little hero gives power to things that don't need much energy, like your watch or calculator. It has 3 volts, which is like saying it has the strength of three mini-power kicks.</p> <p>Next, we have the LiPo Battery. It's a thin, rectangular one. 'LiPo' is short for Lithium Polymer, and it's the energy ninja for cool gadgets like drones. It\u2019s rechargeable and has 3.7 volts, so it's a little stronger than the coin cell.  This one was used in a small RC helicopter.</p> <p>Then, there are the AAA and AA Batteries. They're like the popular kids in the battery world because they fit into so many of our toys and tools. They have 1.5 volts, not super strong, but great for things like your remote control car. We will use these in our robots today.</p> <p>The 9-volt Battery is the one with the two little caps on top. It\u2019s like the guardian because it's often used in smoke detectors to keep us safe. With 9 volts, it's got the power of nine mini-kicks!</p> <p>Last, but not least, meet the 18650 Battery. This blue cylinder is the marathon runner of batteries because it can be charged and used again and again. It has a big energy capacity, which means it can keep your robots running for a long time!</p> <p>Batteries also have something called milliamp hours, written like 'milliamp hours'. It's like the battery\u2019s stamina, telling us how long it can keep going before it needs a rest (or a recharge!).</p> <p>Remember, Super Students: - Coin Cell - Small but mighty for tiny tasks. - LiPo - Thin and rechargeable, for high-tech toys. - AAA and AA - Common and handy for everyday play. - 9-volt - The safety champion with extra kick. - 18650 - The reusable power source that lasts and lasts.</p> <p>Batteries are super important in our lives. They're like mini power stations for all our gadgets. But always remember, when they're out of energy, we should recycle them properly to help our planet!</p> <p>Keep Exploring, Keep Learning!</p>"},{"location":"lessons/batteries-9th-grade/","title":"9th Grade Robotics Class Lesson Plan","text":"<p>Lesson Plan Title: Exploring Battery Science in Robotics</p> <p>Grade Level: 9th Grade Robotics Class</p> <p>Duration: 1 Hour</p> <p>Objective: Students will understand the different types of batteries, their voltage, capacity, rechargeability, and application in robotics. They will learn to measure and calculate the power and energy provided by different batteries and gain hands-on experience by powering a motor with each type.</p> <p>Materials: - Coin Cell Battery (CR2052) - LiPo Battery - AAA Batteries - AA Batteries - 9-volt Battery - 18650 Battery - Wires - Small Motors - Battery Meters - Volt-Ohm Meters - Robotics Class Battery Chart (from the image provided) - Handouts with battery specifications</p> <p>Lesson Plan:</p> <p>Introduction (10 minutes): - Begin with a discussion on the importance of batteries in robotics. - Introduce the five types of batteries: Coin Cell, LiPo, AAA, AA, 9-volt, and 18650. - Briefly discuss voltage, capacity, and rechargeability.</p> <p>Direct Instruction (15 minutes): - Present the Robotics Class Battery Chart. Discuss each battery type, its voltage, and capacity. - Explain the concepts of voltage, current, resistance, and power. - Demonstrate how to use a volt-ohm meter to measure battery voltage.</p> <p>Guided Practice (15 minutes): - Divide students into small groups. Provide each group with a set of batteries, wires, motors, battery meters, and volt-ohm meters. - Have students measure the voltage of each battery type using the volt-ohm meters. - Guide students through calculating the power (P=VI) each battery can deliver. - Students will then connect each battery to a small motor and observe the operation.</p> <p>Independent Practice (15 minutes): - Students will use their measurements and calculations to determine which battery is best suited for various robotic applications. - They will complete a worksheet where they match battery types to specific robotic components based on power requirements.</p> <p>Conclusion (5 minutes): - Have a group discussion on the findings. Ask students which battery they would choose for different robotics scenarios and why. - Emphasize the importance of proper battery usage and disposal.</p> <p>Assessment: - Participation in group activities. - Completion of the worksheet. - Short reflections on what they learned about the different batteries and their applications in robotics.</p> <p>Homework: - Students will write a one-page essay on the environmental impact of batteries in technology and propose sustainable practices for battery usage and disposal in the field of robotics.</p>"},{"location":"lessons/neopixel/","title":"NeoPixel Stick Lesson Plans with MicroPython","text":"<p>NeoPixels are VERY popular in all of our classes.  We have an entire site dedicated to teaching computational thinking using LED strips called our Moving Rainbow Project.</p> <p></p> <p>We have found ways to purchase 8-pixel strips for under a dollar each.  They are also available at Sparkfun and Adafruit for $6 each.</p>"},{"location":"lessons/neopixel/#sample-prompt","title":"Sample Prompt","text":"<pre><code>We just purchased 30 of these 8-pixel Neopixel Sticks for use in our 9th grade robotics classrooms.  Our students all have experience with introduction to MicroPython.  Can you suggest some lesson plans that use these devices. \n</code></pre>"},{"location":"lessons/neopixel/#sample-response","title":"Sample Response","text":""},{"location":"lessons/neopixel/#1-introduction-to-digital-electronics-and-rgb-leds","title":"1. Introduction to Digital Electronics and RGB LEDs","text":""},{"location":"lessons/neopixel/#objective","title":"Objective","text":"<p>Understand how RGB LEDs work and how they can be controlled with digital signals.</p>"},{"location":"lessons/neopixel/#activities","title":"Activities","text":"<ul> <li>Basic circuitry: Set up the Neopixel Stick with a microcontroller and a breadboard.</li> <li>Programming LEDs: Light up the LEDs using MicroPython.</li> <li>Experiment with colors: Create custom colors by mixing different intensities of red, green, and blue.</li> </ul>"},{"location":"lessons/neopixel/#2-programming-loops-and-patterns","title":"2. Programming Loops and Patterns","text":""},{"location":"lessons/neopixel/#objective_1","title":"Objective","text":"<p>Learn how to create loops and control flow in MicroPython to generate patterns.</p>"},{"location":"lessons/neopixel/#activities_1","title":"Activities","text":"<ul> <li>Design and implement a simple pattern using loops.</li> <li>Create a \"Knight Rider\" scanner effect.</li> <li>Discuss the effects of changing loop variables on patterns.</li> </ul>"},{"location":"lessons/neopixel/#3-data-representation-and-visualization","title":"3. Data Representation and Visualization","text":""},{"location":"lessons/neopixel/#objective_2","title":"Objective","text":"<p>Demonstrate how data can be represented visually using LEDs.</p>"},{"location":"lessons/neopixel/#activities_2","title":"Activities","text":"<ul> <li>Display battery level or signal strength with LEDs (bar graph).</li> <li>Create a simple equalizer for volume levels if a sound sensor is available.</li> </ul>"},{"location":"lessons/neopixel/#4-introduction-to-communication-protocols","title":"4. Introduction to Communication Protocols","text":""},{"location":"lessons/neopixel/#objective_3","title":"Objective","text":"<p>Understand the basics of serial communication and how data is transmitted to LEDs.</p>"},{"location":"lessons/neopixel/#activities_3","title":"Activities","text":"<ul> <li>Explain serial communication and the Neopixel Stick's use of it.</li> <li>Send a byte of data to control the color of an LED.</li> </ul>"},{"location":"lessons/neopixel/#5-user-input-and-interactivity","title":"5. User Input and Interactivity","text":""},{"location":"lessons/neopixel/#objective_4","title":"Objective","text":"<p>Integrate user input to control the LEDs.</p>"},{"location":"lessons/neopixel/#activities_4","title":"Activities","text":"<ul> <li>Program LEDs to respond to buttons or sensors.</li> <li>Create interactive games like a reaction timer.</li> </ul>"},{"location":"lessons/neopixel/#6-function-and-modular-coding","title":"6. Function and Modular Coding","text":""},{"location":"lessons/neopixel/#objective_5","title":"Objective","text":"<p>Learn about creating reusable code blocks (functions).</p>"},{"location":"lessons/neopixel/#activities_5","title":"Activities","text":"<ul> <li>Refactor pattern code into functions.</li> <li>Build custom functions for lighting effects.</li> </ul>"},{"location":"lessons/neopixel/#7-synchronization-and-timing","title":"7. Synchronization and Timing","text":""},{"location":"lessons/neopixel/#objective_6","title":"Objective","text":"<p>Explore the concept of timing and delays in programming.</p>"},{"location":"lessons/neopixel/#activities_6","title":"Activities","text":"<ul> <li>Create LED animations with timing.</li> <li>Investigate the impact of delays on animation.</li> </ul>"},{"location":"lessons/neopixel/#8-art-and-design-with-technology","title":"8. Art and Design with Technology","text":""},{"location":"lessons/neopixel/#objective_7","title":"Objective","text":"<p>Encourage creativity by integrating art and design with LED programming.</p>"},{"location":"lessons/neopixel/#activities_7","title":"Activities","text":"<ul> <li>Collaborative art project with LEDs representing pixels.</li> <li>Program sticks to change color in response to music or stimuli.</li> </ul> <p>Remember to balance theory with hands-on activities and encourage experimentation.</p>"},{"location":"prompts/","title":"Sample Prompt for Robot Day","text":"<p>Batteries</p> <p>Motor Circuit</p> <p>H-Bridge</p> <p>PWM Lab</p> <p>Displays</p> <p>Microcontroller Table</p>"},{"location":"prompts/batteries/","title":"Batteries","text":""},{"location":"prompts/batteries/#sample-prompt","title":"Sample Prompt","text":"<p>Prompt Text</p> <p>The image above is a poster board we are using in our \"Robot Day\" to explain robot batteries.  The centerpiece of robot day is a large robot corral full of about a dozen $19 collision avoidance robots built around the RP2040 microcontroller from the Raspberry Pi Foundation.  We want to get across the point that all our robots need batteries to run and there are many different types of batteries we can choose from.</p> <p>Please generate a sample 5 minute dialog that a  teacher/mentor/volunteer might have with an 8-year student that  comes up to the table to talk about batteries in our collision avoidance robots.</p>"},{"location":"prompts/batteries/#5-year-old-student-1st-grade","title":"5-year Old Student (1st Grade)","text":"<p>Teacher: Hi there! Do you see these little things on the table? Do you know what they are?</p> <p>Student (5-year-old): Umm... I think they're batteries?</p> <p>Teacher: That's right! Batteries are like tiny boxes that hold energy. They give power to things like robots and toys, so they can move and light up.</p> <p>Student: Oh! Like the batteries in my toy car?</p> <p>Teacher: Exactly! Different batteries can hold different amounts of energy, just like some cups hold more water than others. See this small coin-shaped one? It's called a coin cell battery. It doesn't hold a lot of energy, but it's very small. It can power something tiny, like a watch.</p> <p>Student: It's so small!</p> <p>Teacher: Yes, and then look at these bigger ones: AA and AAA batteries. They are the ones we use in TV remotes or flashlights. They can make things run for longer than a tiny coin battery.</p> <p>Student: Why are some bigger?</p> <p>Teacher: Bigger batteries can hold more energy. Think of it like a bigger backpack that can carry more things inside it. The bigger the battery, the more energy it can give to your robot or toy.</p> <p>Student: Oh, I see. What about that big blue one?</p> <p>Teacher: That's a special kind of battery called a lithium-ion battery. It can be charged over and over again. Instead of throwing it away when it's empty, we can plug it in and fill it up with energy again, like refilling a water bottle.</p> <p>Student: That's cool! So I don't have to buy new ones all the time?</p> <p>Teacher: Exactly! Rechargeable batteries are better for the Earth, too, because we don't have to throw them away so often.</p> <p>Student: I like that. So the robot uses these batteries to move?</p> <p>Teacher: Yes, the robot's \"heart\" is the battery. Without it, the robot wouldn't be able to move, flash lights, or do anything. The battery gives the robot the energy it needs to follow your commands.</p> <p>Student: That's awesome! Can I touch one?</p> <p>Teacher: Sure, but let's be careful. We don't open them up or put them in our mouth. Batteries can have chemicals inside that are not safe to touch. But we can look at them and feel their shape. They're smooth, aren't they?</p> <p>Student: They feel smooth and hard.</p> <p>Teacher: Right! And remember, batteries can make your robots and toys work. They're like tiny power packs you can carry around. Without them, robots would just sit still.</p> <p>Student: I want to have a robot that uses a battery so it can move!</p> <p>Teacher: That's a great idea. One day, you can build your own robot and power it up with the right battery. Keep learning and exploring!</p>"},{"location":"prompts/batteries/#12-year-old-battery-dialog","title":"12-year Old Battery Dialog","text":"<p>Teacher: Hey there! I see you're looking at our battery display. Do you have any questions about these different types of batteries?</p> <p>Student (12-year-old): I've seen different sizes and shapes of batteries before, but what do all those numbers and words mean?</p> <p>Teacher: Good question. Let's start with something simple. Each battery has something called a voltage. Voltage is kind of like how much electrical \"push\" the battery can give. For example, a AA battery usually has about 1.5 volts, while some lithium batteries have around 3.7 volts.</p> <p>Student: So the higher the voltage, the stronger the push?</p> <p>Teacher: Exactly. The push helps power things like your robot or a motor. But too high or too low voltage can be a problem. You need the right battery with the right voltage for your device.</p> <p>Student: What about \"polarity\"? I see plus and minus signs on batteries.</p> <p>Teacher: Polarity refers to the positive (+) and negative (--) ends of a battery. The positive end should match the positive terminal in your device, and the negative end should match the negative terminal. If you put a battery in the wrong way, it won't work, and it could sometimes damage your device.</p> <p>Student: Oh, so I have to be careful about how I insert it. What about the words \"rechargeable\" and \"non-rechargeable\"?</p> <p>Teacher: Non-rechargeable batteries are used once until they run out, then you have to recycle or dispose of them. Rechargeable batteries can be charged up again and again. That means they can be used many times, which can save money and reduce waste.</p> <p>Student: That seems better. But why are some rechargeable and others not?</p> <p>Teacher: It depends on the chemicals inside the battery. Rechargeable batteries, like lithium-ion ones, can be restored to their full energy by plugging them into a charger. Non-rechargeable batteries use different chemicals that don't allow for that process. Once their stored energy is used up, they're done.</p> <p>Student: That makes sense. What about \"milliamp hours\"? I see that written as \"mAh\" on some batteries.</p> <p>Teacher: \"mAh\" stands for milliamp hours. It's a measurement of how much energy the battery can store. Think of it as the battery's \"fuel tank.\" The larger the milliamp hour rating, the longer the battery can power a device before running out. For example, a AAA battery might have around 1,000 mAh, while a bigger rechargeable battery might have 2,500 mAh or more.</p> <p>Student: So a battery with more mAh will make my device run longer?</p> <p>Teacher: Generally, yes. If your device draws a certain amount of current, a higher mAh battery will last longer before it needs recharging or replacing. Just remember to match the battery's voltage and size to what your device needs.</p> <p>Student: Got it. So when I'm picking a battery, I need to think about the right voltage, put it in the correct way, consider if I want rechargeable or not, and look at the mAh rating for how long it'll last?</p> <p>Teacher: You've summed it up perfectly! Understanding polarity, voltage, rechargeability, and milliamp hours helps you choose the best battery for your project. This kind of knowledge is really useful when building robots or other electronic projects.</p> <p>Student: Thanks! Now I feel a lot more confident about choosing batteries.</p>"},{"location":"prompts/displays/","title":"Displays","text":"<p>Prompt Text</p> <p>Above is an image of a poster board we are using in our Robot Day event.  There are many different types of displays with different sizes and costs.</p> <p>Please generate a sample five minute dialog between a teacher-volunteer-mentor and a student.  Discuss the different types of displays and their costs. Talk about the tradeoffs of low-cost simple displays and the more complex graphic displays.  Mention that the faces on our robots use the larger 128x64 OLED displays.  Also mention how bright and high contrast they are so you can see them even when the robots are on the floor and we are standing up.</p> <p>Also mention that the table now has the new 240x240 circular smart watch displays and color OLEDs.</p>"},{"location":"prompts/displays/#sample-response","title":"Sample Response","text":"<p>Teacher: Hi there! I see you're checking out our \"Robot LEDs and Displays\" board. See all these different screens and lights? Each type can show information in a unique way.</p> <p>Student: Whoa, there are so many! I see small LEDs, a bar graph, some weird strips of lights, and bigger screens. What's the difference between all of them?</p> <p>Teacher: Great question. Let's start simple. These tiny LEDs---like the little red one here---are really cheap. They're just a few cents each. They can only show on or off, and sometimes a few colors if it's an RGB LED. But they don't show numbers or letters by themselves; we have to arrange them in patterns.</p> <p>Student: So they're cheap, but not very \"smart,\" right?</p> <p>Teacher: Exactly. Then we have something like this seven-segment display. It's about $3, and it can show numbers by lighting up certain segments. This is how old-school digital clocks show the time. It's still pretty simple and affordable, but more useful than a single LED because you can display digits.</p> <p>Student: Okay, so that's a step up. What about these small OLED displays?</p> <p>Teacher: These small OLEDs can cost around $3 to $5. They let you display not just numbers, but also text and simple graphics. They're higher in cost than simple LEDs or seven-segment displays, but they're a lot more flexible. You can draw shapes, show images, and even little animations if you want.</p> <p>Student: That's cool. And what about these bigger ones?</p> <p>Teacher: This larger OLED display here is 128x64 pixels, and it costs about $15. More pixels means higher resolution and the ability to show much more detail---like little robot faces! In fact, our robots use these larger 128x64 OLEDs for their faces. They're bright, high-contrast, and you can easily see them even if the robot is down on the floor and you're standing up. That brightness and clarity are really helpful in a classroom setting, so everyone can see the robot's expression.</p> <p>Student: So more detail means more cost?</p> <p>Teacher: Generally, yes. More complex displays with better resolution cost more. But they allow you to do much more creative things, like showing a smiley face, animations, sensor readings, or even tiny games. It's a tradeoff: simpler displays are cheaper and easier to use, while more complex displays are more expensive but can show a lot more information.</p> <p>Student: That makes sense. I see something about \"NeoPixels\" and \"RGB\" strips. What's that?</p> <p>Teacher: NeoPixels are addressable RGB LEDs. You can control each LED's color individually. They're about $5 per meter and can create all kinds of patterns and effects, like rainbow chases and blinking sequences. They're great for adding colorful flair to a robot or project.</p> <p>Student: And these displays that look like little smartwatches?</p> <p>Teacher: Ah, those are the new 240x240 circular displays, like what you'd find in a smartwatch. They're higher resolution and often in color, making them more expensive and a bit more complicated to program. We also have color OLEDs, which are beautiful but cost more and need more programming skills to handle the graphics and color data.</p> <p>Student: So if I just need something simple, I go for a seven-segment or a basic LED. If I want color and fancy graphics, I can use a color OLED or a smartwatch-style display, but it's going to cost more and be harder to code?</p> <p>Teacher: You've got it. Choosing a display is all about balancing cost, complexity, and what you need it to show. For our $19 collision avoidance robots, we liked the 128x64 OLED because it's a good balance. It's bright, easy to read, and flexible enough to show faces and messages, but not as expensive or complicated as a full-color display.</p> <p>Student: That makes sense. So as I get better at programming and I have a bigger budget, I can upgrade to fancier displays.</p> <p>Teacher: Exactly. Start simple, and as your skills and project requirements grow, you can move up to more advanced displays. It's all about learning step by step.</p>"},{"location":"prompts/h-bridge/","title":"H-Bridge","text":""},{"location":"prompts/h-bridge/#prompt","title":"Prompt","text":"<p>Prompt Text</p> <p>The image above describes an H-Bridge circuit for changing the direction of a motor.  We have an animated H-Bridge board that allows students to change the setting of four switches to make an pattern of LED lights simulate current flowing through a motor.</p> <p>Please generate a sample five-minute dialog between a teacher-volunteer-mentor and a student. The dialog should walk through showing the switch positions for forward (green LED with the theater chase pattern), reverse (blue LEDs with the theater chase pattern) and short circuit (red LEDs). Both the left and right can be short circuited.</p>"},{"location":"prompts/h-bridge/#sample-response-dialog","title":"Sample Response Dialog","text":"<p>Teacher: Hi there! Come check this out. We've got this cool H-Bridge demonstration board. It simulates how reversing the polarity of a motor's connections changes its direction. Do you know what an H-Bridge is?</p> <p>Student: Not really. I see something that looks like the letter \"H\" and some switches, but I'm not sure how it works.</p> <p>Teacher: No problem. Imagine we have a motor in the middle of this \"H.\" We have four switches: two on the top and two on the bottom, one pair on the left side and one pair on the right side. By closing or opening these switches, we control how electricity flows through the motor. That lets us make the motor spin forward, backward, or even create a short circuit if we're not careful.</p> <p>Student: So, different switch settings cause different directions?</p> <p>Teacher: Exactly. Watch the LEDs. The board uses different colors and patterns to show what's happening. Let's start with the \"forward\" direction. To go forward, we need current flowing through the motor from left to right or right to left depending on how we define it. In this case, let's say forward means turning on the top-left switch and the bottom-right switch.</p> <p>Student: So I flip the top-left switch \"on\" and the bottom-right switch \"on.\" What happens?</p> <p>Teacher: Go ahead. Flip those two switches. See the green LEDs lighting up with that theater chase pattern?</p> <p>Student: Wow, they're green and kind of moving in a sequence!</p> <p>Teacher: That green theater chase pattern represents current flowing in one direction. This means the motor would spin in the forward direction if it were actually hooked up. We call this \"forward\" mode.</p> <p>Student: Cool! So that's how we get forward motion. How about reverse?</p> <p>Teacher: To reverse the motor, we want the electricity to flow in the opposite direction. That means we switch it around. Instead of top-left and bottom-right, let's try top-right and bottom-left switches this time.</p> <p>Student: Okay, I'll turn off the top-left and bottom-right, and turn on the top-right and bottom-left.</p> <p>Teacher: Great. Now look at the LEDs again. See how they turned blue, and you've got that same theater chase effect, but in blue?</p> <p>Student: Yes, I see blue LEDs chasing. That means the current is flowing the opposite way?</p> <p>Teacher: Exactly. Blue represents the reverse direction. If this were a real motor, it would now spin the other way.</p> <p>Student: So green is forward, and blue is reverse. That's easy to remember.</p> <p>Teacher: Perfect. Now, there's another scenario we should talk about---what if you accidentally create a short circuit? That can happen if you turn on both switches on the same side at the same time, for example both top switches together, or both bottom switches together, without giving the current a proper path through the motor.</p> <p>Student: So if I turn on both top-left and top-right at the same time, what happens?</p> <p>Teacher: Give it a try. Turn off your previous switches first. Now flip on top-left and top-right.</p> <p>Student: Whoa, the LEDs are now red!</p> <p>Teacher: That's the short circuit warning. Red LEDs light up to show that if this were a real circuit, you'd be connecting the power directly from the positive line to the negative line without going through the motor. That can damage the battery, wires, or the motor driver in a real situation.</p> <p>Student: So red means I've made a bad connection?</p> <p>Teacher: Exactly. Short circuits are something you want to avoid. The same thing happens on the bottom side. If you turn on both bottom-left and bottom-right switches at the same time, you'll get red LEDs too, indicating another type of short.</p> <p>Student: I see. So the correct combinations are:</p> <ul> <li>Forward: Top-left and Bottom-right (Green)</li> <li>Reverse: Top-right and Bottom-left (Blue)</li> <li>Short circuits if I turn on both top or both bottom together (Red)</li> </ul> <p>Teacher: That's a perfect summary. This H-Bridge demo helps you see how changing which switches are closed reverses the motor direction and how certain incorrect settings create a short. In a real robot, we use transistor-based circuits, or integrated chips called H-Bridge drivers, instead of manual switches. But the idea is the same.</p> <p>Student: This is really helpful. Now I understand why they call it an H-Bridge---it literally looks like an \"H,\" and we're bridging the current across the motor in different ways.</p> <p>Teacher: That's right. With this knowledge, you can picture how robots and other machines change direction with just a few electronic switches. Good job exploring the concept!</p>"},{"location":"prompts/microcontrollers/","title":"MicroControllers","text":"<p>Prompt Text</p> <p>The image above is a board we are using in our \"Robot Day\"  to explain microcontrollers.  The centerpiece of robot day is a large robot corral full of about a dozen $19 collision avoidance robots built around the RP2040 microcontroller from the Raspberry Pi Foundation.  We want to get across the point the the new $4 Raspberry Pi Pico is a LOT more powerful then the old expensive $30 Arduino microcontrollers.  They all run MicroPython in our school's coding classes.</p> <p>Please generate a sample 5 minute dialog that a teacher/mentor/volunteer might have with an 8-year student that comes up to the table to talk about microcontrollers in our collision avoidance robots.</p>"},{"location":"prompts/microcontrollers/#sample-dialog-for-8-year-old","title":"Sample Dialog for 8-Year Old","text":"<p>Teacher: Hi there! I see you\u2019re interested in our robot station. Do you know what a microcontroller is?</p> <p>Student: Not really. What is a microcontroller?</p> <p>Teacher: Great question! A microcontroller is like a tiny computer chip that can control things. It\u2019s the brain of our robots\u2014helping them move, avoid obstacles, and listen to instructions we write in code.</p> <p>Student: So it\u2019s like a mini computer?</p> <p>Teacher: Exactly. Just like a big computer can run programs, these little chips run special programs that tell the robot when to go forward, when to turn, or when to stop so it doesn\u2019t crash into things.</p> <p>Student: Cool. Which one is inside the robot?</p> <p>Teacher: We\u2019re using one called the Raspberry Pi Pico. See this little green board here? That\u2019s the Pico. It\u2019s a lot smaller than the bigger blue boards we used to use called Arduinos, but it\u2019s actually more powerful.</p> <p>Student: More powerful than that big one? How?</p> <p>Teacher: Well, the older Arduino boards\u2014like the Arduino Uno\u2014came out many years ago, and they were really good at the time. But the Raspberry Pi Pico came out more recently, in 2021, and technology has improved a lot since then. The Pico can run faster, handle more complex tasks, and store more data, even though it\u2019s only about $4 compared to the Arduino Uno\u2019s $30 price tag.</p> <p>Student: So cheaper and more powerful?</p> <p>Teacher: That\u2019s right! The Pico can run at 133 megahertz, which means it can do a whole lot more instructions every second than the Arduino Uno, which runs at only 16 megahertz. Also, the Pico can run MicroPython\u2014do you do any coding in your school?</p> <p>Student: We have a coding class, and we learned a little bit of Python. Is that the same?</p> <p>Teacher: Yes! MicroPython is like a smaller version of Python that these little devices can understand. Instead of a complicated language, you can write simple Python code to make your robot drive around and avoid bumping into walls.</p> <p>Student: That sounds much easier!</p> <p>Teacher: It is easier. And because MicroPython is similar to what you learn in class, you can write simple commands like \u201cforward()\u201d or \u201cstop()\u201d and the robot\u2019s microcontroller will follow those instructions. It makes learning how to control robots a lot more fun.</p> <p>Student: So the robot listens to the code I write, just like a program on my computer?</p> <p>Teacher: Exactly. You write the code on a computer, send it to the robot\u2019s microcontroller, and then it will remember it and follow what you said\u2014driving around the corral, turning away from obstacles, and never crashing.</p> <p>Student: That\u2019s so cool! Can I try to see how it works?</p> <p>Teacher: Sure! We have a sample code here that says \u201cgo straight until you see something in front, then turn left.\u201d We can load this code into the Pico on the robot. When I place the robot in the corral, it will start moving forward. When its sensor notices a wall, it\u2019ll turn left to avoid it. Let\u2019s watch together.</p> <p>Student: Wow, it did it! It turned by itself!</p> <p>Teacher: Isn\u2019t that great? All that is possible because the Raspberry Pi Pico is running the code you gave it. That\u2019s the power of modern microcontrollers. They\u2019re small, inexpensive, and easy to program with something you\u2019re already learning\u2014Python. By understanding how these tiny \u201crobot brains\u201d work, you can create your own inventions and solve problems in creative ways.</p> <p>Student: I want to learn more and build my own robot!</p> <p>Teacher: That\u2019s the spirit! Keep practicing your coding, and soon you\u2019ll be able to design your own robots and programs. Technology keeps improving, and the more you learn, the more you can do. Just remember, every big invention starts with small steps\u2014just like the robots here.</p>"},{"location":"prompts/microcontrollers/#sample-dialog-with-a-13-year-old-student","title":"Sample Dialog with a 13-Year Old Student","text":"<p>Teacher: Hi there! Welcome to our robot station. I noticed you\u2019re checking out our microcontrollers. Do you know much about how these little boards work inside the robot?</p> <p>Student (13-year-old): I know a bit. They\u2019re like small computers, right?</p> <p>Teacher: Exactly. Microcontrollers are small, self-contained computers that handle all the robot\u2019s logic\u2014things like interpreting sensor data, making decisions, and controlling the motors. They don\u2019t need a separate operating system like a laptop does; instead, they just run one program at a time.</p> <p>Student: So these robots are using microcontrollers to move around and not crash into each other?</p> <p>Teacher: That\u2019s right. We\u2019re using a newer microcontroller called the Raspberry Pi Pico. It\u2019s relatively new and costs about $4, which is pretty amazing compared to older boards like the Arduino Uno that cost around $30.</p> <p>Student: So the Pico is cheaper. Is it also better?</p> <p>Teacher: In many ways, yes. The Raspberry Pi Pico runs at a much higher clock speed\u2014about 133 MHz compared to the Arduino Uno\u2019s 16 MHz. That means it can execute a lot more instructions per second. It also has more memory and can handle more complex tasks. Plus, it supports MicroPython, which makes programming more accessible if you\u2019re familiar with Python from school.</p> <p>Student: We\u2019ve actually learned a bit of Python in our coding class. Is MicroPython just a smaller version of Python?</p> <p>Teacher: Exactly. MicroPython is a streamlined version of Python that\u2019s designed to run efficiently on microcontrollers. Instead of dealing with more complex languages like C or C++\u2014which you\u2019d typically use for Arduino\u2014you can use a language that\u2019s closer to what you\u2019re learning now. It makes the coding part feel less intimidating and more direct.</p> <p>Student: So I can use Python to tell the robot what to do, and the Pico will just run it?</p> <p>Teacher: Yes! You write your Python code on a computer, upload it to the Pico, and then the Pico \u201cremembers\u201d the instructions. Whenever you power it on, it\u2019ll run those instructions, controlling the motors and reading sensors\u2014like the ultrasonic sensor that tells the robot when it\u2019s close to an obstacle.</p> <p>Student: Wait, so the Pico can handle inputs from sensors and then quickly adjust the robot\u2019s movements in real-time?</p> <p>Teacher: Exactly. That\u2019s what makes a robot seem \u201csmart.\u201d The microcontroller constantly reads sensor data and uses the logic you\u2019ve written to decide how to move next. With the Pico\u2019s speed and memory, it can handle more sensors or more complex algorithms if you want.</p> <p>Student: That sounds way more flexible than older boards. Is that why you\u2019re using the Pico for these collision avoidance robots?</p> <p>Teacher: Yes. The Pico\u2019s flexibility, cost-effectiveness, and Python support make it ideal for teaching. It\u2019s powerful enough for advanced projects, yet simple enough for beginners to dive in. And the fact that it\u2019s cheaper means we can have more robots for students to experiment with.</p> <p>Student: That\u2019s really cool. I guess with Arduino, you had to know C/C++ and deal with a slower processor?</p> <p>Teacher: Right, and Arduino boards often have more limited RAM. The Arduino Uno has only a couple kilobytes of RAM, while the Pico has around 264 kilobytes. That doesn\u2019t sound huge compared to a laptop, but it\u2019s a big difference in the microcontroller world. More memory means more complex logic and bigger programs you can run.</p> <p>Student: So basically, these Pico-powered robots are more cost-effective and more powerful, and they\u2019re easier to program because I can use Python. That\u2019s a huge advantage.</p> <p>Teacher: You\u2019ve got it. Technology has progressed, and these newer microcontrollers let us do more, teach more, and learn more at a lower cost. It means you can spend your time being creative and experimenting with code, instead of fighting with old limitations.</p> <p>Student: That makes me want to try coding something for these robots. Maybe I can write a program that makes the robot zigzag around or follow a line.</p> <p>Teacher: That\u2019s a great idea. You could start by writing a simple loop in MicroPython that reads a sensor and adjusts the motor speeds. Before you know it, you\u2019ll be implementing more advanced features like pathfinding or pattern recognition. The possibilities are open to whatever you can imagine.</p> <p>Student: Thanks for explaining all this. I feel more confident now. I\u2019m excited to try something with the Pico.</p> <p>Teacher: Anytime. Your understanding of the tools you\u2019re using will help you become a more creative and capable engineer or programmer. Feel free to come back with any questions as you get started!</p>"},{"location":"prompts/motors/","title":"Motor Circuit","text":"<p>Prompt Text</p> <p>The image above shows a battery pack with two AA batteries and some jumper wires connected to a small DC hobby motor that is connected to a 40-to-1 gear reduction assembly for driving a wheel on a robot.  Please generate a sample dialog between a teacher/volunteer/mentor and a student about this circuit.  Describe how the polarity can be reversed to change the direction of a motor.</p>"},{"location":"prompts/motors/#sample-5-year-old-dialog","title":"Sample 5-Year Old Dialog","text":"<p>Teacher: Hi there! I see you're curious about this setup. We have a simple circuit here with a battery pack, some wires, and a small DC motor connected to a gear assembly. What do you think is happening when we connect the batteries to the motor?</p> <p>Student: It looks like the batteries give the motor power so it can spin. Is that right?</p> <p>Teacher: Exactly! The two AA batteries in the pack provide electricity---this electricity flows through the wires into the motor. The motor then spins the gear attached to it, and that gear can turn a wheel on a robot.</p> <p>Student: So the motor turns the wheel, and that makes the robot move?</p> <p>Teacher: That's right. The gear reduction makes the motor spin more slowly, but with more force, so it can move a wheel. Without the gears, the motor might spin too fast and not have enough torque to move a heavier wheel effectively.</p> <p>Student: I've heard something about polarity before. How does that matter here?</p> <p>Teacher: Good question. Each battery has two ends: a positive end and a negative end. When you connect the positive end of the battery to the motor's positive terminal, and the negative end of the battery to the motor's negative terminal, the motor spins in one direction.</p> <p>Student: What if I switch the wires around?</p> <p>Teacher: If you reverse the polarity---meaning you flip which wire is connected to positive and which is connected to negative---the motor will spin in the opposite direction. So if it was spinning clockwise before, now it would spin counterclockwise.</p> <p>Student: That's really cool. So just by swapping the red and black wires, I can make the motor go backward?</p> <p>Teacher: Exactly. Red is usually connected to the positive battery terminal, and black to the negative, which makes the motor spin one way. If you reverse them---black on the battery's positive terminal and red on the negative terminal---the motor's direction changes.</p> <p>Student: So this can control which way the robot's wheels turn?</p> <p>Teacher: Yes. By changing polarity, you control the direction the motor shaft spins. In a robot, if you want it to move forward or backward, you can do it by reversing the polarity of the motor connections. In more complex robots, we use switches or special electronic components like H-bridges to reverse polarity without having to physically switch the wires.</p> <p>Student: That makes sense. So polarity is basically about which way the electricity is flowing, and that flow direction decides how the motor spins.</p> <p>Teacher: Exactly! Understanding polarity helps you control the direction of motors and many other electrical components. It's a key concept in building and programming robots.</p> <p>o1</p>"},{"location":"prompts/pwm-lab/","title":"PWM Lab","text":""},{"location":"prompts/pwm-lab/#sample-prompt","title":"Sample Prompt","text":"<p>Prompt Text</p> <p>We have created a hands-on lab that teaches students what Pluse Width Modulation is an how it is used to change the direction and speed of a motor in a robot.</p> <p>Our lab consists of a small plastic box with a potentiometer on the front side and a 128x64 OLED display on the top of the box.</p> <p>When the student turns the potentiometer, the width of pulse on the display changes and the brightness of an LED changes.</p> <p>Please write a 5-minute dialog between a teacher-volunteer-mentor and a 10-year old student that is learning how STEM robots work.  The goal is to understand how the speed and direction of motors is controlled in a simple $19 collision avoidance robot.</p>"},{"location":"prompts/pwm-lab/#sample-response","title":"Sample Response","text":"<p>Teacher: Hi there! I see you're turning that knob on our little box. Notice anything happening on the screen or the LED?</p> <p>Student: Yeah, the LED gets brighter when I turn the knob one way, and dimmer when I turn it the other way. Also, I see the pattern on the screen changing. It's like little lines getting thicker or thinner.</p> <p>Teacher: Exactly! That knob you're turning is called a potentiometer, and it changes something called the \"duty cycle\" of a signal. The pattern you see on the screen is a waveform, and when it gets \"wider\" at the top, that means the LED is on for a longer time. This method of controlling how long something is on versus off is called Pulse Width Modulation, or PWM for short.</p> <p>Student: Pulse Width Modulation? Is that like turning it on and off really fast?</p> <p>Teacher: You've got it! The idea is that we turn the power on and off so quickly that your eyes don't see the flicker, but instead notice a change in brightness. If the LED is on most of the time, it looks brighter. If it's off more than it's on, it looks dimmer.</p> <p>Student: So if I can use PWM to control brightness, can I also use it to control the speed of the motors in the robot?</p> <p>Teacher: Exactly! In our $19 collision avoidance robot, we use PWM signals to the motor. By changing how much of the time the motor is powered versus unpowered, we can make it spin faster or slower. High duty cycle---on longer---means faster speed. Lower duty cycle---on for a shorter time---means slower speed.</p> <p>Student: That's cool! So if I turn the potentiometer, I could make the motor go slower or faster by changing the duty cycle?</p> <p>Teacher: Yes, that's the idea. In this lab, you're seeing the concept with just an LED and a display. In the actual robot, there's code running on a microcontroller like the Raspberry Pi Pico. It takes your commands and sends PWM signals to the motor driver. The motor driver then controls how much current goes into the motors.</p> <p>Student: What about making the robot go backward? Does PWM do that too?</p> <p>Teacher: PWM mainly controls speed. To make the robot go forward or backward, we use an H-bridge circuit, which we learned about earlier. The H-bridge can reverse the direction of the current going through the motor. If the current flows one way, the motor spins forward; if it flows the other way, it spins backward.</p> <p>Student: So direction is from the H-bridge, and speed is from PWM?</p> <p>Teacher: Exactly! Think of the H-bridge as controlling left or right directions of traffic flow, and PWM as controlling how many cars are let through at a time. By combining these two techniques, we can make the robot's wheels spin in either direction and at different speeds.</p> <p>Student: So the potentiometer on the lab box is like what the robot's computer does by itself?</p> <p>Teacher: Yes, the robot's computer reads instructions from the code you write. Instead of you turning a knob, you'll write commands. The microcontroller will generate a PWM signal inside its tiny \"brain\" and send it out to the motors. If it wants to slow down, it reduces the duty cycle. If it wants to speed up, it increases the duty cycle.</p> <p>Student: That's awesome. So just by using PWM and an H-bridge, I can make a robot move however I want?</p> <p>Teacher: You got it. You can make it speed up, slow down, reverse direction, or even stop. Understanding PWM and H-bridges is a big step in learning how to control motors in robotics.</p> <p>Student: I feel like a robot engineer already!</p> <p>Teacher: You're well on your way! Now, keep experimenting with that potentiometer and watch how the waveform and LED brightness change. That's the first step to understanding how you'll control a real robot's motion.</p>"},{"location":"prompts/sensors/","title":"Sensors","text":"<p>Prompt Text</p> <p>Above is an image of a poster board we are using for our Robot Day at our school to teach students about sensors.</p> <p>Please create a sample five-minute dialog between a teacher/volunteer/mentor and a student about this board and how we use time-of-flight sensors to measure the distance between our robot and the wall of the corral wall that encloses our robots.</p>"},{"location":"prompts/sensors/#response","title":"Response","text":"<p>Teacher: Hi there! Welcome to Robot Day! I see you're checking out our sensor board. Have you ever seen any of these sensors before?</p> <p>Student: Not really. What do they all do?</p> <p>Teacher: Great question! These sensors help robots sense the world around them. Some are really simple, like this micro-switch. When something presses on it, it acts like a bump sensor and tells the robot, \"Hey, you hit something!\" It's just an on-off signal.</p> <p>Student: That's cool, but it seems pretty basic. What about the others?</p> <p>Teacher: Good observation! As you go across the board, the sensors get more advanced. For example, this infrared sensor sends out invisible light and detects if something reflects it back. It's good for detecting obstacles, but it doesn't work well in bright sunlight.</p> <p>Student: Okay, so it's more useful indoors?</p> <p>Teacher: Exactly. Then we have the ultrasonic sensor, like this HC-SR04. It works like a bat! It sends out a high-pitched sound wave that humans can't hear, waits for it to bounce back, and calculates the distance to an object. This is great for measuring how far the robot is from a wall.</p> <p>Student: That's so smart! Is that what you use in the robot corral?</p> <p>Teacher: Actually, in our corral, we use a more advanced sensor called a Time-of-Flight sensor. It's this little one here, the VL53L0X. It works by sending out an infrared laser pulse and measuring how long it takes for the light to bounce back to the sensor. Since light travels incredibly fast, it can calculate the distance with amazing precision.</p> <p>Student: Wow! So it's even faster than the ultrasonic sensor?</p> <p>Teacher: Exactly. The ultrasonic sensor takes about 50 milliseconds to get a reading, while the Time-of-Flight sensor only takes 1 millisecond! That means it can react faster to changes, which is important when our robots are moving quickly.</p> <p>Student: And it looks so small compared to the ultrasonic sensor!</p> <p>Teacher: That's another advantage. Time-of-Flight sensors are tiny and lightweight, making them great for small robots. They also don't get confused by sound waves like the ultrasonic sensor might if there's a lot of noise in the room.</p> <p>Student: What about this LIDAR? That looks even bigger.</p> <p>Teacher: Good eye! LIDAR is like a Time-of-Flight sensor but on steroids. It spins around and measures distances in all directions, creating a 360-degree map of the robot's surroundings. It's super precise and can detect objects far away---up to 16 meters. But it's also very expensive, costing around $300, so it's not practical for small, low-cost robots like ours.</p> <p>Student: Oh, so the Time-of-Flight sensor is better for our corral robots because it's small, fast, and affordable?</p> <p>Teacher: You've got it! Our $19 collision-avoidance robots use these Time-of-Flight sensors to measure the distance to the walls of the corral. If the robot gets too close to a wall, the sensor tells it to stop and turn away before it bumps into anything.</p> <p>Student: That makes sense. So each sensor has its own purpose, depending on the robot and what it needs to do.</p> <p>Teacher: Exactly. Some sensors are simple and cheap, while others are more precise and expensive. For our robot corral, the Time-of-Flight sensor is the perfect balance of speed, size, and cost. Great questions! Keep exploring, and you'll be building your own robots in no time!</p> <p>4o</p>"},{"location":"prompts/learning-graph/concept-dependencies/","title":"Concept Dependencies","text":"<p>Below is a three-column CSV file generated based on your request for the \"Robot Day\" event concepts. The file includes ConceptID, ConceptLabel, and Dependencies, where the Dependencies column contains a pipe-delimited list of ConceptIDs that each concept relies on for understanding. Foundational concepts such as \"Battery Types,\" \"DC Motors,\" \"Sensors,\" \"Displays,\" and \"Microcontrollers\" have no dependencies, as specified. Since the full list of 200 concepts wasn't provided, I've constructed the first 53 concepts based on a logical progression derived from the course description and extended the pattern as needed. For the remaining concepts (54\u2013200), I've indicated that the pattern continues similarly.</p>"},{"location":"prompts/learning-graph/concept-dependencies/#assumptions-and-methodology","title":"Assumptions and Methodology","text":"<ul> <li>Foundational Concepts: Concepts like \"Battery Types\" (1), \"DC Motors\" (7), \"Buttons and Switches\" (19, as a basic sensor), \"LEDs\" (30, as a basic display), and \"Definition of a Microcontroller\" (39) are treated as foundational with no dependencies.</li> <li>Dependencies: A concept depends on another if understanding the latter is necessary to grasp the former. For example, \"Basic Motor Control Circuits\" (9) depends on \"Battery Types\" (1) and \"DC Motors\" (7) because circuits require power sources and motors to function.</li> <li>Pattern: Concepts within a category (e.g., batteries, motors) often depend on the foundational concept of that category, while advanced or integrative concepts depend on multiple foundational or intermediate concepts.</li> </ul>"},{"location":"prompts/learning-graph/concept-dependencies/#csv-file-first-53-concepts","title":"CSV File (First 53 Concepts)","text":"<p>Here\u2019s the CSV content for the first 53 concepts:</p> <pre><code>ConceptID,ConceptLabel,Dependencies\n1,Battery Types,\n2,Battery Voltage and Capacity,1\n3,Series and Parallel Battery Connections,1|2\n4,Battery Safety,1|2|3\n5,Power Management in Robots,1|2|4\n6,Battery Life and Robot Performance,1|5\n7,DC Motors,\n8,Motor Drivers,7\n9,Basic Motor Control Circuits,1|7\n10,Reversing Motor Direction,9\n11,Motor Speed Control,9\n12,Gearboxes and Torque,7\n13,Switches for Motor Control,7\n14,H-Bridge Circuits,9|10\n15,Pulse Width Modulation (PWM),9|11\n16,Motor Speed Regulation,11|15\n17,Directional Control with H-Bridges,14\n18,MOSFETs in Motor Control,14\n19,Buttons and Switches,\n20,Debouncing Buttons,19\n21,Rotary Encoders,19\n22,Time-of-Flight Sensors,\n23,Ultrasonic Sensors,\n24,Compass Sensors (Magnetometers),\n25,Tilt Sensors (Accelerometers),\n26,Sensor Integration with Microcontrollers,19|39\n27,Analog vs. Digital Sensors,19\n28,Sensor Calibration,19\n29,Sensor Data Interpretation,26\n30,LEDs,\n31,RGB LEDs,30\n32,LED Strips,30\n33,OLED Displays,\n34,Smartwatch Displays,\n35,Display Interfaces (I2C, SPI),33|39\n36,Display Resolution and Color Depth,33\n37,Power Consumption of Displays,33\n38,Cost vs. Quality Trade-Offs in Displays,33\n39,Definition of a Microcontroller,\n40,Microcontroller Architecture,39\n41,Programming Microcontrollers,39\n42,Input/Output Pins,39\n43,Analog-to-Digital Converters (ADCs),39|27\n44,Digital-to-Analog Converters (DACs),39\n45,Timers and Interrupts,39\n46,Serial Communication (UART, I2C, SPI),39\n47,Embedded Systems,39\n48,Robot Control Algorithms,39|7|19\n49,Collision Avoidance Strategies,48|19\n50,User Interface for Robot Settings,30|39\n51,Observing Robot Behavior,48\n52,Interaction Between Multiple Robots,48\n53,Collision Avoidance in Practice,49\n</code></pre>"},{"location":"prompts/learning-graph/concept-dependencies/#explanation-of-selected-entries","title":"Explanation of Selected Entries","text":"<ul> <li>1, Battery Types,: Foundational, no dependencies.</li> <li>9, Basic Motor Control Circuits, 1|7: Depends on \"Battery Types\" (1) for power and \"DC Motors\" (7) as the controlled component.</li> <li>14, H-Bridge Circuits, 9|10: Depends on \"Basic Motor Control Circuits\" (9) and \"Reversing Motor Direction\" (10), as H-bridges are a method to reverse motors.</li> <li>26, Sensor Integration with Microcontrollers, 19|39: Requires understanding basic sensors (\"Buttons and Switches,\" 19) and microcontrollers (\"Definition of a Microcontroller,\" 39).</li> <li>35, Display Interfaces (I2C, SPI), 33|39: Depends on \"OLED Displays\" (33) and \"Definition of a Microcontroller\" (39) because these interfaces involve microcontroller communication.</li> <li>48, Robot Control Algorithms, 39|7|19: Integrates microcontrollers (39), motors (7), and sensors (19) for robot functionality.</li> </ul>"},{"location":"prompts/learning-graph/concept-dependencies/#for-concepts-54200","title":"For Concepts 54\u2013200","text":"<p>Since the full list of 200 concepts isn\u2019t provided, the CSV for concepts 54\u2013200 would follow a similar structure: - Within Categories: Concepts depend on the foundational concept of that category (e.g., additional battery concepts depend on 1, motor concepts on 7). - Integrative Concepts: Concepts combining multiple areas (e.g., advanced robot behaviors) depend on foundational concepts like 7, 19, 30, and 39, plus relevant intermediate concepts (e.g., 48, 49). - Examples: A concept like \"Advanced Robot Navigation\" (hypothetical ID 54) might have dependencies like <code>48|49</code>, while \"Robot Power Optimization\" (hypothetical ID 55) might depend on <code>5|6</code>.</p> <p>To extend this to 200 concepts, you would continue assigning dependencies based on the logical prerequisites within and across categories such as batteries, motors, sensors, displays, microcontrollers, and robot applications, maintaining consistency with the foundational concepts having no dependencies.</p>"},{"location":"prompts/learning-graph/concept-dependencies/#final-note","title":"Final Note","text":"<p>This CSV provides a structured representation of the first 53 concepts, with dependencies reflecting a logical learning progression. For a complete 200-line CSV, the remaining 147 concepts would need their specific ConceptLabels and Dependencies defined, following the same methodology. If you provide the full list, I can generate the exact CSV for all 200 concepts!</p>"},{"location":"prompts/learning-graph/concept-enumeration/","title":"Concept enumeration","text":""},{"location":"prompts/learning-graph/concept-enumeration/#concept-enumeration","title":"Concept Enumeration","text":"<p>Prompt</p> <p>Given the following course description, please list the 200 most important concepts labels that will be discussed at the robot day event.  Return the list of 200 concepts in a numbered list in title case format suitable for labeling a concept graph.  Use short concept names when possible and avoid putting comma in the concept labels.</p> <p>Only include concepts that can be explained to a junior high-school student.</p>"},{"location":"prompts/learning-graph/concept-enumeration/#anthropic-claude-37-sonnet","title":"Anthropic Claude 3.7 Sonnet","text":"<p>I'll create a list of 200 important concept labels for the Robot Day event, making sure they're in title case, numbered, and appropriate for junior high school students. These concepts are derived from the course description you provided:</p> <p>Robot Day Concept Labels</p> <p>I've created a comprehensive list of 200 concept labels related to the Robot Day event. These concepts cover all the key areas mentioned in the course description, including robot components (batteries, motors, sensors, displays, microcontrollers), programming concepts, engineering principles, and learning objectives.</p> <p>All concepts are presented in title case format without commas, using concise terminology that would be understandable to junior high school students. The concepts progress from the basic elements introduced at each table to more complex ideas that integrate these components into a functioning robot system.</p> <p>The list includes both the physical aspects of robotics (like \"Motor Circuits\" and \"Sensor Placement\") and the conceptual understanding needed (such as \"Decision Making\" and \"If-Then Rules\"), creating a well-rounded collection of terms for your concept graph.</p>"},{"location":"prompts/learning-graph/concept-enumeration/#robot-day-concept-labels","title":"Robot Day Concept Labels","text":"<ol> <li>Robot Day</li> <li>STEM Education</li> <li>Coding Basics</li> <li>Robotics Introduction</li> <li>Challenge Format</li> <li>Robot Expert Sticker</li> <li>Challenge Tables</li> <li>Collision Avoidance</li> <li>Microcontroller Boards</li> <li>RP2040 Board</li> <li>Welcome Table</li> <li>Participant Checklist</li> <li>Battery Types</li> <li>Battery Polarity</li> <li>Positive Terminal</li> <li>Negative Terminal</li> <li>Dead Batteries</li> <li>Battery Testing</li> <li>Rechargeable Batteries</li> <li>Power Cords</li> <li>Wireless Operation</li> <li>Robot Power Source</li> <li>DC Motors</li> <li>Motor Circuits</li> <li>Red Wires</li> <li>Black Wires</li> <li>Circuit Completion</li> <li>Conducting Wire</li> <li>Motor Direction</li> <li>Reverse Direction</li> <li>Motor Control</li> <li>Direction Switch</li> <li>H-Bridge Circuit</li> <li>Motor Speed</li> <li>Power Adjustment</li> <li>Speed Control</li> <li>Power Knob</li> <li>Pulse Width Modulation</li> <li>PWM Basics</li> <li>Sensor Types</li> <li>Button Sensors</li> <li>Breadboard Basics</li> <li>LED Indicators</li> <li>Rotary Encoders</li> <li>Knob Controls</li> <li>Time-of-Flight Sensors</li> <li>Distance Measurement</li> <li>Ultrasonic Sensors</li> <li>Sound Waves</li> <li>Compass Sensors</li> <li>Direction Finding</li> <li>Tilt Sensors</li> <li>Accelerometers</li> <li>Motion Detection</li> <li>Display Types</li> <li>Single LEDs</li> <li>RGB LEDs</li> <li>Color Mixing</li> <li>LED Strips</li> <li>Character Displays</li> <li>Graphic Displays</li> <li>OLED Technology</li> <li>Smartwatch Displays</li> <li>Display Cost</li> <li>Display Quality</li> <li>Cost-Quality Tradeoff</li> <li>Microcontroller Basics</li> <li>Program Control</li> <li>System Rules</li> <li>Collision Detection</li> <li>Wall Avoidance</li> <li>Turning Rules</li> <li>Proximity Rules</li> <li>Robot Settings</li> <li>Robot Corral</li> <li>Border Fence</li> <li>Robot Activation</li> <li>Power Switch</li> <li>Rule Activation</li> <li>Robot Movement</li> <li>Path Blocking</li> <li>Direction Change</li> <li>Electrical Circuits</li> <li>Circuit Diagrams</li> <li>Power Flow</li> <li>Signal Processing</li> <li>Input Devices</li> <li>Output Devices</li> <li>Control Systems</li> <li>Feedback Loops</li> <li>Autonomous Movement</li> <li>Robot Navigation</li> <li>Obstacle Detection</li> <li>Robot Programming</li> <li>Algorithm Basics</li> <li>Decision Making</li> <li>If-Then Rules</li> <li>Conditional Logic</li> <li>Sensor Integration</li> <li>Data Processing</li> <li>Response Time</li> <li>Robot Mobility</li> <li>Wheel Systems</li> <li>Drive Motors</li> <li>Motor Mounts</li> <li>Chassis Design</li> <li>Robot Frame</li> <li>Sensor Placement</li> <li>Power Management</li> <li>Battery Life</li> <li>Energy Efficiency</li> <li>Voltage Levels</li> <li>Current Flow</li> <li>Resistance Concepts</li> <li>Short Circuits</li> <li>Circuit Protection</li> <li>Hands-on Learning</li> <li>Interactive Displays</li> <li>Exploration Method</li> <li>Device Interface</li> <li>User Controls</li> <li>Visual Feedback</li> <li>Audio Feedback</li> <li>Tactile Feedback</li> <li>System Integration</li> <li>Component Connections</li> <li>Wire Management</li> <li>Robot Assembly</li> <li>Troubleshooting Basics</li> <li>Problem Solving</li> <li>Critical Thinking</li> <li>Design Process</li> <li>Engineering Concepts</li> <li>Technology Applications</li> <li>Real-world Problems</li> <li>Practical Solutions</li> <li>Maker Movement</li> <li>DIY Robotics</li> <li>Low-cost Computing</li> <li>Affordable Technology</li> <li>Educational Robots</li> <li>Learning Objectives</li> <li>Skill Development</li> <li>Technical Vocabulary</li> <li>Tool Usage</li> <li>Safety Guidelines</li> <li>Electronic Components</li> <li>Hardware Basics</li> <li>Software Basics</li> <li>Robot Behavior</li> <li>Environmental Awareness</li> <li>Spatial Reasoning</li> <li>Measurement Skills</li> <li>Scientific Method</li> <li>Experimental Design</li> <li>Variable Control</li> <li>Data Collection</li> <li>Result Analysis</li> <li>Team Collaboration</li> <li>Project Management</li> <li>Communication Skills</li> <li>Technology Ethics</li> <li>Digital Literacy</li> <li>Technical Documentation</li> <li>Instruction Following</li> <li>Creative Problem Solving</li> <li>Innovation Process</li> <li>Debugging Skills</li> <li>Technical Systems</li> <li>Mechanical Systems</li> <li>Electrical Systems</li> <li>Computer Systems</li> <li>Input Processing</li> <li>Output Generation</li> <li>Logic Gates</li> <li>Binary Concepts</li> <li>Digital Signals</li> <li>Analog Signals</li> <li>Signal Conversion</li> <li>Timing Control</li> <li>Sequential Operations</li> <li>Parallel Operations</li> <li>Robot Intelligence</li> <li>Artificial Intelligence Basics</li> <li>Machine Learning Introduction</li> <li>Pattern Recognition</li> <li>Environmental Mapping</li> <li>Spacial Awareness</li> <li>Task Automation</li> <li>Process Efficiency</li> <li>Engineering Constraints</li> <li>Design Limitations</li> <li>Performance Optimization</li> <li>Technology Evolution</li> <li>Future Applications</li> <li>Career Pathways</li> <li>Technology Impact</li> <li>Innovation Mindset</li> <li>Continuous Learning</li> <li>STEM Careers</li> </ol> <p>Please double-check responses.](https://support.anthropic.com/en/articles/8525154-claude-is-providing-incorrect-or-misleading-responses-what-s-going-on)</p>"},{"location":"prompts/learning-graph/concept-enumeration/#chatgpt-o1-response","title":"ChatGPT o1 Response","text":"<p>Below is a list of 200 important and junior-high-friendly concepts drawn from the Robot Day course description \ue200cite\ue202turn0file0\ue201. They are presented in numbered, title-case format suitable for a concept graph.</p> <ol> <li>Introduction To Robot Day</li> <li>Purpose Of The Event</li> <li>Inspiring Interest In STEM</li> <li>Defining STEM</li> <li>Hands-On Learning Approach</li> <li>Engaging 4th To 9th Graders</li> <li>Importance Of Curiosity In Robotics</li> <li>Greeting Participants At The Door</li> <li>Offering A Robot Challenge</li> <li>Earning A Robot Expert Sticker</li> </ol> <p>Table 1: Welcome Table 11. Checklist Of Stations 12. Writing Your Name On The Checklist 13. Meeting The Host Greeter 14. Event Flow Overview 15. Collecting Completion Stamps</p> <p>Table 2: Robot Batteries 16. Basics Of Robot Batteries 17. Battery Polarity 18. Understanding Battery Terminals 19. Why Polarity Matters 20. Identifying Dead Batteries 21. How To Test A Battery 22. Rechargeable Battery Advantages 23. Power Cords Vs. Battery Power 24. Why Robots Need Batteries 25. Voltage In A Battery 26. Current And Power Flow 27. Battery Safety Tips 28. Environmental Impact Of Batteries 29. Storing Batteries Properly 30. Different Battery Chemistries 31. Disposable Vs. Rechargeable Cells 32. Handling Leaking Batteries 33. Importance Of Battery Voltage Rating 34. Color-Coded Battery Wires 35. Avoiding Short Circuits 36. Role Of Battery Packs 37. Connecting Batteries To A Robot 38. Checking Battery Life 39. When To Replace Robot Batteries 40. Proper Battery Disposal 41. Red Wires For Positive Connections 42. Black Wires For Negative Connections 43. Conserving Battery Power 44. Using A Multimeter For Testing 45. Practical Examples Of Robot Power</p> <p>Table 3: Robot Motors 46. Definition Of A DC Motor 47. How Electricity Creates Motion 48. Using A Battery And Motor Circuit 49. Motor Wires And Polarity 50. Reversing Motor Direction 51. Observing Motor Spin 52. Connecting Wires Correctly 53. Conductive Materials In Circuits 54. Importance Of Proper Wiring 55. Common Uses For DC Hobby Motors 56. Motor Speed And Voltage 57. How Torque Relates To Motor Power 58. Testing Different Motor Speeds 59. Holding The Motor Shaft Carefully 60. Preventing Motor Overheating 61. Identifying Motor Noise 62. Basic Motor Troubleshooting 63. Series Vs. Parallel Circuits (Motor Context) 64. Intro To Gears And Motor Output 65. Safety Precautions With Spinning Motors 66. Motor Housing And Protection 67. Comparing Different Motor Sizes 68. Using A Switch To Turn Motors On/Off 69. Observing Direction Changes With Wire Swaps 70. Learning From Simple Motor Experiments</p> <p>Table 4: Controlling Motors 71. Why We Need Motor Control 72. Single Switch Direction Reversal 73. The Concept Of An H-Bridge 74. How An H-Bridge Lets Motors Reverse 75. Changing Motor Speed By Adjusting Power 76. The Power Knob As A Controller 77. Introduction To Pulse Width Modulation (PWM) 78. Why PWM Helps Control Speed 79. Forward And Reverse Switches 80. Avoiding Motor Burnout With Proper Control 81. Switch Safety And Insulation 82. Using A Motor Driver Chip 83. Recognizing Overvoltage Risks 84. Measuring Motor Current 85. Feedback Loops In Motor Control 86. Open-Loop Vs. Closed-Loop Systems 87. Understanding Motor Brake Mode 88. Combining Multiple Motors 89. Simple Robotics Steering Concepts 90. Avoiding Sudden Direction Changes 91. Observing Switching Noise 92. Basic Diagram Of An H-Bridge 93. Identifying Transistors In Motor Control 94. Using Heat Sinks In Motor Circuits 95. Common Mistakes With Motor Polarity 96. Learning Through Trial And Error</p> <p>Table 5: Sensors 97. Role Of Sensors In Robotics 98. How A Button Works 99. Placing Buttons On A Breadboard 100. Using LEDs As Signal Indicators 101. Understanding A Breadboard Layout 102. Knobs Vs. Rotary Encoders 103. What Is A Time-Of-Flight Sensor 104. Measuring Distance With Light Pulses 105. Basics Of Ultrasonic Sensors 106. How Sound Waves Detect Distance 107. Compass Sensor For Direction 108. Reading Earth's Magnetic Field 109. Tilt And Turn Sensors (Accelerometers) 110. Detecting Movement And Angle 111. Digital Vs. Analog Sensor Signals 112. Importance Of Sensor Calibration 113. Combining Multiple Sensors For Accuracy 114. Interpreting Sensor Readings In Code 115. Filtering Out Sensor Noise 116. Using Sensors To Prevent Collisions 117. Sensor Safety And Handling 118. Connecting Sensors To A Circuit Board 119. Understanding Signal Voltage Levels 120. Limitations Of Basic Sensors 121. Real-Life Uses Of Distance Sensors 122. Experimenting With Different Sensor Types 123. Hands-On Sensor Demonstrations 124. Practical Sensor Troubleshooting 125. The Fun Of Making Sensors Respond</p> <p>Table 6: Displays 126. Purpose Of A Display In Robotics 127. Basics Of LEDs (Light-Emitting Diodes) 128. Red, Green, And Blue LED Colors 129. Combining RGB For Different Hues 130. LED Strips And Their Uses 131. Adjusting Brightness With A Potentiometer 132. Character Displays (Like LCDs) 133. Graphic Displays And Pixels 134. What Is An OLED Display 135. Advantages Of OLED Technology 136. Smartwatch Displays In Robotics 137. Comparing Display Qualities 138. Cost Vs. Performance In Displays 139. Power Consumption Factors 140. Visual Feedback For Robot Operators 141. How A Display Helps Debug Code 142. Reading Sensor Data On A Screen 143. Display Safety And Handling 144. Creative Uses Of LED Arrays 145. Understanding Display Resolution 146. Future Trends In Robotics Displays</p> <p>Table 7: Microcontrollers 147. Definition Of A Microcontroller 148. How It Differs From A Full Computer 149. Writing A Program For A Robot 150. Basics Of Programming Logic 151. Collision-Avoidance Robot Explanation 152. Why Robots Avoid Crashing 153. Sensor Inputs For Collision Detection 154. Motor Outputs For Motion Control 155. Event-Driven Programming (If-This-Then-That) 156. Feedback Loops For Robot Movement 157. Adjusting Robot Behavior With Code 158. Debugging Robot Software 159. Examples Of Common Microcontroller Boards 160. Low-Power Operation Benefits 161. Storing Programs In Flash Memory 162. Importance Of Firmware Updates 163. How Rules Make Robots \"Think\" 164. Simple Code For Turning When Near A Wall 165. Combining Sensors And Motors In Code 166. Practicing Safe Programming (No Shorts)</p> <p>Robot Corral 167. Purpose Of A Robot Corral 168. Keeping Robots In A Defined Space 169. Dimensions Of The Corral (10x10 Feet) 170. Six-Inch Border Fence For Containment 171. Turning On The Robot Power Switch 172. Observing The Robot Moving Inside The Corral 173. Blocking The Robot's Path With Your Hand 174. Watching The Robot Turn Away From Obstacles 175. Using Sensors To Detect Walls 176. Exploring Different Robot Behaviors 177. Tips For Preventing Robot Collisions 178. Encouraging Students To Step Into The Corral 179. Hands-On Interaction With Moving Robots 180. Demonstrating Collision-Avoidance In Action 181. Common Malfunctions In A Robot Corral 182. Restarting A Robot When Needed 183. Group Learning And Collaboration 184. Respecting The Robots And Other Students 185. Gathering Observations For Future Projects 186. Powering Off Robots Safely</p> <p>Additional Robotics Concepts 187. Defining A Robot In Simple Terms 188. Mechanical Systems Vs. Electrical Systems 189. Simple Gears And Gear Ratios 190. Importance Of Balance In Robot Design 191. Prototyping With Low-Cost Parts 192. Cytron Maker Pi RP2040 Board Basics 193. Why Low-Cost Microcontrollers Are Accessible 194. Setting Up A Basic Robot Chassis 195. Wire Management And Tie-Downs 196. Steps To Avoid Short Circuits 197. Using A Screwdriver For Robot Assembly 198. Understanding Basic Robot Frameworks 199. Testing Robot Functions Step-By-Step 200. Taking The Next Steps In Robotics Exploration</p> <p>These 200 items capture key themes---ranging from batteries, motors, and sensors to displays, microcontrollers, and the interactive robot corral---while remaining approachable to junior high-school learners \ue200cite\ue202turn0file0\ue201.</p>"},{"location":"prompts/learning-graph/concept-enumeration/#grok-3-response","title":"Grok-3 Response","text":"<p>Based on the \"Robot Day\" course description, I have identified the 200 most important concepts likely to be discussed during the event. This single-day event focuses on building a collision avoidance robot using components centered around a low-cost microcontroller board, such as the Cytron Maker Pi RP2040, with a total parts cost of approximately $19. The event features six tables, each highlighting different aspects of the robot\u2019s components, and a robot corral where participants can observe the robots in action. Below is a numbered list of these concepts in title case format, suitable for labeling a concept graph.</p>"},{"location":"prompts/learning-graph/concept-enumeration/#1200-key-concepts-for-robot-day","title":"1\u2013200: Key Concepts for Robot Day","text":"<ol> <li>Battery Types </li> <li>Battery Voltage and Capacity </li> <li>Series and Parallel Battery Connections </li> <li>Battery Safety </li> <li>Power Management in Robots </li> <li>Battery Life and Robot Performance </li> <li>DC Motors </li> <li>Motor Drivers </li> <li>Basic Motor Control Circuits </li> <li>Reversing Motor Direction </li> <li>Motor Speed Control </li> <li>Gearboxes and Torque </li> <li>Switches for Motor Control </li> <li>H-Bridge Circuits </li> <li>Pulse Width Modulation (PWM) </li> <li>Motor Speed Regulation </li> <li>Directional Control with H-Bridges </li> <li>MOSFETs in Motor Control </li> <li>Buttons and Switches </li> <li>Debouncing Buttons </li> <li>Rotary Encoders </li> <li>Time-of-Flight Sensors </li> <li>Ultrasonic Sensors </li> <li>Compass Sensors (Magnetometers) </li> <li>Tilt Sensors (Accelerometers) </li> <li>Sensor Integration with Microcontrollers </li> <li>Analog vs. Digital Sensors </li> <li>Sensor Calibration </li> <li>Sensor Data Interpretation </li> <li>LEDs (Light Emitting Diodes) </li> <li>RGB LEDs </li> <li>LED Strips </li> <li>OLED Displays </li> <li>Smartwatch Displays </li> <li>Display Interfaces (I2C, SPI) </li> <li>Display Resolution and Color Depth </li> <li>Power Consumption of Displays </li> <li>Cost vs. Quality Trade-Offs in Displays </li> <li>Definition of a Microcontroller </li> <li>Microcontroller Architecture </li> <li>Programming Microcontrollers </li> <li>Input/Output Pins </li> <li>Analog-to-Digital Converters (ADCs) </li> <li>Digital-to-Analog Converters (DACs) </li> <li>Timers and Interrupts </li> <li>Serial Communication (UART, I2C, SPI) </li> <li>Embedded Systems </li> <li>Robot Control Algorithms </li> <li>Collision Avoidance Strategies </li> <li>User Interface for Robot Settings </li> <li>Observing Robot Behavior </li> <li>Interaction Between Multiple Robots </li> <li>Collision Avoidance in Practice </li> <li>Sensor Feedback Loops </li> <li>Real-Time Control Systems </li> <li>Battery Chemistry </li> <li>Rechargeable vs. Non-Rechargeable Batteries </li> <li>Battery Holders and Connectors </li> <li>Voltage Regulation </li> <li>Current Draw and Motor Performance </li> <li>Battery Monitoring </li> <li>Brushless DC Motors </li> <li>Stepper Motors </li> <li>Servo Motors </li> <li>Motor Encoders for Feedback </li> <li>Motor Sizing for Robots </li> <li>Power Transmission (Belts, Gears) </li> <li>Transistors in Motor Control </li> <li>Relays for Motor Switching </li> <li>Motor Driver ICs </li> <li>PWM Frequency and Duty Cycle </li> <li>Closed-Loop Motor Control </li> <li>PID Control for Motors </li> <li>Pull-Up and Pull-Down Resistors </li> <li>Interrupt-Driven Button Presses </li> <li>Incremental vs. Absolute Encoders </li> <li>Quadrature Encoding </li> <li>Laser-Based Distance Measurement </li> <li>I2C Communication with Sensors </li> <li>Sound Wave Propagation </li> <li>Trigger and Echo Pins </li> <li>Magnetic Field Detection </li> <li>Calibration for Hard and Soft Iron Effects </li> <li>Accelerometer Principles </li> <li>Gravity Vector and Orientation </li> <li>Sensor Fusion </li> <li>Noise Filtering </li> <li>Sensor Mounting and Placement </li> <li>Current Limiting Resistors </li> <li>Charlieplexing </li> <li>Color Mixing in RGB LEDs </li> <li>PWM for Color Control </li> <li>Addressable LEDs (e.g., WS2812) </li> <li>Data Protocols for LED Strips </li> <li>Pixel Addressing in OLEDs </li> <li>Graphics Libraries for Displays </li> <li>Touchscreen Interfaces </li> <li>Wearable Display Considerations </li> <li>Refresh Rates </li> <li>Power Saving Techniques for Displays </li> <li>Microcontroller Selection Criteria </li> <li>Clock Speed and Performance </li> <li>Memory Types (RAM, Flash) </li> <li>Bootloaders </li> <li>Firmware Updates </li> <li>Real-Time Operating Systems (RTOS) </li> <li>State Machines in Robot Control </li> <li>Finite State Automata </li> <li>Behavior-Based Robotics </li> <li>Path Planning Algorithms </li> <li>Obstacle Detection and Avoidance </li> <li>Localization and Mapping (SLAM) </li> <li>Sensor Data Processing </li> <li>Actuator Control </li> <li>Feedback Loops </li> <li>Control System Stability </li> <li>Embedded Programming Languages </li> <li>Development Environments (IDEs) </li> <li>Debugging Techniques </li> <li>Version Control for Firmware </li> <li>Multi-Robot Coordination </li> <li>Emergent Behavior </li> <li>Human-Robot Interaction </li> <li>Safety in Robot Environments </li> <li>Performance Metrics for Robots </li> <li>RP2040 Microcontroller </li> <li>Dual-Core Processing </li> <li>Programmable I/O (PIO) </li> <li>USB Connectivity </li> <li>GPIO Pins </li> <li>Analog Inputs </li> <li>PWM Outputs </li> <li>I2C and SPI Buses </li> <li>Onboard Sensors or Features </li> <li>Braitenberg Vehicles </li> <li>Potential Fields Method </li> <li>Vector Field Histogram </li> <li>Bug Algorithms </li> <li>Wall Following </li> <li>Obstacle Detection Thresholds </li> <li>Hands-On Learning </li> <li>Inquiry-Based Learning </li> <li>STEM Education </li> <li>Robotics as a Teaching Tool </li> <li>Accessibility in Robotics </li> <li>Inclusive Design </li> <li>Cost-Effective Robotics </li> <li>Open-Source Hardware </li> <li>DIY Robotics </li> <li>Component Sourcing </li> <li>Budgeting for Robot Projects </li> <li>Gamification in Education </li> <li>Motivation Through Challenges </li> <li>Reward Systems </li> <li>Participant Engagement Strategies </li> <li>Event Planning for STEM Outreach </li> <li>Space Configuration for Interactive Exhibits </li> <li>Facilitator Training </li> <li>Volunteer Management </li> <li>Safety Protocols for Public Events </li> <li>Definition of a Robot </li> <li>History of Robotics </li> <li>Applications of Robotics </li> <li>Robotics in Industry </li> <li>Robotics in Healthcare </li> <li>Robotics in Space Exploration </li> <li>Ethical Considerations in Robotics </li> <li>Robotics and AI </li> <li>Machine Learning in Robotics </li> <li>Computer Vision in Robotics </li> <li>Proximity Sensing </li> <li>Range Finding </li> <li>Object Detection </li> <li>Environment Mapping </li> <li>Orientation Detection </li> <li>Heading Calculation </li> <li>Navigation </li> <li>Inclinometer Applications </li> <li>Stability Control </li> <li>Gesture Recognition </li> <li>Status Indicators </li> <li>User Feedback </li> <li>Debugging Interfaces </li> <li>Data Visualization </li> <li>Reading Sensor Data </li> <li>Decision-Making Algorithms </li> <li>Motor Control Based on Sensor Input </li> <li>Threshold Settings for Obstacle Detection </li> <li>Speed Adjustment Based on Distance </li> <li>Turning Strategies </li> <li>State Management in Robots </li> <li>Error Handling </li> <li>Power Management for Longevity </li> <li>Wireless Communication </li> <li>Bumper Switches </li> <li>Whisker Sensors </li> <li>Infrared Sensors </li> <li>Analog Sensor Reading </li> <li>Digital Sensor Reading </li> <li>Interrupt Service Routines</li> </ol>"},{"location":"prompts/learning-graph/concept-enumeration/#explanation","title":"Explanation","text":"<p>These concepts span the technical components of the collision avoidance robot (e.g., batteries, motors, sensors, microcontrollers), control mechanisms (e.g., H-bridges, PWM), and educational aspects of the event (e.g., STEM education, hands-on learning). They are derived from the descriptions of the tables and the robot corral, focusing on both foundational robotics principles and specific technologies like the Cytron Maker Pi RP2040. The list also includes practical applications (e.g., collision avoidance strategies) and event-related topics (e.g., participant engagement), ensuring a comprehensive representation of the Robot Day experience. Each concept is phrased in title case for consistency and clarity in a concept graph context.</p>"},{"location":"sims/pwm/","title":"Pulse-Width Modulation","text":"<p>Run the Pulse-Width Modulation Demo</p> <p>Pulse-width modulation is the way for microcontrollers to send a precise signal to a  device such as a motor controller to control motor speed.  PWM signals can also be used to change the brightness of an LED. This simulation has a slider that allows the user to change the \"duty cycle\" of a waveform.  The simulation is a bright green line on a black background, just like the old CRT oscilloscope displays.</p>"},{"location":"sims/pwm/#sample-chatgpt-prompt","title":"Sample ChatGPT Prompt","text":"<pre><code>Generate a p5.js sketch file of a simulation of a static pulse width\n   modulation (PWM) waveform on a 600x300 canvas.\nAdd a range control slider to adjust the Duty Cycle of the waveform.\nMake the default Duty Cycle be 50%.\nThe min should be 0% and the max should be 100%.\nPlace the range control slider at the bottom of the canvas.\nMake the leftSliderMargin be 155.\nMake sure the range control slider has a width of canvasWidth-leftSliderMargin-20 using the \n   style attribute.\nAt the end of the draw() function add a text() function that displays\n   the label and value of the duty cycle.\n</code></pre> <p>I have tested this prompt several times using GPT-4 and it seems to work very well except for the precise layout of the duty cycle label, value and slider positioning. I had to tweak these by hand.</p> <p>Edit This MicroSim Using the P5.js Editor</p>"},{"location":"sims/pwm/#sample-response","title":"Sample Response","text":"<pre><code>/// Pulse Wave Modulation (PWM) simulation\n// Made to render like an old oscilloscope - lime green on black\n// Most of this sim was generated by GPT-4 with some cleanup on placement of the slider\nlet canvasWidth = 600;\nlet canvasHeight = 200;\nlet dutyCycleSlider;\nlet dutyCycle = 0.5; // Initialize to 50%\nlet cycles = 6;\nlet waveHeight = canvasHeight/3;\nlet leftSliderMargin = 155; // at 16 point font\n\nfunction setup() {\n  const canvas = createCanvas(canvasWidth, canvasHeight);\n  // uncomment if you are placing in an HTML page\n  // canvas.parent('canvas-container');\n  textSize(16);\n\n  dutyCycleSlider = createSlider(0, 1, 0.5, 0.01); // Range from 0 to 1, default value 0.5, step size 0.01\n  dutyCycleSlider.position(leftSliderMargin, canvasHeight - 35); // Position slider\n  dutyCycleSlider.style('width', canvasWidth - leftSliderMargin - 20 + 'px'); // Set width of slider\n}\n\nfunction draw() {\n  background('black');\n\n  // Update duty cycle\n  dutyCycle = dutyCycleSlider.value();\n\n  // Set stroke for waveform\n  stroke('limegreen');\n  // disable the fill in the waveform\n  noFill();\n  // make the line be double wide\n  strokeWeight(2);\n\n  // Generate PWM waveform\n  beginShape();\n  for (let x = 0; x &lt; width; x++) {\n    // Map x to time period of waveform\n    let t = map(x, 0, width, 0, TWO_PI * cycles);\n\n    // Calculate value of waveform at this point in time\n    // Draw high if in duty cycle, low otherwise\n    let y = (sin(t) &gt; 2 * dutyCycle - 1) ? \n        2*height/3 : height/3; \n\n    // Add vertex to waveform\n    vertex(x, y);\n  }\n  endShape();\n\n  // Display duty cycle\n  fill('white');\n  noStroke();\n  // Display duty cycle as percentage\n  text(\"Duty Cycle: \" + nf(dutyCycle*100, 0, 0) + \"%\", 20, height - 20); \n}\n</code></pre>"},{"location":"sims/pwm/#key-learnings-from-the-simulation","title":"Key Learnings from the Simulation","text":"<ol> <li>We can use the <code>map()</code> function to transform the x coordinate into the time period of a waverform (t.)</li> <li>We can draw a square wave using a <code>sin()</code> function with a threshold test.</li> <li>We can use the <code>beginShape()</code> and <code>endShape()</code> around as set of <code>vertex()</code> point placements to generate waveforms.</li> <li>We can use the \"number format\" function <code>nf()</code>  to display the percentage without a decimal point.</li> </ol>"},{"location":"sims/pwm/#lesson-plan","title":"Lesson Plan","text":""},{"location":"sims/pwm/#lesson-plan-prompt","title":"Lesson Plan Prompt","text":"<pre><code>I have a webpage that simulates a pulse-width-modulation waveform. \nThe page has a slider that allows students to change the duty cycle from 0% to 100%.\nWhen the students change the slider, the waveform is updated with the duty cycle.\nGenerate a lesson plan for a 9th-grade robotics class that uses this simulation.\nFor follow up activities, we have Raspberry Pi Picos that we program with MicroPython.\nReturn the response in a single raw markdown file.\n</code></pre>"},{"location":"sims/pwm/#lesson-plan-understanding-pulse-width-modulation-in-robotics","title":"Lesson Plan: Understanding Pulse-Width Modulation in Robotics","text":""},{"location":"sims/pwm/#objective","title":"Objective:","text":"<p>Students will understand the concept of PWM and its application in controlling robotic components like motors and LEDs.</p>"},{"location":"sims/pwm/#materials-needed","title":"Materials Needed:","text":"<ul> <li>Computers with internet access for the PWM simulation webpage.</li> <li>Projector for demonstrations.</li> <li>Optional: Physical components such as a small motor, LED, and Arduino for real-world demonstration.</li> </ul>"},{"location":"sims/pwm/#duration","title":"Duration:","text":"<p>1 hour</p>"},{"location":"sims/pwm/#lesson-outline","title":"Lesson Outline:","text":""},{"location":"sims/pwm/#1-introduction-to-pwm-15-minutes","title":"1. Introduction to PWM (15 minutes)","text":"<ul> <li>Begin with a brief overview of PWM and its significance in robotics.</li> <li>Explain key terms: duty cycle, frequency, analog vs. digital signals.</li> </ul>"},{"location":"sims/pwm/#2-demonstration-of-pwm-simulation-10-minutes","title":"2. Demonstration of PWM Simulation (10 minutes)","text":"<ul> <li>Project the PWM simulation on the screen.</li> <li>Show how changing the duty cycle affects the waveform.</li> <li>Relate this to how it would affect a motor's speed or an LED's brightness.</li> </ul>"},{"location":"sims/pwm/#3-hands-on-activity-with-the-simulation-20-minutes","title":"3. Hands-On Activity with the Simulation (20 minutes)","text":"<ul> <li>Students will use the simulation on their computers.</li> <li>Tasks:</li> <li>Set the duty cycle to various levels (0%, 25%, 50%, 75%, 100%) and observe changes.</li> <li>Students note their observations regarding the waveform changes.</li> </ul>"},{"location":"sims/pwm/#4-real-world-application-discussion-10-minutes","title":"4. Real-World Application Discussion (10 minutes)","text":"<ul> <li>Discuss how PWM is used in real-world robotics.</li> <li>If available, demonstrate using a motor or LED with an Arduino.</li> <li>Encourage students to think of examples where PWM might be used in everyday technology.</li> </ul>"},{"location":"sims/pwm/#5-reflection-and-qa-5-minutes","title":"5. Reflection and Q&amp;A (5 minutes)","text":"<ul> <li>Encourage students to ask questions.</li> <li>Discuss the importance of PWM in precise control in robotics.</li> </ul>"},{"location":"sims/pwm/#assessment","title":"Assessment:","text":"<ul> <li>Students will submit a brief report on their findings from the simulation.</li> <li>Include a few quiz questions at the end of the session to gauge understanding.</li> </ul>"},{"location":"sims/pwm/#extension-activity","title":"Extension Activity:","text":"<ul> <li>For advanced students or as a follow-up lesson, introduce a Python program that uses PWM to control a motor speed using a motor driver chip such as an L293D or control an LED brightness.</li> </ul>"},{"location":"sims/pwm/#notes","title":"Notes:","text":"<ul> <li>Ensure that all students understand the basic concepts before moving to the hands-on activity.</li> <li>Assist students who might have difficulty with the simulation or concepts.</li> <li>Encourage group discussions and peer learning.</li> </ul>"}]}